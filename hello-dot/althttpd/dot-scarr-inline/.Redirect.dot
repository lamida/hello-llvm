digraph "CFG for 'Redirect' function" {
	label="CFG for 'Redirect' function";

	Node0x557a63c89e80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x557a63c89e80\":\l  %4 = alloca i8*, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i8* %0, i8** %4, align 8\l  store i32 %1, i32* %5, align 4\l  store i32 %2, i32* %6, align 4\l  store i32 %3, i32* %7, align 4\l  %8 = load i32, i32* %5, align 4\l  switch i32 %8, label %\"0x557a63c89ed0\" [\l    i32 301, label %\"0x557a63c8a390\"\l    i32 308, label %\"0x557a63c8a3e0\"\l  ]\l|{<s0>def|<s1>301|<s2>308}}"];
	Node0x557a63c89e80:s0 -> Node0x557a63c89ed0;
	Node0x557a63c89e80:s1 -> Node0x557a63c8a390;
	Node0x557a63c89e80:s2 -> Node0x557a63c8a3e0;
	Node0x557a63c8a390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{\"0x557a63c8a390\":                                 \l  call void @StartResponse(i8* getelementptr inbounds ([23 x i8], [23 x i8]*\l... @.str.463, i64 0, i64 0))\l  br label %\"0x557a63c8a6d0\"\l}"];
	Node0x557a63c8a390 -> Node0x557a63c8a6d0;
	Node0x557a63c8a3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{\"0x557a63c8a3e0\":                                 \l  call void @StartResponse(i8* getelementptr inbounds ([23 x i8], [23 x i8]*\l... @.str.464, i64 0, i64 0))\l  br label %\"0x557a63c8a6d0\"\l}"];
	Node0x557a63c8a3e0 -> Node0x557a63c8a6d0;
	Node0x557a63c89ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{\"0x557a63c89ed0\":                                 \l  call void @StartResponse(i8* getelementptr inbounds ([23 x i8], [23 x i8]*\l... @.str.465, i64 0, i64 0))\l  br label %\"0x557a63c8a6d0\"\l}"];
	Node0x557a63c89ed0 -> Node0x557a63c8a6d0;
	Node0x557a63c8a6d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x557a63c8a6d0\":                                 \l  %9 = load i8*, i8** @zServerPort, align 8\l  %10 = icmp eq i8* %9, null\l  br i1 %10, label %\"0x557a63c8ac70 - Exit Point\", label %\"0x557a63c8acc0\"\l|{<s0>T|<s1>F}}"];
	Node0x557a63c8a6d0:s0 -> Node0x557a63c8ac70;
	Node0x557a63c8a6d0:s1 -> Node0x557a63c8acc0;
	Node0x557a63c8acc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e1675170",label="{\"0x557a63c8acc0\":                                 \l  %11 = load i8*, i8** @zServerPort, align 8\l  %12 = getelementptr inbounds i8, i8* %11, i64 0\l  %13 = load i8, i8* %12, align 1\l  %14 = sext i8 %13 to i32\l  %15 = icmp eq i32 %14, 0\l  br i1 %15, label %\"0x557a63c8ac70 - Exit Point\", label %\"0x557a63c8afb0 -\l... Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x557a63c8acc0:s0 -> Node0x557a63c8ac70;
	Node0x557a63c8acc0:s1 -> Node0x557a63c8afb0;
	Node0x557a63c8afb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{\"0x557a63c8afb0 - Exit Point\":                    \l  %16 = load i8*, i8** @zServerPort, align 8\l  %17 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([3 x i8], [3 x\l... i8]* @.str.378, i64 0, i64 0))\l  %18 = icmp eq i32 %17, 0\l  br i1 %18, label %\"0x557a63c8ac70 - Exit Point\", label %\"0x557a63c8b2e0 -\l... Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x557a63c8afb0:s0 -> Node0x557a63c8ac70;
	Node0x557a63c8afb0:s1 -> Node0x557a63c8b2e0;
	Node0x557a63c8ac70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{\"0x557a63c8ac70 - Exit Point\":                    \l  %19 = load i8*, i8** @zHttp, align 8\l  %20 = load i8*, i8** @zServerName, align 8\l  %21 = load i8*, i8** %4, align 8\l  %22 = load i8*, i8** @zQuerySuffix, align 8\l  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24\l... x i8]* @.str.466, i64 0, i64 0), i8* %19, i8* %20, i8* %21, i8* %22)\l  %24 = load i32, i32* @nOut, align 4\l  %25 = add nsw i32 %24, %23\l  store i32 %25, i32* @nOut, align 4\l  br label %\"0x557a63c8b810\"\l}"];
	Node0x557a63c8ac70 -> Node0x557a63c8b810;
	Node0x557a63c8b2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{\"0x557a63c8b2e0 - Exit Point\":                    \l  %26 = load i8*, i8** @zHttp, align 8\l  %27 = load i8*, i8** @zServerName, align 8\l  %28 = load i8*, i8** @zServerPort, align 8\l  %29 = load i8*, i8** %4, align 8\l  %30 = load i8*, i8** @zQuerySuffix, align 8\l  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27\l... x i8]* @.str.467, i64 0, i64 0), i8* %26, i8* %27, i8* %28, i8* %29, i8* %30)\l  %32 = load i32, i32* @nOut, align 4\l  %33 = add nsw i32 %32, %31\l  store i32 %33, i32* @nOut, align 4\l  br label %\"0x557a63c8b810\"\l}"];
	Node0x557a63c8b2e0 -> Node0x557a63c8b810;
	Node0x557a63c8b810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x557a63c8b810\":                                 \l  %34 = load i32, i32* %6, align 4\l  %35 = icmp ne i32 %34, 0\l  br i1 %35, label %\"0x557a63c8c020 - Exit Point\", label %\"0x557a63c8c070 -\l... Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x557a63c8b810:s0 -> Node0x557a63c8c020;
	Node0x557a63c8b810:s1 -> Node0x557a63c8c070;
	Node0x557a63c8c020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e1675170",label="{\"0x557a63c8c020 - Exit Point\":                    \l  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20\l... x i8]* @.str.468, i64 0, i64 0))\l  %37 = load i32, i32* @nOut, align 4\l  %38 = add nsw i32 %37, %36\l  store i32 %38, i32* @nOut, align 4\l  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x\l... i8]* @.str.469, i64 0, i64 0))\l  %40 = load i32, i32* @nOut, align 4\l  %41 = add nsw i32 %40, %39\l  store i32 %41, i32* @nOut, align 4\l  %42 = load i32, i32* %7, align 4\l  call void @MakeLogEntry(i32 0, i32 %42)\l  br label %\"0x557a63c8c070 - Exit Point\"\l}"];
	Node0x557a63c8c020 -> Node0x557a63c8c070;
	Node0x557a63c8c070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x557a63c8c070 - Exit Point\":                    \l  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8\l  %44 = call i32 @fflush(%struct._IO_FILE* %43)\l  ret void\l}"];
}
