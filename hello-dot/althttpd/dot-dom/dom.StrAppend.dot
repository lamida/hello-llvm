digraph "Dominator tree for 'StrAppend' function" {
	label="Dominator tree for 'StrAppend' function";

	Node0x22e3160 [shape=record,label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i8*, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  store i8* %0, i8** %5, align 8\l  store i8* %1, i8** %6, align 8\l  store i8* %2, i8** %7, align 8\l  %13 = load i8*, i8** %7, align 8\l  %14 = icmp eq i8* %13, null\l  br i1 %14, label %15, label %16\l}"];
	Node0x22e3160 -> Node0x22e31a0;
	Node0x22e3160 -> Node0x22dfa10;
	Node0x22e3160 -> Node0x22e31e0;
	Node0x22e31a0 [shape=record,label="{%15:\l15:                                               \l  store i8* null, i8** %4, align 8\l  br label %55\l}"];
	Node0x22dfa10 [shape=record,label="{%55:\l55:                                               \l  %56 = load i8*, i8** %4, align 8\l  ret i8* %56\l}"];
	Node0x22e31e0 [shape=record,label="{%16:\l16:                                               \l  %17 = load i8*, i8** %5, align 8\l  %18 = icmp eq i8* %17, null\l  br i1 %18, label %19, label %22\l}"];
	Node0x22e31e0 -> Node0x222e250;
	Node0x22e31e0 -> Node0x2240570;
	Node0x222e250 [shape=record,label="{%19:\l19:                                               \l  %20 = load i8*, i8** %7, align 8\l  %21 = call i8* @StrDup(i8* %20)\l  store i8* %21, i8** %4, align 8\l  br label %55\l}"];
	Node0x2240570 [shape=record,label="{%22:\l22:                                               \l  %23 = load i8*, i8** %5, align 8\l  %24 = call i64 @strlen(i8* %23) #8\l  store i64 %24, i64* %10, align 8\l  %25 = load i8*, i8** %6, align 8\l  %26 = call i64 @strlen(i8* %25) #8\l  store i64 %26, i64* %11, align 8\l  %27 = load i8*, i8** %7, align 8\l  %28 = call i64 @strlen(i8* %27) #8\l  store i64 %28, i64* %12, align 8\l  %29 = load i64, i64* %10, align 8\l  %30 = load i64, i64* %11, align 8\l  %31 = add i64 %29, %30\l  %32 = load i64, i64* %12, align 8\l  %33 = add i64 %31, %32\l  %34 = add i64 %33, 1\l  store i64 %34, i64* %9, align 8\l  %35 = load i64, i64* %9, align 8\l  %36 = call i8* @SafeMalloc(i64 %35)\l  store i8* %36, i8** %8, align 8\l  %37 = load i8*, i8** %8, align 8\l  %38 = load i8*, i8** %5, align 8\l  %39 = load i64, i64* %10, align 8\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %38, i64\l... %39, i1 false)\l  %40 = load i8*, i8** %5, align 8\l  call void @free(i8* %40) #7\l  %41 = load i8*, i8** %8, align 8\l  %42 = load i64, i64* %10, align 8\l  %43 = getelementptr inbounds i8, i8* %41, i64 %42\l  %44 = load i8*, i8** %6, align 8\l  %45 = load i64, i64* %11, align 8\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %44, i64\l... %45, i1 false)\l  %46 = load i8*, i8** %8, align 8\l  %47 = load i64, i64* %10, align 8\l  %48 = load i64, i64* %11, align 8\l  %49 = add i64 %47, %48\l  %50 = getelementptr inbounds i8, i8* %46, i64 %49\l  %51 = load i8*, i8** %7, align 8\l  %52 = load i64, i64* %12, align 8\l  %53 = add i64 %52, 1\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %51, i64\l... %53, i1 false)\l  %54 = load i8*, i8** %8, align 8\l  store i8* %54, i8** %4, align 8\l  br label %55\l}"];
}
