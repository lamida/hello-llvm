digraph "Dominator tree for 'fib' function" {
	label="Dominator tree for 'fib' function";

	Node0x563554f4aaa0 [shape=record,label="{entry:\l  %retval = alloca i64, align 8\l  %n.addr = alloca i64, align 8\l  store i64 %n, i64* %n.addr, align 8\l  %0 = load i64, i64* %n.addr, align 8\l  %cmp = icmp slt i64 %0, 2\l  br i1 %cmp, label %if.then, label %if.end\l}"];
	Node0x563554f4aaa0 -> Node0x563554f4af10;
	Node0x563554f4aaa0 -> Node0x563554f4af70;
	Node0x563554f4aaa0 -> Node0x563554f4afd0;
	Node0x563554f4af10 [shape=record,label="{if.then:                                          \l  %1 = load i64, i64* %n.addr, align 8\l  store i64 %1, i64* %retval, align 8\l  br label %return\l}"];
	Node0x563554f4af70 [shape=record,label="{return:                                           \l  %4 = load i64, i64* %retval, align 8\l  ret i64 %4\l}"];
	Node0x563554f4afd0 [shape=record,label="{if.end:                                           \l  %2 = load i64, i64* %n.addr, align 8\l  %sub = sub nsw i64 %2, 1\l  %call = call i64 @fib(i64 %sub)\l  %3 = load i64, i64* %n.addr, align 8\l  %sub1 = sub nsw i64 %3, 2\l  %call2 = call i64 @fib(i64 %sub1)\l  %add = add nsw i64 %call, %call2\l  store i64 %add, i64* %retval, align 8\l  br label %return\l}"];
}
