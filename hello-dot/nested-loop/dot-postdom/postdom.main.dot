digraph "Post dominator tree for 'main' function" {
	label="Post dominator tree for 'main' function";

	Node0x56008c11bb50 [shape=record,label="{Post dominance root node}"];
	Node0x56008c11bb50 -> Node0x56008c11bfc0;
	Node0x56008c11bfc0 [shape=record,label="{%32:\l32:                                               \l  %33 = load i32, i32* %1, align 4\l  ret i32 %33\l}"];
	Node0x56008c11bfc0 -> Node0x56008c11c020;
	Node0x56008c11c020 [shape=record,label="{%5:\l5:                                                \l  %6 = load i32, i32* %2, align 4\l  %7 = icmp slt i32 %6, 10\l  br i1 %7, label %8, label %32\l}"];
	Node0x56008c11c020 -> Node0x56008c11c080;
	Node0x56008c11c020 -> Node0x56008c11c0e0;
	Node0x56008c11c080 [shape=record,label="{%0:\l  %1 = alloca i32, align 4\l  %2 = alloca i32, align 4\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  store i32 0, i32* %1, align 4\l  store i32 0, i32* %2, align 4\l  br label %5\l}"];
	Node0x56008c11c0e0 [shape=record,label="{%29:\l29:                                               \l  %30 = load i32, i32* %2, align 4\l  %31 = add nsw i32 %30, 1\l  store i32 %31, i32* %2, align 4\l  br label %5\l}"];
	Node0x56008c11c0e0 -> Node0x56008c11c140;
	Node0x56008c11c140 [shape=record,label="{%28:\l28:                                               \l  br label %29\l}"];
	Node0x56008c11c140 -> Node0x56008c11c1a0;
	Node0x56008c11c1a0 [shape=record,label="{%9:\l9:                                                \l  %10 = load i32, i32* %3, align 4\l  %11 = icmp slt i32 %10, 5\l  br i1 %11, label %12, label %28\l}"];
	Node0x56008c11c1a0 -> Node0x56008c11c200;
	Node0x56008c11c1a0 -> Node0x56008c11c260;
	Node0x56008c11c200 [shape=record,label="{%8:\l8:                                                \l  store i32 0, i32* %3, align 4\l  br label %9\l}"];
	Node0x56008c11c260 [shape=record,label="{%25:\l25:                                               \l  %26 = load i32, i32* %3, align 4\l  %27 = add nsw i32 %26, 1\l  store i32 %27, i32* %3, align 4\l  br label %9\l}"];
	Node0x56008c11c260 -> Node0x56008c11c2c0;
	Node0x56008c11c2c0 [shape=record,label="{%24:\l24:                                               \l  br label %25\l}"];
	Node0x56008c11c2c0 -> Node0x56008c11c320;
	Node0x56008c11c320 [shape=record,label="{%13:\l13:                                               \l  %14 = load i32, i32* %4, align 4\l  %15 = icmp slt i32 %14, 100\l  br i1 %15, label %16, label %24\l}"];
	Node0x56008c11c320 -> Node0x56008c11c380;
	Node0x56008c11c320 -> Node0x56008c11c3e0;
	Node0x56008c11c380 [shape=record,label="{%12:\l12:                                               \l  store i32 0, i32* %4, align 4\l  br label %13\l}"];
	Node0x56008c11c3e0 [shape=record,label="{%21:\l21:                                               \l  %22 = load i32, i32* %4, align 4\l  %23 = add nsw i32 %22, 1\l  store i32 %23, i32* %4, align 4\l  br label %13\l}"];
	Node0x56008c11c3e0 -> Node0x56008c11c440;
	Node0x56008c11c440 [shape=record,label="{%16:\l16:                                               \l  %17 = load i32, i32* %2, align 4\l  %18 = load i32, i32* %3, align 4\l  %19 = load i32, i32* %4, align 4\l  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29\l... x i8]* @.str, i64 0, i64 0), i32 %17, i32 %18, i32 %19)\l  br label %21\l}"];
}
