digraph "Dominator tree for 'SafeMalloc' function" {
	label="Dominator tree for 'SafeMalloc' function";

	Node0xcb6bc0 [shape=record,label="{entry:\l  %size.addr = alloca i64, align 8\l  %p = alloca i8*, align 8\l  store i64 %size, i64* %size.addr, align 8\l  %0 = load i64, i64* %size.addr, align 8\l  %call = call noalias i8* @malloc(i64 %0) #7\l  store i8* %call, i8** %p, align 8\l  %1 = load i8*, i8** %p, align 8\l  %cmp = icmp eq i8* %1, null\l  br i1 %cmp, label %if.then, label %if.end\l}"];
	Node0xcb6bc0 -> Node0xc7bab0;
	Node0xcb6bc0 -> Node0xc68e70;
	Node0xc7bab0 [shape=record,label="{if.then:                                          \l  %call1 = call i8* @strcpy(i8* getelementptr inbounds ([4 x i8], [4 x i8]*\l... @zReplyStatus, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]*\l... @.str.462, i64 0, i64 0)) #7\l  call void @MakeLogEntry(i32 1, i32 100)\l  call void @exit(i32 1) #8\l  unreachable\l}"];
	Node0xc68e70 [shape=record,label="{if.end:                                           \l  %2 = load i8*, i8** %p, align 8\l  ret i8* %2\l}"];
}
