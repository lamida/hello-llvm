digraph "CFG for 'uInt64_to_double' function" {
	label="CFG for 'uInt64_to_double' function";

	Node0xd7a190 [shape=record,label="{%1:\l  %2 = alloca %struct.UInt64*, align 8\l  %3 = alloca i32, align 4\l  %4 = alloca double, align 8\l  %5 = alloca double, align 8\l  store %struct.UInt64* %0, %struct.UInt64** %2, align 8\l  store double 1.000000e+00, double* %4, align 8\l  store double 0.000000e+00, double* %5, align 8\l  store i32 0, i32* %3, align 4\l  br label %6\l}"];
	Node0xd7a190 -> Node0xd7a590;
	Node0xd7a590 [shape=record,label="{%6:\l6:                                                \l  %7 = load i32, i32* %3, align 4\l  %8 = icmp slt i32 %7, 8\l  br i1 %8, label %9, label %26\l|{<s0>T|<s1>F}}"];
	Node0xd7a590:s0 -> Node0xd7a2e0;
	Node0xd7a590:s1 -> Node0xd7a750;
	Node0xd7a2e0 [shape=record,label="{%9:\l9:                                                \l  %10 = load double, double* %4, align 8\l  %11 = load %struct.UInt64*, %struct.UInt64** %2, align 8\l  %12 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %11, i32 0, i32\l... 0\l  %13 = load i32, i32* %3, align 4\l  %14 = sext i32 %13 to i64\l  %15 = getelementptr inbounds [8 x i8], [8 x i8]* %12, i64 0, i64 %14\l  %16 = load i8, i8* %15, align 1\l  %17 = uitofp i8 %16 to double\l  %18 = fmul double %10, %17\l  %19 = load double, double* %5, align 8\l  %20 = fadd double %19, %18\l  store double %20, double* %5, align 8\l  %21 = load double, double* %4, align 8\l  %22 = fmul double %21, 2.560000e+02\l  store double %22, double* %4, align 8\l  br label %23\l}"];
	Node0xd7a2e0 -> Node0xd7af00;
	Node0xd7af00 [shape=record,label="{%23:\l23:                                               \l  %24 = load i32, i32* %3, align 4\l  %25 = add nsw i32 %24, 1\l  store i32 %25, i32* %3, align 4\l  br label %6\l}"];
	Node0xd7af00 -> Node0xd7a590;
	Node0xd7a750 [shape=record,label="{%26:\l26:                                               \l  %27 = load double, double* %5, align 8\l  ret double %27\l}"];
}
