digraph "CFG for 'SetEnv' function" {
	label="CFG for 'SetEnv' function";

	Node0x5649f801af20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5649f801af20\":\l  %2 = alloca i8*, align 8\l  %3 = alloca i8*, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  store i8* %0, i8** %2, align 8\l  store i8* %1, i8** %3, align 8\l  %6 = load i8*, i8** %3, align 8\l  %7 = icmp eq i8* %6, null\l  br i1 %7, label %\"0x5649f801b080\", label %\"0x5649f801b460 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x5649f801af20:s0 -> Node0x5649f801b080;
	Node0x5649f801af20:s1 -> Node0x5649f801b460;
	Node0x5649f801b080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{\"0x5649f801b080\":                                 \l  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.379, i64 0, i64\l... 0), i8** %3, align 8\l  br label %\"0x5649f801b460 - Exit Point\"\l}"];
	Node0x5649f801b080 -> Node0x5649f801b460;
	Node0x5649f801b460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5649f801b460 - Exit Point\":                    \l  %8 = load i8*, i8** %3, align 8\l  %9 = call i32 @strncmp(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x\l... i8]* @.str.508, i64 0, i64 0), i64 4)\l  %10 = icmp eq i32 %9, 0\l  br i1 %10, label %\"0x5649f801b940\", label %\"0x5649f801b990 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x5649f801b460:s0 -> Node0x5649f801b940;
	Node0x5649f801b460:s1 -> Node0x5649f801b990;
	Node0x5649f801b940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{\"0x5649f801b940\":                                 \l  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.379, i64 0, i64\l... 0), i8** %3, align 8\l  br label %\"0x5649f801b990 - Exit Point\"\l}"];
	Node0x5649f801b940 -> Node0x5649f801b990;
	Node0x5649f801b990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5649f801b990 - Exit Point\":                    \l  %11 = load i8*, i8** %2, align 8\l  %12 = call i64 @strlen(i8* %11)\l  %13 = load i8*, i8** %3, align 8\l  %14 = call i64 @strlen(i8* %13)\l  %15 = add i64 %12, %14\l  %16 = add i64 %15, 2\l  store i64 %16, i64* %5, align 8\l  %17 = load i64, i64* %5, align 8\l  %18 = call i8* @SafeMalloc(i64 %17)\l  store i8* %18, i8** %4, align 8\l  %19 = load i8*, i8** %4, align 8\l  %20 = load i8*, i8** %2, align 8\l  %21 = load i8*, i8** %3, align 8\l  %22 = call i32 (i8*, i8*, ...) @sprintf(i8* %19, i8* getelementptr inbounds\l... ([6 x i8], [6 x i8]* @.str.509, i64 0, i64 0), i8* %20, i8* %21)\l  %23 = load i8*, i8** %4, align 8\l  %24 = call i32 @putenv(i8* %23)\l  ret void\l}"];
}
