digraph "Scop Graph for 'fallbackSimpleSort' function" {
	label="Scop Graph for 'fallbackSimpleSort' function";

	Node0x1e4fd70 [shape=record,label="{%4:\l  %5 = alloca i32*, align 8\l  %6 = alloca i32*, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  store i32* %0, i32** %5, align 8\l  store i32* %1, i32** %6, align 8\l  store i32 %2, i32* %7, align 4\l  store i32 %3, i32* %8, align 4\l  %13 = load i32, i32* %7, align 4\l  %14 = load i32, i32* %8, align 4\l  %15 = icmp eq i32 %13, %14\l  br i1 %15, label %16, label %17\l}"];
	Node0x1e4fd70 -> Node0x1e34960;
	Node0x1e4fd70 -> Node0x1dd54a0;
	Node0x1e34960 [shape=record,label="{%16:\l16:                                               \l  br label %147\l}"];
	Node0x1e34960 -> Node0x1ed5250;
	Node0x1ed5250 [shape=record,label="{%147:\l147:                                              \l  ret void\l}"];
	Node0x1dd54a0 [shape=record,label="{%17:\l17:                                               \l  %18 = load i32, i32* %8, align 4\l  %19 = load i32, i32* %7, align 4\l  %20 = sub nsw i32 %18, %19\l  %21 = icmp sgt i32 %20, 3\l  br i1 %21, label %22, label %85\l}"];
	Node0x1dd54a0 -> Node0x1e15540;
	Node0x1dd54a0 -> Node0x1e38590;
	Node0x1e15540 [shape=record,label="{%22:\l22:                                               \l  %23 = load i32, i32* %8, align 4\l  %24 = sub nsw i32 %23, 4\l  store i32 %24, i32* %9, align 4\l  br label %25\l}"];
	Node0x1e15540 -> Node0x1ec1660;
	Node0x1ec1660 [shape=record,label="{%25:\l25:                                               \l  %26 = load i32, i32* %9, align 4\l  %27 = load i32, i32* %7, align 4\l  %28 = icmp sge i32 %26, %27\l  br i1 %28, label %29, label %84\l}"];
	Node0x1ec1660 -> Node0x1c86b80;
	Node0x1ec1660 -> Node0x1e36ab0;
	Node0x1c86b80 [shape=record,label="{%29:\l29:                                               \l  %30 = load i32*, i32** %5, align 8\l  %31 = load i32, i32* %9, align 4\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i32, i32* %30, i64 %32\l  %34 = load i32, i32* %33, align 4\l  store i32 %34, i32* %11, align 4\l  %35 = load i32*, i32** %6, align 8\l  %36 = load i32, i32* %11, align 4\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds i32, i32* %35, i64 %37\l  %39 = load i32, i32* %38, align 4\l  store i32 %39, i32* %12, align 4\l  %40 = load i32, i32* %9, align 4\l  %41 = add nsw i32 %40, 4\l  store i32 %41, i32* %10, align 4\l  br label %42\l}"];
	Node0x1c86b80 -> Node0x1dd2090;
	Node0x1dd2090 [shape=record,label="{%42:\l42:                                               \l  %43 = load i32, i32* %10, align 4\l  %44 = load i32, i32* %8, align 4\l  %45 = icmp sle i32 %43, %44\l  br i1 %45, label %46, label %58\l}"];
	Node0x1dd2090 -> Node0x1ed9a60;
	Node0x1dd2090 -> Node0x1de9730;
	Node0x1ed9a60 [shape=record,label="{%46:\l46:                                               \l  %47 = load i32, i32* %12, align 4\l  %48 = load i32*, i32** %6, align 8\l  %49 = load i32*, i32** %5, align 8\l  %50 = load i32, i32* %10, align 4\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32* %49, i64 %51\l  %53 = load i32, i32* %52, align 4\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32* %48, i64 %54\l  %56 = load i32, i32* %55, align 4\l  %57 = icmp ugt i32 %47, %56\l  br label %58\l}"];
	Node0x1ed9a60 -> Node0x1de9730;
	Node0x1de9730 [shape=record,label="{%58:\l58:                                               \l  %59 = phi i1 [ false, %42 ], [ %57, %46 ]\l  br i1 %59, label %60, label %74\l}"];
	Node0x1de9730 -> Node0x1e1c4c0;
	Node0x1de9730 -> Node0x1ed6bf0;
	Node0x1e1c4c0 [shape=record,label="{%60:\l60:                                               \l  %61 = load i32*, i32** %5, align 8\l  %62 = load i32, i32* %10, align 4\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32* %61, i64 %63\l  %65 = load i32, i32* %64, align 4\l  %66 = load i32*, i32** %5, align 8\l  %67 = load i32, i32* %10, align 4\l  %68 = sub nsw i32 %67, 4\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i32, i32* %66, i64 %69\l  store i32 %65, i32* %70, align 4\l  br label %71\l}"];
	Node0x1e1c4c0 -> Node0x1c09b60;
	Node0x1c09b60 [shape=record,label="{%71:\l71:                                               \l  %72 = load i32, i32* %10, align 4\l  %73 = add nsw i32 %72, 4\l  store i32 %73, i32* %10, align 4\l  br label %42\l}"];
	Node0x1c09b60 -> Node0x1dd2090[constraint=false];
	Node0x1ed6bf0 [shape=record,label="{%74:\l74:                                               \l  %75 = load i32, i32* %11, align 4\l  %76 = load i32*, i32** %5, align 8\l  %77 = load i32, i32* %10, align 4\l  %78 = sub nsw i32 %77, 4\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32* %76, i64 %79\l  store i32 %75, i32* %80, align 4\l  br label %81\l}"];
	Node0x1ed6bf0 -> Node0x1e0fa80;
	Node0x1e0fa80 [shape=record,label="{%81:\l81:                                               \l  %82 = load i32, i32* %9, align 4\l  %83 = add nsw i32 %82, -1\l  store i32 %83, i32* %9, align 4\l  br label %25\l}"];
	Node0x1e0fa80 -> Node0x1ec1660[constraint=false];
	Node0x1e36ab0 [shape=record,label="{%84:\l84:                                               \l  br label %85\l}"];
	Node0x1e36ab0 -> Node0x1e38590;
	Node0x1e38590 [shape=record,label="{%85:\l85:                                               \l  %86 = load i32, i32* %8, align 4\l  %87 = sub nsw i32 %86, 1\l  store i32 %87, i32* %9, align 4\l  br label %88\l}"];
	Node0x1e38590 -> Node0x1ed0f90;
	Node0x1ed0f90 [shape=record,label="{%88:\l88:                                               \l  %89 = load i32, i32* %9, align 4\l  %90 = load i32, i32* %7, align 4\l  %91 = icmp sge i32 %89, %90\l  br i1 %91, label %92, label %147\l}"];
	Node0x1ed0f90 -> Node0x1e18080;
	Node0x1ed0f90 -> Node0x1ed5250;
	Node0x1e18080 [shape=record,label="{%92:\l92:                                               \l  %93 = load i32*, i32** %5, align 8\l  %94 = load i32, i32* %9, align 4\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i32, i32* %93, i64 %95\l  %97 = load i32, i32* %96, align 4\l  store i32 %97, i32* %11, align 4\l  %98 = load i32*, i32** %6, align 8\l  %99 = load i32, i32* %11, align 4\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds i32, i32* %98, i64 %100\l  %102 = load i32, i32* %101, align 4\l  store i32 %102, i32* %12, align 4\l  %103 = load i32, i32* %9, align 4\l  %104 = add nsw i32 %103, 1\l  store i32 %104, i32* %10, align 4\l  br label %105\l}"];
	Node0x1e18080 -> Node0x1e13f90;
	Node0x1e13f90 [shape=record,label="{%105:\l105:                                              \l  %106 = load i32, i32* %10, align 4\l  %107 = load i32, i32* %8, align 4\l  %108 = icmp sle i32 %106, %107\l  br i1 %108, label %109, label %121\l}"];
	Node0x1e13f90 -> Node0x1e476d0;
	Node0x1e13f90 -> Node0x1ecbc40;
	Node0x1e476d0 [shape=record,label="{%109:\l109:                                              \l  %110 = load i32, i32* %12, align 4\l  %111 = load i32*, i32** %6, align 8\l  %112 = load i32*, i32** %5, align 8\l  %113 = load i32, i32* %10, align 4\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds i32, i32* %112, i64 %114\l  %116 = load i32, i32* %115, align 4\l  %117 = zext i32 %116 to i64\l  %118 = getelementptr inbounds i32, i32* %111, i64 %117\l  %119 = load i32, i32* %118, align 4\l  %120 = icmp ugt i32 %110, %119\l  br label %121\l}"];
	Node0x1e476d0 -> Node0x1ecbc40;
	Node0x1ecbc40 [shape=record,label="{%121:\l121:                                              \l  %122 = phi i1 [ false, %105 ], [ %120, %109 ]\l  br i1 %122, label %123, label %137\l}"];
	Node0x1ecbc40 -> Node0x1e3a0a0;
	Node0x1ecbc40 -> Node0x1ebe750;
	Node0x1e3a0a0 [shape=record,label="{%123:\l123:                                              \l  %124 = load i32*, i32** %5, align 8\l  %125 = load i32, i32* %10, align 4\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds i32, i32* %124, i64 %126\l  %128 = load i32, i32* %127, align 4\l  %129 = load i32*, i32** %5, align 8\l  %130 = load i32, i32* %10, align 4\l  %131 = sub nsw i32 %130, 1\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds i32, i32* %129, i64 %132\l  store i32 %128, i32* %133, align 4\l  br label %134\l}"];
	Node0x1e3a0a0 -> Node0x1d7e380;
	Node0x1d7e380 [shape=record,label="{%134:\l134:                                              \l  %135 = load i32, i32* %10, align 4\l  %136 = add nsw i32 %135, 1\l  store i32 %136, i32* %10, align 4\l  br label %105\l}"];
	Node0x1d7e380 -> Node0x1e13f90[constraint=false];
	Node0x1ebe750 [shape=record,label="{%137:\l137:                                              \l  %138 = load i32, i32* %11, align 4\l  %139 = load i32*, i32** %5, align 8\l  %140 = load i32, i32* %10, align 4\l  %141 = sub nsw i32 %140, 1\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds i32, i32* %139, i64 %142\l  store i32 %138, i32* %143, align 4\l  br label %144\l}"];
	Node0x1ebe750 -> Node0x1dd43e0;
	Node0x1dd43e0 [shape=record,label="{%144:\l144:                                              \l  %145 = load i32, i32* %9, align 4\l  %146 = add nsw i32 %145, -1\l  store i32 %146, i32* %9, align 4\l  br label %88\l}"];
	Node0x1dd43e0 -> Node0x1ed0f90[constraint=false];
	colorscheme = "paired12"
        subgraph cluster_0x1b85a60 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x1f43650 {
            label = "Region containing entry block of function is invalid!";
            style = solid;
            color = 6
            subgraph cluster_0x1f6f7b0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: ";
              style = solid;
              color = 5
              subgraph cluster_0x1b85b60 {
                label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: ";
                style = solid;
                color = 7
                subgraph cluster_0x1b859e0 {
                  label = "Condition in BB '' neither constant nor an icmp instruction";
                  style = solid;
                  color = 9
                  subgraph cluster_0x1f68fc0 {
                    label = "Region can not profitably be optimized!";
                    style = solid;
                    color = 11
                    Node0x1dd2090;
                    Node0x1ed9a60;
                  }
                  Node0x1de9730;
                  Node0x1e1c4c0;
                  Node0x1c09b60;
                }
                Node0x1ec1660;
                Node0x1c86b80;
                Node0x1ed6bf0;
                Node0x1e0fa80;
              }
              Node0x1dd54a0;
              Node0x1e15540;
              Node0x1e36ab0;
            }
            subgraph cluster_0x1b47fb0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: ";
              style = solid;
              color = 5
              subgraph cluster_0x1b85c60 {
                label = "Condition in BB '' neither constant nor an icmp instruction";
                style = solid;
                color = 7
                subgraph cluster_0x1b85ae0 {
                  label = "Region can not profitably be optimized!";
                  style = solid;
                  color = 9
                  Node0x1e13f90;
                  Node0x1e476d0;
                }
                Node0x1ecbc40;
                Node0x1e3a0a0;
                Node0x1d7e380;
              }
              Node0x1ed0f90;
              Node0x1e18080;
              Node0x1ebe750;
              Node0x1dd43e0;
            }
            Node0x1e4fd70;
            Node0x1e34960;
            Node0x1e38590;
          }
          Node0x1ed5250;
        }
}
