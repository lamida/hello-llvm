digraph "CFG for 'bzopen_or_bzdopen' function" {
	label="CFG for 'bzopen_or_bzdopen' function";

	Node0x556a61df3d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{\"0x556a61df3d00 - Exit Point\":\l  %4 = alloca i8*, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i8*, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca [5000 x i8], align 16\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca [10 x i8], align 1\l  %14 = alloca %struct._IO_FILE*, align 8\l  %15 = alloca i8*, align 8\l  %16 = alloca i32, align 4\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  %19 = alloca i32, align 4\l  store i8* %0, i8** %5, align 8\l  store i32 %1, i32* %6, align 4\l  store i8* %2, i8** %7, align 8\l  store i32 %3, i32* %8, align 4\l  store i32 9, i32* %11, align 4\l  store i32 0, i32* %12, align 4\l  %20 = bitcast [10 x i8]* %13 to i8*\l  call void @llvm.memset.p0i8.i64(i8* align 1 %20, i8 0, i64 10, i1 false)\l  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8\l  store i8* null, i8** %15, align 8\l  store i32 0, i32* %16, align 4\l  store i32 30, i32* %17, align 4\l  store i32 0, i32* %18, align 4\l  store i32 0, i32* %19, align 4\l  %21 = load i8*, i8** %7, align 8\l  %22 = icmp eq i8* %21, null\l  br i1 %22, label %\"0x556a61df4f80\", label %\"0x556a61df4fd0\"\l|{<s0>T|<s1>F}}"];
	Node0x556a61df3d00:s0 -> Node0x556a61df4f80;
	Node0x556a61df3d00:s1 -> Node0x556a61df4fd0;
	Node0x556a61df4f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{\"0x556a61df4f80\":                                 \l  store i8* null, i8** %4, align 8\l  br label %\"0x556a61df5160\"\l}"];
	Node0x556a61df4f80 -> Node0x556a61df5160;
	Node0x556a61df4fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{\"0x556a61df4fd0\":                                 \l  br label %\"0x556a61df5220\"\l}"];
	Node0x556a61df4fd0 -> Node0x556a61df5220;
	Node0x556a61df5220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x556a61df5220\":                                 \l  %23 = load i8*, i8** %7, align 8\l  %24 = load i8, i8* %23, align 1\l  %25 = icmp ne i8 %24, 0\l  br i1 %25, label %\"0x556a61df5450\", label %\"0x556a61df54a0 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x556a61df5220:s0 -> Node0x556a61df5450;
	Node0x556a61df5220:s1 -> Node0x556a61df54a0;
	Node0x556a61df5450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x556a61df5450\":                                 \l  %26 = load i8*, i8** %7, align 8\l  %27 = load i8, i8* %26, align 1\l  %28 = sext i8 %27 to i32\l  switch i32 %28, label %\"0x556a61df5730 - Exit Point\" [\l    i32 114, label %\"0x556a61df5780\"\l    i32 119, label %\"0x556a61df5810\"\l    i32 115, label %\"0x556a61df58d0\"\l  ]\l|{<s0>def|<s1>114|<s2>119|<s3>115}}"];
	Node0x556a61df5450:s0 -> Node0x556a61df5730;
	Node0x556a61df5450:s1 -> Node0x556a61df5780;
	Node0x556a61df5450:s2 -> Node0x556a61df5810;
	Node0x556a61df5450:s3 -> Node0x556a61df58d0;
	Node0x556a61df5780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{\"0x556a61df5780\":                                 \l  store i32 0, i32* %12, align 4\l  br label %\"0x556a61df5a40\"\l}"];
	Node0x556a61df5780 -> Node0x556a61df5a40;
	Node0x556a61df5810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{\"0x556a61df5810\":                                 \l  store i32 1, i32* %12, align 4\l  br label %\"0x556a61df5a40\"\l}"];
	Node0x556a61df5810 -> Node0x556a61df5a40;
	Node0x556a61df58d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{\"0x556a61df58d0\":                                 \l  store i32 1, i32* %18, align 4\l  br label %\"0x556a61df5a40\"\l}"];
	Node0x556a61df58d0 -> Node0x556a61df5a40;
	Node0x556a61df5730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{\"0x556a61df5730 - Exit Point\":                    \l  %29 = call i16** @__ctype_b_loc()\l  %30 = load i16*, i16** %29, align 8\l  %31 = load i8*, i8** %7, align 8\l  %32 = load i8, i8* %31, align 1\l  %33 = sext i8 %32 to i32\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds i16, i16* %30, i64 %34\l  %36 = load i16, i16* %35, align 2\l  %37 = zext i16 %36 to i32\l  %38 = and i32 %37, 2048\l  %39 = icmp ne i32 %38, 0\l  br i1 %39, label %\"0x556a61df6420\", label %\"0x556a61df6470\"\l|{<s0>T|<s1>F}}"];
	Node0x556a61df5730:s0 -> Node0x556a61df6420;
	Node0x556a61df5730:s1 -> Node0x556a61df6470;
	Node0x556a61df6420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{\"0x556a61df6420\":                                 \l  %40 = load i8*, i8** %7, align 8\l  %41 = load i8, i8* %40, align 1\l  %42 = sext i8 %41 to i32\l  %43 = sub nsw i32 %42, 48\l  store i32 %43, i32* %11, align 4\l  br label %\"0x556a61df6470\"\l}"];
	Node0x556a61df6420 -> Node0x556a61df6470;
	Node0x556a61df6470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{\"0x556a61df6470\":                                 \l  br label %\"0x556a61df5a40\"\l}"];
	Node0x556a61df6470 -> Node0x556a61df5a40;
	Node0x556a61df5a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x556a61df5a40\":                                 \l  %44 = load i8*, i8** %7, align 8\l  %45 = getelementptr inbounds i8, i8* %44, i32 1\l  store i8* %45, i8** %7, align 8\l  br label %\"0x556a61df5220\"\l}"];
	Node0x556a61df5a40 -> Node0x556a61df5220;
	Node0x556a61df54a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{\"0x556a61df54a0 - Exit Point\":                    \l  %46 = getelementptr inbounds [10 x i8], [10 x i8]* %13, i64 0, i64 0\l  %47 = load i32, i32* %12, align 4\l  %48 = icmp ne i32 %47, 0\l  %49 = zext i1 %48 to i64\l  %50 = select i1 %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]*\l... @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]*\l... @.str.65, i64 0, i64 0)\l  %51 = call i8* @strcat(i8* %46, i8* %50)\l  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %13, i64 0, i64 0\l  %53 = call i8* @strcat(i8* %52, i8* getelementptr inbounds ([2 x i8], [2 x\l... i8]* @.str.66, i64 0, i64 0))\l  %54 = load i32, i32* %8, align 4\l  %55 = icmp eq i32 %54, 0\l  br i1 %55, label %\"0x556a61df74e0\", label %\"0x556a61df7530 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x556a61df54a0:s0 -> Node0x556a61df74e0;
	Node0x556a61df54a0:s1 -> Node0x556a61df7530;
	Node0x556a61df74e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{\"0x556a61df74e0\":                                 \l  %56 = load i8*, i8** %5, align 8\l  %57 = icmp eq i8* %56, null\l  br i1 %57, label %\"0x556a61df7730\", label %\"0x556a61df7780 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x556a61df74e0:s0 -> Node0x556a61df7730;
	Node0x556a61df74e0:s1 -> Node0x556a61df7780;
	Node0x556a61df7780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{\"0x556a61df7780 - Exit Point\":                    \l  %58 = load i8*, i8** %5, align 8\l  %59 = call i32 @strcmp(i8* %58, i8* getelementptr inbounds ([1 x i8], [1 x\l... i8]* @.str.16, i64 0, i64 0))\l  %60 = icmp eq i32 %59, 0\l  br i1 %60, label %\"0x556a61df7730\", label %\"0x556a61df7c60 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x556a61df7780:s0 -> Node0x556a61df7730;
	Node0x556a61df7780:s1 -> Node0x556a61df7c60;
	Node0x556a61df7730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{\"0x556a61df7730\":                                 \l  %61 = load i32, i32* %12, align 4\l  %62 = icmp ne i32 %61, 0\l  br i1 %62, label %\"0x556a61df7e60\", label %\"0x556a61df7eb0\"\l|{<s0>T|<s1>F}}"];
	Node0x556a61df7730:s0 -> Node0x556a61df7e60;
	Node0x556a61df7730:s1 -> Node0x556a61df7eb0;
	Node0x556a61df7e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{\"0x556a61df7e60\":                                 \l  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8\l  br label %\"0x556a61df8020\"\l}"];
	Node0x556a61df7e60 -> Node0x556a61df8020;
	Node0x556a61df7eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{\"0x556a61df7eb0\":                                 \l  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8\l  br label %\"0x556a61df8020\"\l}"];
	Node0x556a61df7eb0 -> Node0x556a61df8020;
	Node0x556a61df8020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{\"0x556a61df8020\":                                 \l  %65 = phi %struct._IO_FILE* [ %63, %\"0x556a61df7e60\" ], [ %64,\l... %\"0x556a61df7eb0\" ]\l  store %struct._IO_FILE* %65, %struct._IO_FILE** %14, align 8\l  br label %\"0x556a61df8300\"\l}"];
	Node0x556a61df8020 -> Node0x556a61df8300;
	Node0x556a61df7c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{\"0x556a61df7c60 - Exit Point\":                    \l  %66 = load i8*, i8** %5, align 8\l  %67 = getelementptr inbounds [10 x i8], [10 x i8]* %13, i64 0, i64 0\l  %68 = call %struct._IO_FILE* @fopen(i8* %66, i8* %67)\l  store %struct._IO_FILE* %68, %struct._IO_FILE** %14, align 8\l  br label %\"0x556a61df8300\"\l}"];
	Node0x556a61df7c60 -> Node0x556a61df8300;
	Node0x556a61df8300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{\"0x556a61df8300\":                                 \l  br label %\"0x556a61df8c50\"\l}"];
	Node0x556a61df8300 -> Node0x556a61df8c50;
	Node0x556a61df7530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{\"0x556a61df7530 - Exit Point\":                    \l  %69 = load i32, i32* %6, align 4\l  %70 = getelementptr inbounds [10 x i8], [10 x i8]* %13, i64 0, i64 0\l  %71 = call %struct._IO_FILE* @fdopen(i32 %69, i8* %70)\l  store %struct._IO_FILE* %71, %struct._IO_FILE** %14, align 8\l  br label %\"0x556a61df8c50\"\l}"];
	Node0x556a61df7530 -> Node0x556a61df8c50;
	Node0x556a61df8c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{\"0x556a61df8c50\":                                 \l  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8\l  %73 = icmp eq %struct._IO_FILE* %72, null\l  br i1 %73, label %\"0x556a61df92b0\", label %\"0x556a61df9300\"\l|{<s0>T|<s1>F}}"];
	Node0x556a61df8c50:s0 -> Node0x556a61df92b0;
	Node0x556a61df8c50:s1 -> Node0x556a61df9300;
	Node0x556a61df92b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{\"0x556a61df92b0\":                                 \l  store i8* null, i8** %4, align 8\l  br label %\"0x556a61df5160\"\l}"];
	Node0x556a61df92b0 -> Node0x556a61df5160;
	Node0x556a61df9300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{\"0x556a61df9300\":                                 \l  %74 = load i32, i32* %12, align 4\l  %75 = icmp ne i32 %74, 0\l  br i1 %75, label %\"0x556a61df9600\", label %\"0x556a61df9650\"\l|{<s0>T|<s1>F}}"];
	Node0x556a61df9300:s0 -> Node0x556a61df9600;
	Node0x556a61df9300:s1 -> Node0x556a61df9650;
	Node0x556a61df9600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{\"0x556a61df9600\":                                 \l  %76 = load i32, i32* %11, align 4\l  %77 = icmp slt i32 %76, 1\l  br i1 %77, label %\"0x556a61df9850\", label %\"0x556a61df98a0\"\l|{<s0>T|<s1>F}}"];
	Node0x556a61df9600:s0 -> Node0x556a61df9850;
	Node0x556a61df9600:s1 -> Node0x556a61df98a0;
	Node0x556a61df9850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{\"0x556a61df9850\":                                 \l  store i32 1, i32* %11, align 4\l  br label %\"0x556a61df98a0\"\l}"];
	Node0x556a61df9850 -> Node0x556a61df98a0;
	Node0x556a61df98a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{\"0x556a61df98a0\":                                 \l  %78 = load i32, i32* %11, align 4\l  %79 = icmp sgt i32 %78, 9\l  br i1 %79, label %\"0x556a61df9ba0\", label %\"0x556a61df9bf0\"\l|{<s0>T|<s1>F}}"];
	Node0x556a61df98a0:s0 -> Node0x556a61df9ba0;
	Node0x556a61df98a0:s1 -> Node0x556a61df9bf0;
	Node0x556a61df9ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{\"0x556a61df9ba0\":                                 \l  store i32 9, i32* %11, align 4\l  br label %\"0x556a61df9bf0\"\l}"];
	Node0x556a61df9ba0 -> Node0x556a61df9bf0;
	Node0x556a61df9bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{\"0x556a61df9bf0\":                                 \l  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8\l  %81 = load i32, i32* %11, align 4\l  %82 = load i32, i32* %16, align 4\l  %83 = load i32, i32* %17, align 4\l  %84 = call i8* @BZ2_bzWriteOpen(i32* %9, %struct._IO_FILE* %80, i32 %81, i32\l... %82, i32 %83)\l  store i8* %84, i8** %15, align 8\l  br label %\"0x556a61dfa200\"\l}"];
	Node0x556a61df9bf0 -> Node0x556a61dfa200;
	Node0x556a61df9650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{\"0x556a61df9650\":                                 \l  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8\l  %86 = load i32, i32* %16, align 4\l  %87 = load i32, i32* %18, align 4\l  %88 = getelementptr inbounds [5000 x i8], [5000 x i8]* %10, i64 0, i64 0\l  %89 = load i32, i32* %19, align 4\l  %90 = call i8* @BZ2_bzReadOpen(i32* %9, %struct._IO_FILE* %85, i32 %86, i32\l... %87, i8* %88, i32 %89)\l  store i8* %90, i8** %15, align 8\l  br label %\"0x556a61dfa200\"\l}"];
	Node0x556a61df9650 -> Node0x556a61dfa200;
	Node0x556a61dfa200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{\"0x556a61dfa200\":                                 \l  %91 = load i8*, i8** %15, align 8\l  %92 = icmp eq i8* %91, null\l  br i1 %92, label %\"0x556a61dfa8d0\", label %\"0x556a61dfa920\"\l|{<s0>T|<s1>F}}"];
	Node0x556a61dfa200:s0 -> Node0x556a61dfa8d0;
	Node0x556a61dfa200:s1 -> Node0x556a61dfa920;
	Node0x556a61dfa8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{\"0x556a61dfa8d0\":                                 \l  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8\l  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8\l  %95 = icmp ne %struct._IO_FILE* %93, %94\l  br i1 %95, label %\"0x556a61dfb3a0\", label %\"0x556a61dfb3f0\"\l|{<s0>T|<s1>F}}"];
	Node0x556a61dfa8d0:s0 -> Node0x556a61dfb3a0;
	Node0x556a61dfa8d0:s1 -> Node0x556a61dfb3f0;
	Node0x556a61dfb3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{\"0x556a61dfb3a0\":                                 \l  %96 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8\l  %97 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8\l  %98 = icmp ne %struct._IO_FILE* %96, %97\l  br i1 %98, label %\"0x556a61dfb660 - Exit Point\", label %\"0x556a61dfb3f0\"\l|{<s0>T|<s1>F}}"];
	Node0x556a61dfb3a0:s0 -> Node0x556a61dfb660;
	Node0x556a61dfb3a0:s1 -> Node0x556a61dfb3f0;
	Node0x556a61dfb660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{\"0x556a61dfb660 - Exit Point\":                    \l  %99 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8\l  %100 = call i32 @fclose(%struct._IO_FILE* %99)\l  br label %\"0x556a61dfb3f0\"\l}"];
	Node0x556a61dfb660 -> Node0x556a61dfb3f0;
	Node0x556a61dfb3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{\"0x556a61dfb3f0\":                                 \l  store i8* null, i8** %4, align 8\l  br label %\"0x556a61df5160\"\l}"];
	Node0x556a61dfb3f0 -> Node0x556a61df5160;
	Node0x556a61dfa920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{\"0x556a61dfa920\":                                 \l  %101 = load i8*, i8** %15, align 8\l  store i8* %101, i8** %4, align 8\l  br label %\"0x556a61df5160\"\l}"];
	Node0x556a61dfa920 -> Node0x556a61df5160;
	Node0x556a61df5160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{\"0x556a61df5160\":                                 \l  %102 = load i8*, i8** %4, align 8\l  ret i8* %102\l}"];
}
