digraph "CFG for 'http_server' function" {
	label="CFG for 'http_server' function";

	Node0x562a72028000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{\"0x562a72028000 - Exit Point\":\l  %2 = alloca i32, align 4\l  %3 = alloca i8*, align 8\l  %4 = alloca i32, align 4\l  %5 = alloca [20 x i32], align 16\l  %6 = alloca i32, align 4\l  %7 = alloca %struct.fd_set, align 8\l  %8 = alloca %union.address, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  %12 = alloca %struct.timeval, align 8\l  %13 = alloca i32, align 4\l  %14 = alloca %struct.addrinfo, align 8\l  %15 = alloca %struct.addrinfo*, align 8\l  %16 = alloca %struct.addrinfo*, align 8\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  %19 = alloca i32, align 4\l  %20 = alloca i32, align 4\l  %21 = alloca i32, align 4\l  %22 = alloca i32, align 4\l  %23 = alloca i32, align 4\l  %24 = alloca i32, align 4\l  %25 = alloca i32, align 4\l  store i8* %0, i8** %3, align 8\l  store i32 %1, i32* %4, align 4\l  store i32 0, i32* %11, align 4\l  store i32 1, i32* %13, align 4\l  store i32 -1, i32* %20, align 4\l  %26 = bitcast %struct.addrinfo* %14 to i8*\l  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 48, i1 false)\l  %27 = load i32, i32* @ipv4Only, align 4\l  %28 = icmp ne i32 %27, 0\l  br i1 %28, label %\"0x562a7202be60\", label %\"0x562a7202beb0\"\l|{<s0>T|<s1>F}}"];
	Node0x562a72028000:s0 -> Node0x562a7202be60;
	Node0x562a72028000:s1 -> Node0x562a7202beb0;
	Node0x562a7202be60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{\"0x562a7202be60\":                                 \l  %29 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %14, i32 0,\l... i32 1\l  store i32 2, i32* %29, align 4\l  br label %\"0x562a7202c100 - Exit Point\"\l}"];
	Node0x562a7202be60 -> Node0x562a7202c100;
	Node0x562a7202beb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{\"0x562a7202beb0\":                                 \l  %30 = load i32, i32* @ipv6Only, align 4\l  %31 = icmp ne i32 %30, 0\l  br i1 %31, label %\"0x562a7202c2c0\", label %\"0x562a7202c310\"\l|{<s0>T|<s1>F}}"];
	Node0x562a7202beb0:s0 -> Node0x562a7202c2c0;
	Node0x562a7202beb0:s1 -> Node0x562a7202c310;
	Node0x562a7202c2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{\"0x562a7202c2c0\":                                 \l  %32 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %14, i32 0,\l... i32 1\l  store i32 10, i32* %32, align 4\l  br label %\"0x562a7202c560\"\l}"];
	Node0x562a7202c2c0 -> Node0x562a7202c560;
	Node0x562a7202c310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{\"0x562a7202c310\":                                 \l  %33 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %14, i32 0,\l... i32 1\l  store i32 0, i32* %33, align 4\l  br label %\"0x562a7202c560\"\l}"];
	Node0x562a7202c310 -> Node0x562a7202c560;
	Node0x562a7202c560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{\"0x562a7202c560\":                                 \l  br label %\"0x562a7202c100 - Exit Point\"\l}"];
	Node0x562a7202c560 -> Node0x562a7202c100;
	Node0x562a7202c100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{\"0x562a7202c100 - Exit Point\":                    \l  %34 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %14, i32 0,\l... i32 2\l  store i32 1, i32* %34, align 8\l  %35 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %14, i32 0,\l... i32 0\l  store i32 1, i32* %35, align 8\l  %36 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %14, i32 0,\l... i32 3\l  store i32 0, i32* %36, align 4\l  %37 = load i32, i32* %4, align 4\l  %38 = icmp ne i32 %37, 0\l  %39 = zext i1 %38 to i64\l  %40 = select i1 %38, i8* getelementptr inbounds ([10 x i8], [10 x i8]*\l... @.str.407, i64 0, i64 0), i8* null\l  %41 = load i8*, i8** %3, align 8\l  %42 = call i32 @getaddrinfo(i8* %40, i8* %41, %struct.addrinfo* %14,\l... %struct.addrinfo** %15)\l  store i32 %42, i32* %17, align 4\l  %43 = load i32, i32* %17, align 4\l  %44 = icmp ne i32 %43, 0\l  br i1 %44, label %\"0x562a7202d240\", label %\"0x562a7202d290\"\l|{<s0>T|<s1>F}}"];
	Node0x562a7202c100:s0 -> Node0x562a7202d240;
	Node0x562a7202c100:s1 -> Node0x562a7202d290;
	Node0x562a7202d240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{\"0x562a7202d240\":                                 \l  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8\l  %46 = load i32, i32* %17, align 4\l  %47 = icmp ne i32 %46, -11\l  br i1 %47, label %\"0x562a7202d500 - Exit Point\", label %\"0x562a7202d550 -\l... Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x562a7202d240:s0 -> Node0x562a7202d500;
	Node0x562a7202d240:s1 -> Node0x562a7202d550;
	Node0x562a7202d500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{\"0x562a7202d500 - Exit Point\":                    \l  %48 = load i32, i32* %17, align 4\l  %49 = call i8* @gai_strerror(i32 %48)\l  br label %\"0x562a7202d7b0 - Exit Point\"\l}"];
	Node0x562a7202d500 -> Node0x562a7202d7b0;
	Node0x562a7202d550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{\"0x562a7202d550 - Exit Point\":                    \l  %50 = call i32* @__errno_location()\l  %51 = load i32, i32* %50, align 4\l  %52 = call i8* @strerror(i32 %51)\l  br label %\"0x562a7202d7b0 - Exit Point\"\l}"];
	Node0x562a7202d550 -> Node0x562a7202d7b0;
	Node0x562a7202d7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{\"0x562a7202d7b0 - Exit Point\":                    \l  %53 = phi i8* [ %49, %\"0x562a7202d500 - Exit Point\" ], [ %52,\l... %\"0x562a7202d550 - Exit Point\" ]\l  %54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45,\l... i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.408, i64 0, i64 0),\l... i8* %53)\l  store i32 1, i32* %2, align 4\l  br label %\"0x562a7202e0c0\"\l}"];
	Node0x562a7202d7b0 -> Node0x562a7202e0c0;
	Node0x562a7202d290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{\"0x562a7202d290\":                                 \l  store i32 0, i32* %19, align 4\l  %55 = load %struct.addrinfo*, %struct.addrinfo** %15, align 8\l  store %struct.addrinfo* %55, %struct.addrinfo** %16, align 8\l  br label %\"0x562a72031c80 - Virtual Checkpoint\"\l}"];
	Node0x562a7202d290 -> Node0x562a7202e310;
	Node0x562a7202e310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{\"0x562a72031c80 - Virtual Checkpoint\":            \l  %56 = load i32, i32* %19, align 4\l  %57 = icmp slt i32 %56, 20\l  br i1 %57, label %\"0x562a7202e500\", label %\"0x562a7202e550\"\l|{<s0>T|<s1>F}}"];
	Node0x562a7202e310:s0 -> Node0x562a7202e500;
	Node0x562a7202e310:s1 -> Node0x562a7202e550;
	Node0x562a7202e500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{\"0x562a7202e500\":                                 \l  %58 = load %struct.addrinfo*, %struct.addrinfo** %16, align 8\l  %59 = icmp ne %struct.addrinfo* %58, null\l  br label %\"0x562a7202e550\"\l}"];
	Node0x562a7202e500 -> Node0x562a7202e550;
	Node0x562a7202e550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{\"0x562a7202e550\":                                 \l  %60 = phi i1 [ false, %\"0x562a72031c80 - Virtual Checkpoint\" ], [ %59,\l... %\"0x562a7202e500\" ]\l  br i1 %60, label %\"0x562a7202e870 - Exit Point\", label %\"0x562a7202e8c0\"\l|{<s0>T|<s1>F}}"];
	Node0x562a7202e550:s0 -> Node0x562a7202e870;
	Node0x562a7202e550:s1 -> Node0x562a7202e8c0;
	Node0x562a7202e870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{\"0x562a7202e870 - Exit Point\":                    \l  %61 = load %struct.addrinfo*, %struct.addrinfo** %16, align 8\l  %62 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %61, i32 0,\l... i32 1\l  %63 = load i32, i32* %62, align 4\l  %64 = load %struct.addrinfo*, %struct.addrinfo** %16, align 8\l  %65 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %64, i32 0,\l... i32 2\l  %66 = load i32, i32* %65, align 8\l  %67 = load %struct.addrinfo*, %struct.addrinfo** %16, align 8\l  %68 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %67, i32 0,\l... i32 3\l  %69 = load i32, i32* %68, align 4\l  %70 = call i32 @socket(i32 %63, i32 %66, i32 %69)\l  %71 = load i32, i32* %19, align 4\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %72\l  store i32 %70, i32* %73, align 4\l  %74 = load i32, i32* %19, align 4\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %75\l  %77 = load i32, i32* %76, align 4\l  %78 = icmp sge i32 %77, 0\l  br i1 %78, label %\"0x562a7202f510 - Exit Point\", label %\"0x562a7202f560\"\l|{<s0>T|<s1>F}}"];
	Node0x562a7202e870:s0 -> Node0x562a7202f510;
	Node0x562a7202e870:s1 -> Node0x562a7202f560;
	Node0x562a7202f510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{\"0x562a7202f510 - Exit Point\":                    \l  %79 = load i32, i32* %19, align 4\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %80\l  %82 = load i32, i32* %81, align 4\l  %83 = bitcast i32* %13 to i8*\l  %84 = call i32 @setsockopt(i32 %82, i32 1, i32 2, i8* %83, i32 4)\l  %85 = load %struct.addrinfo*, %struct.addrinfo** %16, align 8\l  %86 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %85, i32 0,\l... i32 1\l  %87 = load i32, i32* %86, align 4\l  %88 = icmp eq i32 %87, 10\l  br i1 %88, label %\"0x562a7202fca0 - Exit Point\", label %\"0x562a7202fcf0 -\l... Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x562a7202f510:s0 -> Node0x562a7202fca0;
	Node0x562a7202f510:s1 -> Node0x562a7202fcf0;
	Node0x562a7202fca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{\"0x562a7202fca0 - Exit Point\":                    \l  store i32 1, i32* %21, align 4\l  %89 = load i32, i32* %19, align 4\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %90\l  %92 = load i32, i32* %91, align 4\l  %93 = bitcast i32* %21 to i8*\l  %94 = call i32 @setsockopt(i32 %92, i32 41, i32 26, i8* %93, i32 4)\l  br label %\"0x562a7202fcf0 - Exit Point\"\l}"];
	Node0x562a7202fca0 -> Node0x562a7202fcf0;
	Node0x562a7202fcf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{\"0x562a7202fcf0 - Exit Point\":                    \l  %95 = load i32, i32* %19, align 4\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %96\l  %98 = load i32, i32* %97, align 4\l  %99 = load %struct.addrinfo*, %struct.addrinfo** %16, align 8\l  %100 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %99, i32\l... 0, i32 5\l  %101 = load %struct.sockaddr*, %struct.sockaddr** %100, align 8\l  %102 = load %struct.addrinfo*, %struct.addrinfo** %16, align 8\l  %103 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %102, i32\l... 0, i32 4\l  %104 = load i32, i32* %103, align 8\l  %105 = call i32 @bind(i32 %98, %struct.sockaddr* %101, i32 %104)\l  %106 = icmp slt i32 %105, 0\l  br i1 %106, label %\"0x562a72030bb0 - Exit Point\", label %\"0x562a72030c00 -\l... Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x562a7202fcf0:s0 -> Node0x562a72030bb0;
	Node0x562a7202fcf0:s1 -> Node0x562a72030c00;
	Node0x562a72030bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{\"0x562a72030bb0 - Exit Point\":                    \l  %107 = call i32* @__errno_location()\l  %108 = load i32, i32* %107, align 4\l  %109 = call i8* @strerror(i32 %108)\l  %110 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8],\l... [17 x i8]* @.str.409, i64 0, i64 0), i8* %109)\l  %111 = load i32, i32* %19, align 4\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %112\l  %114 = load i32, i32* %113, align 4\l  %115 = call i32 @close(i32 %114)\l  br label %\"0x562a72031c80\"\l}"];
	Node0x562a72030bb0 -> Node0x562a72031c80;
	Node0x562a72030c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{\"0x562a72030c00 - Exit Point\":                    \l  %116 = load i32, i32* %19, align 4\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %117\l  %119 = load i32, i32* %118, align 4\l  %120 = call i32 @listen(i32 %119, i32 20)\l  %121 = icmp slt i32 %120, 0\l  br i1 %121, label %\"0x562a72032220 - Exit Point\", label %\"0x562a72032270\"\l|{<s0>T|<s1>F}}"];
	Node0x562a72030c00:s0 -> Node0x562a72032220;
	Node0x562a72030c00:s1 -> Node0x562a72032270;
	Node0x562a72032220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{\"0x562a72032220 - Exit Point\":                    \l  %122 = call i32* @__errno_location()\l  %123 = load i32, i32* %122, align 4\l  %124 = call i8* @strerror(i32 %123)\l  %125 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8],\l... [21 x i8]* @.str.410, i64 0, i64 0), i8* %124)\l  %126 = load i32, i32* %19, align 4\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %127\l  %129 = load i32, i32* %128, align 4\l  %130 = call i32 @close(i32 %129)\l  br label %\"0x562a72031c80\"\l}"];
	Node0x562a72032220 -> Node0x562a72031c80;
	Node0x562a72032270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{\"0x562a72032270\":                                 \l  %131 = load i32, i32* %19, align 4\l  %132 = add nsw i32 %131, 1\l  store i32 %132, i32* %19, align 4\l  br label %\"0x562a7202f560\"\l}"];
	Node0x562a72032270 -> Node0x562a7202f560;
	Node0x562a7202f560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{\"0x562a7202f560\":                                 \l  br label %\"0x562a72031c80\"\l}"];
	Node0x562a7202f560 -> Node0x562a72031c80;
	Node0x562a72031c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{\"0x562a72031c80\":                                 \l  %133 = load %struct.addrinfo*, %struct.addrinfo** %16, align 8\l  %134 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %133, i32\l... 0, i32 7\l  %135 = load %struct.addrinfo*, %struct.addrinfo** %134, align 8\l  store %struct.addrinfo* %135, %struct.addrinfo** %16, align 8\l  br label %\"0x562a72031c80 - Virtual Checkpoint\"\l}"];
	Node0x562a72031c80 -> Node0x562a7202e310;
	Node0x562a7202e8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{\"0x562a7202e8c0\":                                 \l  %136 = load i32, i32* %19, align 4\l  %137 = icmp eq i32 %136, 0\l  br i1 %137, label %\"0x562a72033130 - Exit Point\", label %\"0x562a72033180\"\l|{<s0>T|<s1>F}}"];
	Node0x562a7202e8c0:s0 -> Node0x562a72033130;
	Node0x562a7202e8c0:s1 -> Node0x562a72033180;
	Node0x562a72033130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{\"0x562a72033130 - Exit Point\":                    \l  %138 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8\l  %139 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %138, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.411, i64 0, i64\l... 0))\l  store i32 1, i32* %2, align 4\l  br label %\"0x562a7202e0c0\"\l}"];
	Node0x562a72033130 -> Node0x562a7202e0c0;
	Node0x562a72033180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{\"0x562a72033180\":                                 \l  br label %\"0x562a72037ca0 - Virtual Checkpoint\"\l}"];
	Node0x562a72033180 -> Node0x562a72033590;
	Node0x562a72033590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{\"0x562a72037ca0 - Virtual Checkpoint\":            \l  %140 = load i32, i32* %11, align 4\l  %141 = icmp sgt i32 %140, 50\l  br i1 %141, label %\"0x562a72033750 - Exit Point\", label %\"0x562a720337a0\"\l|{<s0>T|<s1>F}}"];
	Node0x562a72033590:s0 -> Node0x562a72033750;
	Node0x562a72033590:s1 -> Node0x562a720337a0;
	Node0x562a72033750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{\"0x562a72033750 - Exit Point\":                    \l  %142 = load i32, i32* %11, align 4\l  %143 = sub nsw i32 %142, 50\l  %144 = call i32 @sleep(i32 %143)\l  br label %\"0x562a720337a0\"\l}"];
	Node0x562a72033750 -> Node0x562a720337a0;
	Node0x562a720337a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{\"0x562a720337a0\":                                 \l  %145 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0,\l... i32 0\l  store i64 60, i64* %145, align 8\l  %146 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0,\l... i32 1\l  store i64 0, i64* %146, align 8\l  br label %\"0x562a72033da0 - Exit Point\"\l}"];
	Node0x562a720337a0 -> Node0x562a72033da0;
	Node0x562a72033da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{\"0x562a72033da0 - Exit Point\":                    \l  %147 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %7, i32 0, i32\l... 0\l  %148 = getelementptr inbounds [16 x i64], [16 x i64]* %147, i64 0, i64 0\l  %149 = call \{ i64, i64* \} asm sideeffect \"cld\l  %150 = extractvalue \{ i64, i64* \} %149, 0\l  %151 = extractvalue \{ i64, i64* \} %149, 1\l  %152 = trunc i64 %150 to i32\l  store i32 %152, i32* %22, align 4\l  %153 = ptrtoint i64* %151 to i64\l  %154 = trunc i64 %153 to i32\l  store i32 %154, i32* %23, align 4\l  br label %\"0x562a72033fe0\"\l}"];
	Node0x562a72033da0 -> Node0x562a72033fe0;
	Node0x562a72033fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{\"0x562a72033fe0\":                                 \l  store i32 0, i32* %18, align 4\l  br label %\"0x562a720373b0 - Virtual Checkpoint\"\l}"];
	Node0x562a72033fe0 -> Node0x562a720346b0;
	Node0x562a720346b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{\"0x562a720373b0 - Virtual Checkpoint\":            \l  %155 = load i32, i32* %18, align 4\l  %156 = load i32, i32* %19, align 4\l  %157 = icmp slt i32 %155, %156\l  br i1 %157, label %\"0x562a72035a10\", label %\"0x562a72035a60 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x562a720346b0:s0 -> Node0x562a72035a10;
	Node0x562a720346b0:s1 -> Node0x562a72035a60;
	Node0x562a72035a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{\"0x562a72035a10\":                                 \l  %158 = load i32, i32* %18, align 4\l  %159 = sext i32 %158 to i64\l  %160 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %159\l  %161 = load i32, i32* %160, align 4\l  %162 = icmp sge i32 %161, 0\l  br i1 %162, label %\"0x562a72035d50\", label %\"0x562a72035da0 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x562a72035a10:s0 -> Node0x562a72035d50;
	Node0x562a72035a10:s1 -> Node0x562a72035da0;
	Node0x562a72035d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{\"0x562a72035d50\":                                 \l  br label %\"0x562a72035ea0\"\l}"];
	Node0x562a72035d50 -> Node0x562a72035ea0;
	Node0x562a72035da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{\"0x562a72035da0 - Exit Point\":                    \l  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]*\l... @.str.412, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]*\l... @.str.14, i64 0, i64 0), i32 2327, i8* getelementptr inbounds ([35 x i8], [35\l... x i8]* @__PRETTY_FUNCTION__.http_server, i64 0, i64 0))\l  unreachable\l}"];
	Node0x562a72035ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{\"0x562a72035ea0\":                                 \l  %163 = load i32, i32* %18, align 4\l  %164 = sext i32 %163 to i64\l  %165 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %164\l  %166 = load i32, i32* %165, align 4\l  %167 = srem i32 %166, 64\l  %168 = zext i32 %167 to i64\l  %169 = shl i64 1, %168\l  %170 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %7, i32 0, i32\l... 0\l  %171 = load i32, i32* %18, align 4\l  %172 = sext i32 %171 to i64\l  %173 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %172\l  %174 = load i32, i32* %173, align 4\l  %175 = sdiv i32 %174, 64\l  %176 = sext i32 %175 to i64\l  %177 = getelementptr inbounds [16 x i64], [16 x i64]* %170, i64 0, i64 %176\l  %178 = load i64, i64* %177, align 8\l  %179 = or i64 %178, %169\l  store i64 %179, i64* %177, align 8\l  %180 = load i32, i32* %18, align 4\l  %181 = sext i32 %180 to i64\l  %182 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %181\l  %183 = load i32, i32* %182, align 4\l  %184 = load i32, i32* %20, align 4\l  %185 = icmp sgt i32 %183, %184\l  br i1 %185, label %\"0x562a72036f50\", label %\"0x562a72036fa0\"\l|{<s0>T|<s1>F}}"];
	Node0x562a72035ea0:s0 -> Node0x562a72036f50;
	Node0x562a72035ea0:s1 -> Node0x562a72036fa0;
	Node0x562a72036f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{\"0x562a72036f50\":                                 \l  %186 = load i32, i32* %18, align 4\l  %187 = sext i32 %186 to i64\l  %188 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %187\l  %189 = load i32, i32* %188, align 4\l  store i32 %189, i32* %20, align 4\l  br label %\"0x562a72036fa0\"\l}"];
	Node0x562a72036f50 -> Node0x562a72036fa0;
	Node0x562a72036fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{\"0x562a72036fa0\":                                 \l  br label %\"0x562a720373b0\"\l}"];
	Node0x562a72036fa0 -> Node0x562a720373b0;
	Node0x562a720373b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{\"0x562a720373b0\":                                 \l  %190 = load i32, i32* %18, align 4\l  %191 = add nsw i32 %190, 1\l  store i32 %191, i32* %18, align 4\l  br label %\"0x562a720373b0 - Virtual Checkpoint\"\l}"];
	Node0x562a720373b0 -> Node0x562a720346b0;
	Node0x562a72035a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{\"0x562a72035a60 - Exit Point\":                    \l  %192 = load i32, i32* %20, align 4\l  %193 = add nsw i32 %192, 1\l  %194 = call i32 @select(i32 %193, %struct.fd_set* %7, %struct.fd_set* null,\l... %struct.fd_set* null, %struct.timeval* %12)\l  store i32 0, i32* %18, align 4\l  br label %\"0x562a7203bd30 - Virtual Checkpoint\"\l}"];
	Node0x562a72035a60 -> Node0x562a72037a20;
	Node0x562a72037a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{\"0x562a7203bd30 - Virtual Checkpoint\":            \l  %195 = load i32, i32* %18, align 4\l  %196 = load i32, i32* %19, align 4\l  %197 = icmp slt i32 %195, %196\l  br i1 %197, label %\"0x562a72037c50\", label %\"0x562a72037ca0\"\l|{<s0>T|<s1>F}}"];
	Node0x562a72037a20:s0 -> Node0x562a72037c50;
	Node0x562a72037a20:s1 -> Node0x562a72037ca0;
	Node0x562a72037c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{\"0x562a72037c50\":                                 \l  %198 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %7, i32 0, i32\l... 0\l  %199 = load i32, i32* %18, align 4\l  %200 = sext i32 %199 to i64\l  %201 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %200\l  %202 = load i32, i32* %201, align 4\l  %203 = sdiv i32 %202, 64\l  %204 = sext i32 %203 to i64\l  %205 = getelementptr inbounds [16 x i64], [16 x i64]* %198, i64 0, i64 %204\l  %206 = load i64, i64* %205, align 8\l  %207 = load i32, i32* %18, align 4\l  %208 = sext i32 %207 to i64\l  %209 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %208\l  %210 = load i32, i32* %209, align 4\l  %211 = srem i32 %210, 64\l  %212 = zext i32 %211 to i64\l  %213 = shl i64 1, %212\l  %214 = and i64 %206, %213\l  %215 = icmp ne i64 %214, 0\l  br i1 %215, label %\"0x562a72031070 - Exit Point\", label %\"0x562a720310c0\"\l|{<s0>T|<s1>F}}"];
	Node0x562a72037c50:s0 -> Node0x562a72031070;
	Node0x562a72037c50:s1 -> Node0x562a720310c0;
	Node0x562a72031070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{\"0x562a72031070 - Exit Point\":                    \l  store i32 128, i32* %9, align 4\l  %216 = load i32, i32* %18, align 4\l  %217 = sext i32 %216 to i64\l  %218 = getelementptr inbounds [20 x i32], [20 x i32]* %5, i64 0, i64 %217\l  %219 = load i32, i32* %218, align 4\l  %220 = bitcast %union.address* %8 to %struct.sockaddr*\l  %221 = call i32 @accept(i32 %219, %struct.sockaddr* %220, i32* %9)\l  store i32 %221, i32* %6, align 4\l  %222 = load i32, i32* %6, align 4\l  %223 = icmp sge i32 %222, 0\l  br i1 %223, label %\"0x562a720397a0 - Exit Point\", label %\"0x562a720397f0\"\l|{<s0>T|<s1>F}}"];
	Node0x562a72031070:s0 -> Node0x562a720397a0;
	Node0x562a72031070:s1 -> Node0x562a720397f0;
	Node0x562a720397a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{\"0x562a720397a0 - Exit Point\":                    \l  %224 = call i32 @fork()\l  store i32 %224, i32* %10, align 4\l  %225 = load i32, i32* %10, align 4\l  %226 = icmp ne i32 %225, 0\l  br i1 %226, label %\"0x562a72039b70\", label %\"0x562a72039bc0 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x562a720397a0:s0 -> Node0x562a72039b70;
	Node0x562a720397a0:s1 -> Node0x562a72039bc0;
	Node0x562a72039b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{\"0x562a72039b70\":                                 \l  %227 = load i32, i32* %10, align 4\l  %228 = icmp sgt i32 %227, 0\l  br i1 %228, label %\"0x562a72039e00\", label %\"0x562a72039e50 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x562a72039b70:s0 -> Node0x562a72039e00;
	Node0x562a72039b70:s1 -> Node0x562a72039e50;
	Node0x562a72039e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{\"0x562a72039e00\":                                 \l  %229 = load i32, i32* %11, align 4\l  %230 = add nsw i32 %229, 1\l  store i32 %230, i32* %11, align 4\l  br label %\"0x562a72039e50 - Exit Point\"\l}"];
	Node0x562a72039e00 -> Node0x562a72039e50;
	Node0x562a72039e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{\"0x562a72039e50 - Exit Point\":                    \l  %231 = load i32, i32* %6, align 4\l  %232 = call i32 @close(i32 %231)\l  br label %\"0x562a7203a2f0\"\l}"];
	Node0x562a72039e50 -> Node0x562a7203a2f0;
	Node0x562a72039bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{\"0x562a72039bc0 - Exit Point\":                    \l  store i32 0, i32* %24, align 4\l  %233 = call i32 @close(i32 0)\l  %234 = load i32, i32* %6, align 4\l  %235 = call i32 @dup(i32 %234)\l  store i32 %235, i32* %25, align 4\l  %236 = load i32, i32* %25, align 4\l  %237 = icmp ne i32 %236, 0\l  br i1 %237, label %\"0x562a7203a840\", label %\"0x562a7203a890 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x562a72039bc0:s0 -> Node0x562a7203a840;
	Node0x562a72039bc0:s1 -> Node0x562a7203a890;
	Node0x562a7203a840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{\"0x562a7203a840\":                                 \l  %238 = load i32, i32* %24, align 4\l  %239 = add nsw i32 %238, 1\l  store i32 %239, i32* %24, align 4\l  br label %\"0x562a7203a890 - Exit Point\"\l}"];
	Node0x562a7203a840 -> Node0x562a7203a890;
	Node0x562a7203a890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{\"0x562a7203a890 - Exit Point\":                    \l  %240 = call i32 @close(i32 1)\l  %241 = load i32, i32* %6, align 4\l  %242 = call i32 @dup(i32 %241)\l  store i32 %242, i32* %25, align 4\l  %243 = load i32, i32* %25, align 4\l  %244 = icmp ne i32 %243, 1\l  br i1 %244, label %\"0x562a7203af90\", label %\"0x562a7203afe0 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x562a7203a890:s0 -> Node0x562a7203af90;
	Node0x562a7203a890:s1 -> Node0x562a7203afe0;
	Node0x562a7203af90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{\"0x562a7203af90\":                                 \l  %245 = load i32, i32* %24, align 4\l  %246 = add nsw i32 %245, 1\l  store i32 %246, i32* %24, align 4\l  br label %\"0x562a7203afe0 - Exit Point\"\l}"];
	Node0x562a7203af90 -> Node0x562a7203afe0;
	Node0x562a7203afe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{\"0x562a7203afe0 - Exit Point\":                    \l  %247 = load i32, i32* %6, align 4\l  %248 = call i32 @close(i32 %247)\l  %249 = load i32, i32* %24, align 4\l  store i32 %249, i32* %2, align 4\l  br label %\"0x562a7202e0c0\"\l}"];
	Node0x562a7203afe0 -> Node0x562a7202e0c0;
	Node0x562a7203a2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{\"0x562a7203a2f0\":                                 \l  br label %\"0x562a720397f0\"\l}"];
	Node0x562a7203a2f0 -> Node0x562a720397f0;
	Node0x562a720397f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{\"0x562a720397f0\":                                 \l  br label %\"0x562a720310c0\"\l}"];
	Node0x562a720397f0 -> Node0x562a720310c0;
	Node0x562a720310c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{\"0x562a720310c0\":                                 \l  br label %\"0x562a7203b9e0 - Virtual Checkpoint\"\l}"];
	Node0x562a720310c0 -> Node0x562a7203b690;
	Node0x562a7203b690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x562a7203b9e0 - Virtual Checkpoint\":            \l  %250 = call i32 @waitpid(i32 0, i32* null, i32 1)\l  store i32 %250, i32* %10, align 4\l  %251 = icmp sgt i32 %250, 0\l  br i1 %251, label %\"0x562a7203b9e0\", label %\"0x562a7203ba30\"\l|{<s0>T|<s1>F}}"];
	Node0x562a7203b690:s0 -> Node0x562a7203b9e0;
	Node0x562a7203b690:s1 -> Node0x562a7203ba30;
	Node0x562a7203b9e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x562a7203b9e0\":                                 \l  %252 = load i32, i32* %11, align 4\l  %253 = add nsw i32 %252, -1\l  store i32 %253, i32* %11, align 4\l  br label %\"0x562a7203b9e0 - Virtual Checkpoint\"\l}"];
	Node0x562a7203b9e0 -> Node0x562a7203b690;
	Node0x562a7203ba30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{\"0x562a7203ba30\":                                 \l  br label %\"0x562a7203bd30\"\l}"];
	Node0x562a7203ba30 -> Node0x562a7203bd30;
	Node0x562a7203bd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{\"0x562a7203bd30\":                                 \l  %254 = load i32, i32* %18, align 4\l  %255 = add nsw i32 %254, 1\l  store i32 %255, i32* %18, align 4\l  br label %\"0x562a7203bd30 - Virtual Checkpoint\"\l}"];
	Node0x562a7203bd30 -> Node0x562a72037a20;
	Node0x562a72037ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{\"0x562a72037ca0\":                                 \l  br label %\"0x562a72037ca0 - Virtual Checkpoint\"\l}"];
	Node0x562a72037ca0 -> Node0x562a72033590;
	Node0x562a7202e0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{\"0x562a7202e0c0\":                                 \l  %256 = load i32, i32* %2, align 4\l  ret i32 %256\l}"];
}
