digraph "Scop Graph for 'countSlashes' function" {
	label="Scop Graph for 'countSlashes' function";

	Node0x1ac9960 [shape=record,label="{entry}"];
	Node0x1ac9960 -> Node0x1a98360;
	Node0x1a98360 [shape=record,label="{while.cond}"];
	Node0x1a98360 -> Node0x1a84dc0;
	Node0x1a98360 -> Node0x1a38b70;
	Node0x1a84dc0 [shape=record,label="{while.body}"];
	Node0x1a84dc0 -> Node0x1a9d6f0;
	Node0x1a84dc0 -> Node0x1a1da30;
	Node0x1a9d6f0 [shape=record,label="{if.then}"];
	Node0x1a9d6f0 -> Node0x1a1da30;
	Node0x1a1da30 [shape=record,label="{if.end}"];
	Node0x1a1da30 -> Node0x1a98360[constraint=false];
	Node0x1a38b70 [shape=record,label="{while.end}"];
	colorscheme = "paired12"
        subgraph cluster_0x1b18030 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x1ab4ed0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.cond";
            style = solid;
            color = 6
            subgraph cluster_0x1ab5360 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              Node0x1a84dc0;
              Node0x1a9d6f0;
            }
            Node0x1a98360;
            Node0x1a1da30;
          }
          Node0x1ac9960;
          Node0x1a38b70;
        }
}
