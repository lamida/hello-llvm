digraph "Scop Graph for 'main' function" {
	label="Scop Graph for 'main' function";

	Node0x1ed29e0 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  store i32 0, i32* %retval, align 4\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x1ed29e0 -> Node0x1ed41f0;
	Node0x1ed41f0 [shape=record,label="{for.cond:                                         \l  %0 = load i32, i32* %i, align 4\l  %cmp = icmp slt i32 %0, 10\l  br i1 %cmp, label %for.body, label %for.end12\l}"];
	Node0x1ed41f0 -> Node0x1ed4360;
	Node0x1ed41f0 -> Node0x1ed43c0;
	Node0x1ed4360 [shape=record,label="{for.body:                                         \l  store i32 0, i32* %j, align 4\l  br label %for.cond1\l}"];
	Node0x1ed4360 -> Node0x1ed4530;
	Node0x1ed4530 [shape=record,label="{for.cond1:                                        \l  %1 = load i32, i32* %j, align 4\l  %cmp2 = icmp slt i32 %1, 5\l  br i1 %cmp2, label %for.body3, label %for.end9\l}"];
	Node0x1ed4530 -> Node0x1ed4640;
	Node0x1ed4530 -> Node0x1ed46a0;
	Node0x1ed4640 [shape=record,label="{for.body3:                                        \l  store i32 0, i32* %k, align 4\l  br label %for.cond4\l}"];
	Node0x1ed4640 -> Node0x1ed4850;
	Node0x1ed4850 [shape=record,label="{for.cond4:                                        \l  %2 = load i32, i32* %k, align 4\l  %cmp5 = icmp slt i32 %2, 100\l  br i1 %cmp5, label %for.body6, label %for.end\l}"];
	Node0x1ed4850 -> Node0x1ed4970;
	Node0x1ed4850 -> Node0x1ed49d0;
	Node0x1ed4970 [shape=record,label="{for.body6:                                        \l  %3 = load i32, i32* %i, align 4\l  %4 = load i32, i32* %j, align 4\l  %5 = load i32, i32* %k, align 4\l  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8],\l... [29 x i8]* @.str, i64 0, i64 0), i32 %3, i32 %4, i32 %5)\l  br label %for.inc\l}"];
	Node0x1ed4970 -> Node0x1ed4e40;
	Node0x1ed4e40 [shape=record,label="{for.inc:                                          \l  %6 = load i32, i32* %k, align 4\l  %inc = add nsw i32 %6, 1\l  store i32 %inc, i32* %k, align 4\l  br label %for.cond4\l}"];
	Node0x1ed4e40 -> Node0x1ed4850[constraint=false];
	Node0x1ed49d0 [shape=record,label="{for.end:                                          \l  br label %for.inc7\l}"];
	Node0x1ed49d0 -> Node0x1ed4ea0;
	Node0x1ed4ea0 [shape=record,label="{for.inc7:                                         \l  %7 = load i32, i32* %j, align 4\l  %inc8 = add nsw i32 %7, 1\l  store i32 %inc8, i32* %j, align 4\l  br label %for.cond1\l}"];
	Node0x1ed4ea0 -> Node0x1ed4530[constraint=false];
	Node0x1ed46a0 [shape=record,label="{for.end9:                                         \l  br label %for.inc10\l}"];
	Node0x1ed46a0 -> Node0x1ed5310;
	Node0x1ed5310 [shape=record,label="{for.inc10:                                        \l  %8 = load i32, i32* %i, align 4\l  %inc11 = add nsw i32 %8, 1\l  store i32 %inc11, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x1ed5310 -> Node0x1ed41f0[constraint=false];
	Node0x1ed43c0 [shape=record,label="{for.end12:                                        \l  %9 = load i32, i32* %retval, align 4\l  ret i32 %9\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x1e6e3b0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x1ec4510 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.cond";
            style = solid;
            color = 6
            subgraph cluster_0x1ec4490 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.cond1";
              style = solid;
              color = 5
              subgraph cluster_0x1e99ad0 {
                label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.cond4";
                style = solid;
                color = 7
                Node0x1ed4850;
                Node0x1ed4970;
                Node0x1ed4e40;
              }
              Node0x1ed4530;
              Node0x1ed4640;
              Node0x1ed49d0;
              Node0x1ed4ea0;
            }
            Node0x1ed41f0;
            Node0x1ed4360;
            Node0x1ed46a0;
            Node0x1ed5310;
          }
          Node0x1ed29e0;
          Node0x1ed43c0;
        }
}
