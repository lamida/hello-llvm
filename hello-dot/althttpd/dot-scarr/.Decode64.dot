digraph "CFG for 'Decode64' function" {
	label="CFG for 'Decode64' function";

	Node0x5649f7f6b790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{\"0x5649f7f6b790\":\l  %1 = alloca i8*, align 8\l  %2 = alloca i8*, align 8\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  store i8* %0, i8** %1, align 8\l  %10 = load i32, i32* @Decode64.isInit, align 4\l  %11 = icmp ne i32 %10, 0\l  br i1 %11, label %\"0x5649f7f6b960 - Exit Point\", label %\"0x5649f7f6be70\"\l|{<s0>T|<s1>F}}"];
	Node0x5649f7f6b790:s0 -> Node0x5649f7f6b960;
	Node0x5649f7f6b790:s1 -> Node0x5649f7f6be70;
	Node0x5649f7f6be70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{\"0x5649f7f6be70\":                                 \l  store i32 0, i32* %4, align 4\l  br label %\"0x5649f7f6c000\"\l}"];
	Node0x5649f7f6be70 -> Node0x5649f7f6c000;
	Node0x5649f7f6c000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{\"0x5649f7f6c000\":                                 \l  %12 = load i32, i32* %4, align 4\l  %13 = icmp slt i32 %12, 128\l  br i1 %13, label %\"0x5649f7f6c1c0\", label %\"0x5649f7f6c210\"\l|{<s0>T|<s1>F}}"];
	Node0x5649f7f6c000:s0 -> Node0x5649f7f6c1c0;
	Node0x5649f7f6c000:s1 -> Node0x5649f7f6c210;
	Node0x5649f7f6c1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{\"0x5649f7f6c1c0\":                                 \l  %14 = load i32, i32* %4, align 4\l  %15 = sext i32 %14 to i64\l  %16 = getelementptr inbounds [128 x i32], [128 x i32]* @Decode64.trans, i64\l... 0, i64 %15\l  store i32 0, i32* %16, align 4\l  br label %\"0x5649f7f76330\"\l}"];
	Node0x5649f7f6c1c0 -> Node0x5649f7f76330;
	Node0x5649f7f76330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{\"0x5649f7f76330\":                                 \l  %17 = load i32, i32* %4, align 4\l  %18 = add nsw i32 %17, 1\l  store i32 %18, i32* %4, align 4\l  br label %\"0x5649f7f6c000\"\l}"];
	Node0x5649f7f76330 -> Node0x5649f7f6c000;
	Node0x5649f7f6c210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{\"0x5649f7f6c210\":                                 \l  store i32 0, i32* %4, align 4\l  br label %\"0x5649f7f75dd0\"\l}"];
	Node0x5649f7f6c210 -> Node0x5649f7f75dd0;
	Node0x5649f7f75dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{\"0x5649f7f75dd0\":                                 \l  %19 = load i32, i32* %4, align 4\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds [65 x i8], [65 x i8]* @Decode64.zBase, i64 0,\l... i64 %20\l  %22 = load i8, i8* %21, align 1\l  %23 = icmp ne i8 %22, 0\l  br i1 %23, label %\"0x5649f7f76550\", label %\"0x5649f7f77090\"\l|{<s0>T|<s1>F}}"];
	Node0x5649f7f75dd0:s0 -> Node0x5649f7f76550;
	Node0x5649f7f75dd0:s1 -> Node0x5649f7f77090;
	Node0x5649f7f76550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{\"0x5649f7f76550\":                                 \l  %24 = load i32, i32* %4, align 4\l  %25 = load i32, i32* %4, align 4\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds [65 x i8], [65 x i8]* @Decode64.zBase, i64 0,\l... i64 %26\l  %28 = load i8, i8* %27, align 1\l  %29 = zext i8 %28 to i32\l  %30 = and i32 %29, 127\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds [128 x i32], [128 x i32]* @Decode64.trans, i64\l... 0, i64 %31\l  store i32 %24, i32* %32, align 4\l  br label %\"0x5649f7f76cd0\"\l}"];
	Node0x5649f7f76550 -> Node0x5649f7f76cd0;
	Node0x5649f7f76cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{\"0x5649f7f76cd0\":                                 \l  %33 = load i32, i32* %4, align 4\l  %34 = add nsw i32 %33, 1\l  store i32 %34, i32* %4, align 4\l  br label %\"0x5649f7f75dd0\"\l}"];
	Node0x5649f7f76cd0 -> Node0x5649f7f75dd0;
	Node0x5649f7f77090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{\"0x5649f7f77090\":                                 \l  store i32 1, i32* @Decode64.isInit, align 4\l  br label %\"0x5649f7f6b960 - Exit Point\"\l}"];
	Node0x5649f7f77090 -> Node0x5649f7f6b960;
	Node0x5649f7f6b960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{\"0x5649f7f6b960 - Exit Point\":                    \l  %35 = load i8*, i8** %1, align 8\l  %36 = call i64 @strlen(i8* %35)\l  %37 = trunc i64 %36 to i32\l  store i32 %37, i32* %3, align 4\l  br label %\"0x5649f7f78010\"\l}"];
	Node0x5649f7f6b960 -> Node0x5649f7f78010;
	Node0x5649f7f78010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5649f7f78010\":                                 \l  %38 = load i32, i32* %3, align 4\l  %39 = icmp sgt i32 %38, 0\l  br i1 %39, label %\"0x5649f7f77bd0\", label %\"0x5649f7f77810\"\l|{<s0>T|<s1>F}}"];
	Node0x5649f7f78010:s0 -> Node0x5649f7f77bd0;
	Node0x5649f7f78010:s1 -> Node0x5649f7f77810;
	Node0x5649f7f77bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{\"0x5649f7f77bd0\":                                 \l  %40 = load i8*, i8** %1, align 8\l  %41 = load i32, i32* %3, align 4\l  %42 = sub nsw i32 %41, 1\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i8, i8* %40, i64 %43\l  %45 = load i8, i8* %44, align 1\l  %46 = sext i8 %45 to i32\l  %47 = icmp eq i32 %46, 61\l  br label %\"0x5649f7f77810\"\l}"];
	Node0x5649f7f77bd0 -> Node0x5649f7f77810;
	Node0x5649f7f77810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5649f7f77810\":                                 \l  %48 = phi i1 [ false, %\"0x5649f7f78010\" ], [ %47, %\"0x5649f7f77bd0\" ]\l  br i1 %48, label %\"0x5649f7fa4bd0\", label %\"0x5649f7fa4c20\"\l|{<s0>T|<s1>F}}"];
	Node0x5649f7f77810:s0 -> Node0x5649f7fa4bd0;
	Node0x5649f7f77810:s1 -> Node0x5649f7fa4c20;
	Node0x5649f7fa4bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5649f7fa4bd0\":                                 \l  %49 = load i32, i32* %3, align 4\l  %50 = add nsw i32 %49, -1\l  store i32 %50, i32* %3, align 4\l  br label %\"0x5649f7f78010\"\l}"];
	Node0x5649f7fa4bd0 -> Node0x5649f7f78010;
	Node0x5649f7fa4c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{\"0x5649f7fa4c20\":                                 \l  %51 = load i8*, i8** %1, align 8\l  store i8* %51, i8** %2, align 8\l  store i32 0, i32* %5, align 4\l  store i32 0, i32* %4, align 4\l  br label %\"0x5649f7fa5140\"\l}"];
	Node0x5649f7fa4c20 -> Node0x5649f7fa5140;
	Node0x5649f7fa5140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5649f7fa5140\":                                 \l  %52 = load i32, i32* %4, align 4\l  %53 = add nsw i32 %52, 3\l  %54 = load i32, i32* %3, align 4\l  %55 = icmp slt i32 %53, %54\l  br i1 %55, label %\"0x5649f7fa5400\", label %\"0x5649f7fa5450\"\l|{<s0>T|<s1>F}}"];
	Node0x5649f7fa5140:s0 -> Node0x5649f7fa5400;
	Node0x5649f7fa5140:s1 -> Node0x5649f7fa5450;
	Node0x5649f7fa5400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5649f7fa5400\":                                 \l  %56 = load i8*, i8** %1, align 8\l  %57 = load i32, i32* %4, align 4\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i8, i8* %56, i64 %58\l  %60 = load i8, i8* %59, align 1\l  %61 = sext i8 %60 to i32\l  %62 = and i32 %61, 127\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds [128 x i32], [128 x i32]* @Decode64.trans, i64\l... 0, i64 %63\l  %65 = load i32, i32* %64, align 4\l  store i32 %65, i32* %6, align 4\l  %66 = load i8*, i8** %1, align 8\l  %67 = load i32, i32* %4, align 4\l  %68 = add nsw i32 %67, 1\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i8, i8* %66, i64 %69\l  %71 = load i8, i8* %70, align 1\l  %72 = sext i8 %71 to i32\l  %73 = and i32 %72, 127\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds [128 x i32], [128 x i32]* @Decode64.trans, i64\l... 0, i64 %74\l  %76 = load i32, i32* %75, align 4\l  store i32 %76, i32* %7, align 4\l  %77 = load i8*, i8** %1, align 8\l  %78 = load i32, i32* %4, align 4\l  %79 = add nsw i32 %78, 2\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i8, i8* %77, i64 %80\l  %82 = load i8, i8* %81, align 1\l  %83 = sext i8 %82 to i32\l  %84 = and i32 %83, 127\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds [128 x i32], [128 x i32]* @Decode64.trans, i64\l... 0, i64 %85\l  %87 = load i32, i32* %86, align 4\l  store i32 %87, i32* %8, align 4\l  %88 = load i8*, i8** %1, align 8\l  %89 = load i32, i32* %4, align 4\l  %90 = add nsw i32 %89, 3\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds i8, i8* %88, i64 %91\l  %93 = load i8, i8* %92, align 1\l  %94 = sext i8 %93 to i32\l  %95 = and i32 %94, 127\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds [128 x i32], [128 x i32]* @Decode64.trans, i64\l... 0, i64 %96\l  %98 = load i32, i32* %97, align 4\l  store i32 %98, i32* %9, align 4\l  %99 = load i32, i32* %6, align 4\l  %100 = shl i32 %99, 2\l  %101 = and i32 %100, 252\l  %102 = load i32, i32* %7, align 4\l  %103 = ashr i32 %102, 4\l  %104 = and i32 %103, 3\l  %105 = or i32 %101, %104\l  %106 = trunc i32 %105 to i8\l  %107 = load i8*, i8** %2, align 8\l  %108 = load i32, i32* %5, align 4\l  %109 = add nsw i32 %108, 1\l  store i32 %109, i32* %5, align 4\l  %110 = sext i32 %108 to i64\l  %111 = getelementptr inbounds i8, i8* %107, i64 %110\l  store i8 %106, i8* %111, align 1\l  %112 = load i32, i32* %7, align 4\l  %113 = shl i32 %112, 4\l  %114 = and i32 %113, 240\l  %115 = load i32, i32* %8, align 4\l  %116 = ashr i32 %115, 2\l  %117 = and i32 %116, 15\l  %118 = or i32 %114, %117\l  %119 = trunc i32 %118 to i8\l  %120 = load i8*, i8** %2, align 8\l  %121 = load i32, i32* %5, align 4\l  %122 = add nsw i32 %121, 1\l  store i32 %122, i32* %5, align 4\l  %123 = sext i32 %121 to i64\l  %124 = getelementptr inbounds i8, i8* %120, i64 %123\l  store i8 %119, i8* %124, align 1\l  %125 = load i32, i32* %8, align 4\l  %126 = shl i32 %125, 6\l  %127 = and i32 %126, 192\l  %128 = load i32, i32* %9, align 4\l  %129 = and i32 %128, 63\l  %130 = or i32 %127, %129\l  %131 = trunc i32 %130 to i8\l  %132 = load i8*, i8** %2, align 8\l  %133 = load i32, i32* %5, align 4\l  %134 = add nsw i32 %133, 1\l  store i32 %134, i32* %5, align 4\l  %135 = sext i32 %133 to i64\l  %136 = getelementptr inbounds i8, i8* %132, i64 %135\l  store i8 %131, i8* %136, align 1\l  br label %\"0x5649f7f4c8c0\"\l}"];
	Node0x5649f7fa5400 -> Node0x5649f7f4c8c0;
	Node0x5649f7f4c8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5649f7f4c8c0\":                                 \l  %137 = load i32, i32* %4, align 4\l  %138 = add nsw i32 %137, 4\l  store i32 %138, i32* %4, align 4\l  br label %\"0x5649f7fa5140\"\l}"];
	Node0x5649f7f4c8c0 -> Node0x5649f7fa5140;
	Node0x5649f7fa5450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{\"0x5649f7fa5450\":                                 \l  %139 = load i32, i32* %4, align 4\l  %140 = add nsw i32 %139, 2\l  %141 = load i32, i32* %3, align 4\l  %142 = icmp slt i32 %140, %141\l  br i1 %142, label %\"0x5649f7f4c910\", label %\"0x5649f7fa9810\"\l|{<s0>T|<s1>F}}"];
	Node0x5649f7fa5450:s0 -> Node0x5649f7f4c910;
	Node0x5649f7fa5450:s1 -> Node0x5649f7fa9810;
	Node0x5649f7f4c910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{\"0x5649f7f4c910\":                                 \l  %143 = load i8*, i8** %1, align 8\l  %144 = load i32, i32* %4, align 4\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds i8, i8* %143, i64 %145\l  %147 = load i8, i8* %146, align 1\l  %148 = sext i8 %147 to i32\l  %149 = and i32 %148, 127\l  %150 = sext i32 %149 to i64\l  %151 = getelementptr inbounds [128 x i32], [128 x i32]* @Decode64.trans, i64\l... 0, i64 %150\l  %152 = load i32, i32* %151, align 4\l  store i32 %152, i32* %6, align 4\l  %153 = load i8*, i8** %1, align 8\l  %154 = load i32, i32* %4, align 4\l  %155 = add nsw i32 %154, 1\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds i8, i8* %153, i64 %156\l  %158 = load i8, i8* %157, align 1\l  %159 = sext i8 %158 to i32\l  %160 = and i32 %159, 127\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds [128 x i32], [128 x i32]* @Decode64.trans, i64\l... 0, i64 %161\l  %163 = load i32, i32* %162, align 4\l  store i32 %163, i32* %7, align 4\l  %164 = load i8*, i8** %1, align 8\l  %165 = load i32, i32* %4, align 4\l  %166 = add nsw i32 %165, 2\l  %167 = sext i32 %166 to i64\l  %168 = getelementptr inbounds i8, i8* %164, i64 %167\l  %169 = load i8, i8* %168, align 1\l  %170 = sext i8 %169 to i32\l  %171 = and i32 %170, 127\l  %172 = sext i32 %171 to i64\l  %173 = getelementptr inbounds [128 x i32], [128 x i32]* @Decode64.trans, i64\l... 0, i64 %172\l  %174 = load i32, i32* %173, align 4\l  store i32 %174, i32* %8, align 4\l  %175 = load i32, i32* %6, align 4\l  %176 = shl i32 %175, 2\l  %177 = and i32 %176, 252\l  %178 = load i32, i32* %7, align 4\l  %179 = ashr i32 %178, 4\l  %180 = and i32 %179, 3\l  %181 = or i32 %177, %180\l  %182 = trunc i32 %181 to i8\l  %183 = load i8*, i8** %2, align 8\l  %184 = load i32, i32* %5, align 4\l  %185 = add nsw i32 %184, 1\l  store i32 %185, i32* %5, align 4\l  %186 = sext i32 %184 to i64\l  %187 = getelementptr inbounds i8, i8* %183, i64 %186\l  store i8 %182, i8* %187, align 1\l  %188 = load i32, i32* %7, align 4\l  %189 = shl i32 %188, 4\l  %190 = and i32 %189, 240\l  %191 = load i32, i32* %8, align 4\l  %192 = ashr i32 %191, 2\l  %193 = and i32 %192, 15\l  %194 = or i32 %190, %193\l  %195 = trunc i32 %194 to i8\l  %196 = load i8*, i8** %2, align 8\l  %197 = load i32, i32* %5, align 4\l  %198 = add nsw i32 %197, 1\l  store i32 %198, i32* %5, align 4\l  %199 = sext i32 %197 to i64\l  %200 = getelementptr inbounds i8, i8* %196, i64 %199\l  store i8 %195, i8* %200, align 1\l  br label %\"0x5649f7faba60\"\l}"];
	Node0x5649f7f4c910 -> Node0x5649f7faba60;
	Node0x5649f7fa9810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{\"0x5649f7fa9810\":                                 \l  %201 = load i32, i32* %4, align 4\l  %202 = add nsw i32 %201, 1\l  %203 = load i32, i32* %3, align 4\l  %204 = icmp slt i32 %202, %203\l  br i1 %204, label %\"0x5649f7fabd20\", label %\"0x5649f7fabd70\"\l|{<s0>T|<s1>F}}"];
	Node0x5649f7fa9810:s0 -> Node0x5649f7fabd20;
	Node0x5649f7fa9810:s1 -> Node0x5649f7fabd70;
	Node0x5649f7fabd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{\"0x5649f7fabd20\":                                 \l  %205 = load i8*, i8** %1, align 8\l  %206 = load i32, i32* %4, align 4\l  %207 = sext i32 %206 to i64\l  %208 = getelementptr inbounds i8, i8* %205, i64 %207\l  %209 = load i8, i8* %208, align 1\l  %210 = sext i8 %209 to i32\l  %211 = and i32 %210, 127\l  %212 = sext i32 %211 to i64\l  %213 = getelementptr inbounds [128 x i32], [128 x i32]* @Decode64.trans, i64\l... 0, i64 %212\l  %214 = load i32, i32* %213, align 4\l  store i32 %214, i32* %6, align 4\l  %215 = load i8*, i8** %1, align 8\l  %216 = load i32, i32* %4, align 4\l  %217 = add nsw i32 %216, 1\l  %218 = sext i32 %217 to i64\l  %219 = getelementptr inbounds i8, i8* %215, i64 %218\l  %220 = load i8, i8* %219, align 1\l  %221 = sext i8 %220 to i32\l  %222 = and i32 %221, 127\l  %223 = sext i32 %222 to i64\l  %224 = getelementptr inbounds [128 x i32], [128 x i32]* @Decode64.trans, i64\l... 0, i64 %223\l  %225 = load i32, i32* %224, align 4\l  store i32 %225, i32* %7, align 4\l  %226 = load i32, i32* %6, align 4\l  %227 = shl i32 %226, 2\l  %228 = and i32 %227, 252\l  %229 = load i32, i32* %7, align 4\l  %230 = ashr i32 %229, 4\l  %231 = and i32 %230, 3\l  %232 = or i32 %228, %231\l  %233 = trunc i32 %232 to i8\l  %234 = load i8*, i8** %2, align 8\l  %235 = load i32, i32* %5, align 4\l  %236 = add nsw i32 %235, 1\l  store i32 %236, i32* %5, align 4\l  %237 = sext i32 %235 to i64\l  %238 = getelementptr inbounds i8, i8* %234, i64 %237\l  store i8 %233, i8* %238, align 1\l  br label %\"0x5649f7fabd70\"\l}"];
	Node0x5649f7fabd20 -> Node0x5649f7fabd70;
	Node0x5649f7fabd70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{\"0x5649f7fabd70\":                                 \l  br label %\"0x5649f7faba60\"\l}"];
	Node0x5649f7fabd70 -> Node0x5649f7faba60;
	Node0x5649f7faba60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{\"0x5649f7faba60\":                                 \l  %239 = load i8*, i8** %2, align 8\l  %240 = load i32, i32* %5, align 4\l  %241 = sext i32 %240 to i64\l  %242 = getelementptr inbounds i8, i8* %239, i64 %241\l  store i8 0, i8* %242, align 1\l  ret void\l}"];
}
