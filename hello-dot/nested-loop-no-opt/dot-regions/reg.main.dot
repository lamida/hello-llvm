digraph "Region Graph for 'main' function" {
	label="Region Graph for 'main' function";

	Node0x55a3601f30f0 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  store i32 0, i32* %retval, align 4\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x55a3601f30f0 -> Node0x55a3601f34a0;
	Node0x55a3601f34a0 [shape=record,label="{for.cond:                                         \l  %0 = load i32, i32* %i, align 4\l  %cmp = icmp slt i32 %0, 10\l  br i1 %cmp, label %for.body, label %for.end12\l}"];
	Node0x55a3601f34a0 -> Node0x55a360212310;
	Node0x55a3601f34a0 -> Node0x55a360212330;
	Node0x55a360212310 [shape=record,label="{for.body:                                         \l  store i32 0, i32* %j, align 4\l  br label %for.cond1\l}"];
	Node0x55a360212310 -> Node0x55a360212450;
	Node0x55a360212450 [shape=record,label="{for.cond1:                                        \l  %1 = load i32, i32* %j, align 4\l  %cmp2 = icmp slt i32 %1, 5\l  br i1 %cmp2, label %for.body3, label %for.end9\l}"];
	Node0x55a360212450 -> Node0x55a360212560;
	Node0x55a360212450 -> Node0x55a360212580;
	Node0x55a360212560 [shape=record,label="{for.body3:                                        \l  store i32 0, i32* %k, align 4\l  br label %for.cond4\l}"];
	Node0x55a360212560 -> Node0x55a360212770;
	Node0x55a360212770 [shape=record,label="{for.cond4:                                        \l  %2 = load i32, i32* %k, align 4\l  %cmp5 = icmp slt i32 %2, 100\l  br i1 %cmp5, label %for.body6, label %for.end\l}"];
	Node0x55a360212770 -> Node0x55a3602127d0;
	Node0x55a360212770 -> Node0x55a3602127f0;
	Node0x55a3602127d0 [shape=record,label="{for.body6:                                        \l  %3 = load i32, i32* %i, align 4\l  %4 = load i32, i32* %j, align 4\l  %5 = load i32, i32* %k, align 4\l  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8],\l... [29 x i8]* @.str, i64 0, i64 0), i32 %3, i32 %4, i32 %5)\l  br label %for.inc\l}"];
	Node0x55a3602127d0 -> Node0x55a360212b40;
	Node0x55a360212b40 [shape=record,label="{for.inc:                                          \l  %6 = load i32, i32* %k, align 4\l  %inc = add nsw i32 %6, 1\l  store i32 %inc, i32* %k, align 4\l  br label %for.cond4\l}"];
	Node0x55a360212b40 -> Node0x55a360212770[constraint=false];
	Node0x55a3602127f0 [shape=record,label="{for.end:                                          \l  br label %for.inc7\l}"];
	Node0x55a3602127f0 -> Node0x55a360212ba0;
	Node0x55a360212ba0 [shape=record,label="{for.inc7:                                         \l  %7 = load i32, i32* %j, align 4\l  %inc8 = add nsw i32 %7, 1\l  store i32 %inc8, i32* %j, align 4\l  br label %for.cond1\l}"];
	Node0x55a360212ba0 -> Node0x55a360212450[constraint=false];
	Node0x55a360212580 [shape=record,label="{for.end9:                                         \l  br label %for.inc10\l}"];
	Node0x55a360212580 -> Node0x55a360213080;
	Node0x55a360213080 [shape=record,label="{for.inc10:                                        \l  %8 = load i32, i32* %i, align 4\l  %inc11 = add nsw i32 %8, 1\l  store i32 %inc11, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x55a360213080 -> Node0x55a3601f34a0[constraint=false];
	Node0x55a360212330 [shape=record,label="{for.end12:                                        \l  %9 = load i32, i32* %retval, align 4\l  ret i32 %9\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x55a3601f9c00 {
          label = "";
          style = filled;
          color = 1
          subgraph cluster_0x55a3601e39e0 {
            label = "";
            style = filled;
            color = 3
            subgraph cluster_0x55a3601e3960 {
              label = "";
              style = filled;
              color = 5
              subgraph cluster_0x55a3601f9a40 {
                label = "";
                style = filled;
                color = 7
                Node0x55a360212770;
                Node0x55a3602127d0;
                Node0x55a360212b40;
              }
              Node0x55a360212450;
              Node0x55a360212560;
              Node0x55a3602127f0;
              Node0x55a360212ba0;
            }
            Node0x55a3601f34a0;
            Node0x55a360212310;
            Node0x55a360212580;
            Node0x55a360213080;
          }
          Node0x55a3601f30f0;
          Node0x55a360212330;
        }
}
