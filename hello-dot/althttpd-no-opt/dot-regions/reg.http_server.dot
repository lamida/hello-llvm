digraph "Region Graph for 'http_server' function" {
	label="Region Graph for 'http_server' function";

	Node0x961a80 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %zPort.addr = alloca i8*, align 8\l  %localOnly.addr = alloca i32, align 4\l  %listener = alloca [20 x i32], align 16\l  %connection = alloca i32, align 4\l  %readfds = alloca %struct.fd_set, align 8\l  %inaddr = alloca %union.address, align 8\l  %lenaddr = alloca i32, align 4\l  %child = alloca i32, align 4\l  %nchildren = alloca i32, align 4\l  %delay = alloca %struct.timeval, align 8\l  %opt = alloca i32, align 4\l  %sHints = alloca %struct.addrinfo, align 8\l  %pAddrs = alloca %struct.addrinfo*, align 8\l  %p = alloca %struct.addrinfo*, align 8\l  %rc = alloca i32, align 4\l  %i = alloca i32, align 4\l  %n = alloca i32, align 4\l  %maxFd = alloca i32, align 4\l  %v6only = alloca i32, align 4\l  %__d0 = alloca i32, align 4\l  %__d1 = alloca i32, align 4\l  %nErr = alloca i32, align 4\l  %fd = alloca i32, align 4\l  store i8* %zPort, i8** %zPort.addr, align 8\l  store i32 %localOnly, i32* %localOnly.addr, align 4\l  store i32 0, i32* %nchildren, align 4\l  store i32 1, i32* %opt, align 4\l  store i32 -1, i32* %maxFd, align 4\l  %0 = bitcast %struct.addrinfo* %sHints to i8*\l  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 48, i1 false)\l  %1 = load i32, i32* @ipv4Only, align 4\l  %tobool = icmp ne i32 %1, 0\l  br i1 %tobool, label %if.then, label %if.else\l}"];
	Node0x961a80 -> Node0x943be0;
	Node0x961a80 -> Node0x980db0;
	Node0x943be0 [shape=record,label="{if.then:                                          \l  %ai_family = getelementptr inbounds %struct.addrinfo, %struct.addrinfo*\l... %sHints, i32 0, i32 1\l  store i32 2, i32* %ai_family, align 4\l  br label %if.end6\l}"];
	Node0x943be0 -> Node0x94de00;
	Node0x94de00 [shape=record,label="{if.end6:                                          \l  %ai_socktype = getelementptr inbounds %struct.addrinfo, %struct.addrinfo*\l... %sHints, i32 0, i32 2\l  store i32 1, i32* %ai_socktype, align 8\l  %ai_flags = getelementptr inbounds %struct.addrinfo, %struct.addrinfo*\l... %sHints, i32 0, i32 0\l  store i32 1, i32* %ai_flags, align 8\l  %ai_protocol = getelementptr inbounds %struct.addrinfo, %struct.addrinfo*\l... %sHints, i32 0, i32 3\l  store i32 0, i32* %ai_protocol, align 4\l  %3 = load i32, i32* %localOnly.addr, align 4\l  %tobool7 = icmp ne i32 %3, 0\l  %4 = zext i1 %tobool7 to i64\l  %cond = select i1 %tobool7, i8* getelementptr inbounds ([10 x i8], [10 x\l... i8]* @.str.407, i64 0, i64 0), i8* null\l  %5 = load i8*, i8** %zPort.addr, align 8\l  %call = call i32 @getaddrinfo(i8* %cond, i8* %5, %struct.addrinfo* %sHints,\l... %struct.addrinfo** %pAddrs)\l  store i32 %call, i32* %rc, align 4\l  %6 = load i32, i32* %rc, align 4\l  %tobool8 = icmp ne i32 %6, 0\l  br i1 %tobool8, label %if.then9, label %if.end15\l}"];
	Node0x94de00 -> Node0x963980;
	Node0x94de00 -> Node0x899760;
	Node0x963980 [shape=record,label="{if.then9:                                         \l  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8\l  %8 = load i32, i32* %rc, align 4\l  %cmp = icmp ne i32 %8, -11\l  br i1 %cmp, label %cond.true, label %cond.false\l}"];
	Node0x963980 -> Node0x95a1e0;
	Node0x963980 -> Node0x8e2580;
	Node0x95a1e0 [shape=record,label="{cond.true:                                        \l  %9 = load i32, i32* %rc, align 4\l  %call10 = call i8* @gai_strerror(i32 %9) #7\l  br label %cond.end\l}"];
	Node0x95a1e0 -> Node0x9558d0;
	Node0x9558d0 [shape=record,label="{cond.end:                                         \l  %cond13 = phi i8* [ %call10, %cond.true ], [ %call12, %cond.false ]\l  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.408, i64 0, i64\l... 0), i8* %cond13)\l  store i32 1, i32* %retval, align 4\l  br label %return\l}"];
	Node0x9558d0 -> Node0x92cdd0;
	Node0x92cdd0 [shape=record,label="{return:                                           \l  %97 = load i32, i32* %retval, align 4\l  ret i32 %97\l}"];
	Node0x8e2580 [shape=record,label="{cond.false:                                       \l  %call11 = call i32* @__errno_location() #8\l  %10 = load i32, i32* %call11, align 4\l  %call12 = call i8* @strerror(i32 %10) #7\l  br label %cond.end\l}"];
	Node0x8e2580 -> Node0x9558d0;
	Node0x899760 [shape=record,label="{if.end15:                                         \l  store i32 0, i32* %n, align 4\l  %11 = load %struct.addrinfo*, %struct.addrinfo** %pAddrs, align 8\l  store %struct.addrinfo* %11, %struct.addrinfo** %p, align 8\l  br label %for.cond\l}"];
	Node0x899760 -> Node0x936a00;
	Node0x936a00 [shape=record,label="{for.cond:                                         \l  %12 = load i32, i32* %n, align 4\l  %cmp16 = icmp slt i32 %12, 20\l  br i1 %cmp16, label %land.rhs, label %land.end\l}"];
	Node0x936a00 -> Node0x94ab10;
	Node0x936a00 -> Node0x8ef250;
	Node0x94ab10 [shape=record,label="{land.rhs:                                         \l  %13 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8\l  %cmp17 = icmp ne %struct.addrinfo* %13, null\l  br label %land.end\l}"];
	Node0x94ab10 -> Node0x8ef250;
	Node0x8ef250 [shape=record,label="{land.end:                                         \l  %14 = phi i1 [ false, %for.cond ], [ %cmp17, %land.rhs ]\l  br i1 %14, label %for.body, label %for.end\l}"];
	Node0x8ef250 -> Node0x936c80;
	Node0x8ef250 -> Node0x8aed00;
	Node0x936c80 [shape=record,label="{for.body:                                         \l  %15 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8\l  %ai_family18 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo*\l... %15, i32 0, i32 1\l  %16 = load i32, i32* %ai_family18, align 4\l  %17 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8\l  %ai_socktype19 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo*\l... %17, i32 0, i32 2\l  %18 = load i32, i32* %ai_socktype19, align 8\l  %19 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8\l  %ai_protocol20 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo*\l... %19, i32 0, i32 3\l  %20 = load i32, i32* %ai_protocol20, align 4\l  %call21 = call i32 @socket(i32 %16, i32 %18, i32 %20) #7\l  %21 = load i32, i32* %n, align 4\l  %idxprom = sext i32 %21 to i64\l  %arrayidx = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64 0,\l... i64 %idxprom\l  store i32 %call21, i32* %arrayidx, align 4\l  %22 = load i32, i32* %n, align 4\l  %idxprom22 = sext i32 %22 to i64\l  %arrayidx23 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom22\l  %23 = load i32, i32* %arrayidx23, align 4\l  %cmp24 = icmp sge i32 %23, 0\l  br i1 %cmp24, label %if.then25, label %if.end60\l}"];
	Node0x936c80 -> Node0x927420;
	Node0x936c80 -> Node0x9234a0;
	Node0x927420 [shape=record,label="{if.then25:                                        \l  %24 = load i32, i32* %n, align 4\l  %idxprom26 = sext i32 %24 to i64\l  %arrayidx27 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom26\l  %25 = load i32, i32* %arrayidx27, align 4\l  %26 = bitcast i32* %opt to i8*\l  %call28 = call i32 @setsockopt(i32 %25, i32 1, i32 2, i8* %26, i32 4) #7\l  %27 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8\l  %ai_family29 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo*\l... %27, i32 0, i32 1\l  %28 = load i32, i32* %ai_family29, align 4\l  %cmp30 = icmp eq i32 %28, 10\l  br i1 %cmp30, label %if.then31, label %if.end35\l}"];
	Node0x927420 -> Node0x956110;
	Node0x927420 -> Node0x96d960;
	Node0x956110 [shape=record,label="{if.then31:                                        \l  store i32 1, i32* %v6only, align 4\l  %29 = load i32, i32* %n, align 4\l  %idxprom32 = sext i32 %29 to i64\l  %arrayidx33 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom32\l  %30 = load i32, i32* %arrayidx33, align 4\l  %31 = bitcast i32* %v6only to i8*\l  %call34 = call i32 @setsockopt(i32 %30, i32 41, i32 26, i8* %31, i32 4) #7\l  br label %if.end35\l}"];
	Node0x956110 -> Node0x96d960;
	Node0x96d960 [shape=record,label="{if.end35:                                         \l  %32 = load i32, i32* %n, align 4\l  %idxprom36 = sext i32 %32 to i64\l  %arrayidx37 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom36\l  %33 = load i32, i32* %arrayidx37, align 4\l  %34 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8\l  %ai_addr = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %34,\l... i32 0, i32 5\l  %35 = load %struct.sockaddr*, %struct.sockaddr** %ai_addr, align 8\l  %36 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8\l  %ai_addrlen = getelementptr inbounds %struct.addrinfo, %struct.addrinfo*\l... %36, i32 0, i32 4\l  %37 = load i32, i32* %ai_addrlen, align 8\l  %call38 = call i32 @bind(i32 %33, %struct.sockaddr* %35, i32 %37) #7\l  %cmp39 = icmp slt i32 %call38, 0\l  br i1 %cmp39, label %if.then40, label %if.end47\l}"];
	Node0x96d960 -> Node0x93d700;
	Node0x96d960 -> Node0x92f360;
	Node0x93d700 [shape=record,label="{if.then40:                                        \l  %call41 = call i32* @__errno_location() #8\l  %38 = load i32, i32* %call41, align 4\l  %call42 = call i8* @strerror(i32 %38) #7\l  %call43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8],\l... [17 x i8]* @.str.409, i64 0, i64 0), i8* %call42)\l  %39 = load i32, i32* %n, align 4\l  %idxprom44 = sext i32 %39 to i64\l  %arrayidx45 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom44\l  %40 = load i32, i32* %arrayidx45, align 4\l  %call46 = call i32 @close(i32 %40)\l  br label %for.inc\l}"];
	Node0x93d700 -> Node0x941000;
	Node0x941000 [shape=record,label="{for.inc:                                          \l  %47 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8\l  %ai_next = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %47,\l... i32 0, i32 7\l  %48 = load %struct.addrinfo*, %struct.addrinfo** %ai_next, align 8\l  store %struct.addrinfo* %48, %struct.addrinfo** %p, align 8\l  br label %for.cond\l}"];
	Node0x941000 -> Node0x936a00[constraint=false];
	Node0x92f360 [shape=record,label="{if.end47:                                         \l  %41 = load i32, i32* %n, align 4\l  %idxprom48 = sext i32 %41 to i64\l  %arrayidx49 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom48\l  %42 = load i32, i32* %arrayidx49, align 4\l  %call50 = call i32 @listen(i32 %42, i32 20) #7\l  %cmp51 = icmp slt i32 %call50, 0\l  br i1 %cmp51, label %if.then52, label %if.end59\l}"];
	Node0x92f360 -> Node0x8c12f0;
	Node0x92f360 -> Node0x8b1c40;
	Node0x8c12f0 [shape=record,label="{if.then52:                                        \l  %call53 = call i32* @__errno_location() #8\l  %43 = load i32, i32* %call53, align 4\l  %call54 = call i8* @strerror(i32 %43) #7\l  %call55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8],\l... [21 x i8]* @.str.410, i64 0, i64 0), i8* %call54)\l  %44 = load i32, i32* %n, align 4\l  %idxprom56 = sext i32 %44 to i64\l  %arrayidx57 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom56\l  %45 = load i32, i32* %arrayidx57, align 4\l  %call58 = call i32 @close(i32 %45)\l  br label %for.inc\l}"];
	Node0x8c12f0 -> Node0x941000;
	Node0x8b1c40 [shape=record,label="{if.end59:                                         \l  %46 = load i32, i32* %n, align 4\l  %inc = add nsw i32 %46, 1\l  store i32 %inc, i32* %n, align 4\l  br label %if.end60\l}"];
	Node0x8b1c40 -> Node0x9234a0;
	Node0x9234a0 [shape=record,label="{if.end60:                                         \l  br label %for.inc\l}"];
	Node0x9234a0 -> Node0x941000;
	Node0x8aed00 [shape=record,label="{for.end:                                          \l  %49 = load i32, i32* %n, align 4\l  %cmp61 = icmp eq i32 %49, 0\l  br i1 %cmp61, label %if.then62, label %if.end64\l}"];
	Node0x8aed00 -> Node0x8c0aa0;
	Node0x8aed00 -> Node0x94a520;
	Node0x8c0aa0 [shape=record,label="{if.then62:                                        \l  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8\l  %call63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %50, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.411, i64 0, i64\l... 0))\l  store i32 1, i32* %retval, align 4\l  br label %return\l}"];
	Node0x8c0aa0 -> Node0x92cdd0;
	Node0x94a520 [shape=record,label="{if.end64:                                         \l  br label %while.body\l}"];
	Node0x94a520 -> Node0x942310;
	Node0x942310 [shape=record,label="{while.body:                                       \l  %51 = load i32, i32* %nchildren, align 4\l  %cmp65 = icmp sgt i32 %51, 50\l  br i1 %cmp65, label %if.then66, label %if.end68\l}"];
	Node0x942310 -> Node0x93c360;
	Node0x942310 -> Node0x95e250;
	Node0x93c360 [shape=record,label="{if.then66:                                        \l  %52 = load i32, i32* %nchildren, align 4\l  %sub = sub nsw i32 %52, 50\l  %call67 = call i32 @sleep(i32 %sub)\l  br label %if.end68\l}"];
	Node0x93c360 -> Node0x95e250;
	Node0x95e250 [shape=record,label="{if.end68:                                         \l  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %delay,\l... i32 0, i32 0\l  store i64 60, i64* %tv_sec, align 8\l  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %delay,\l... i32 0, i32 1\l  store i64 0, i64* %tv_usec, align 8\l  br label %do.body\l}"];
	Node0x95e250 -> Node0x909bf0;
	Node0x909bf0 [shape=record,label="{do.body:                                          \l  %__fds_bits = getelementptr inbounds %struct.fd_set, %struct.fd_set*\l... %readfds, i32 0, i32 0\l  %arrayidx69 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits,\l... i64 0, i64 0\l  %53 = call \{ i64, i64* \} asm sideeffect \"cld\l  %asmresult = extractvalue \{ i64, i64* \} %53, 0\l  %asmresult70 = extractvalue \{ i64, i64* \} %53, 1\l  %54 = trunc i64 %asmresult to i32\l  store i32 %54, i32* %__d0, align 4\l  %55 = ptrtoint i64* %asmresult70 to i64\l  %56 = trunc i64 %55 to i32\l  store i32 %56, i32* %__d1, align 4\l  br label %do.end\l}"];
	Node0x909bf0 -> Node0x93ead0;
	Node0x93ead0 [shape=record,label="{do.end:                                           \l  store i32 0, i32* %i, align 4\l  br label %for.cond71\l}"];
	Node0x93ead0 -> Node0x946460;
	Node0x946460 [shape=record,label="{for.cond71:                                       \l  %57 = load i32, i32* %i, align 4\l  %58 = load i32, i32* %n, align 4\l  %cmp72 = icmp slt i32 %57, %58\l  br i1 %cmp72, label %for.body73, label %for.end96\l}"];
	Node0x946460 -> Node0x924800;
	Node0x946460 -> Node0x929e10;
	Node0x924800 [shape=record,label="{for.body73:                                       \l  %59 = load i32, i32* %i, align 4\l  %idxprom74 = sext i32 %59 to i64\l  %arrayidx75 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom74\l  %60 = load i32, i32* %arrayidx75, align 4\l  %cmp76 = icmp sge i32 %60, 0\l  br i1 %cmp76, label %if.then77, label %if.else78\l}"];
	Node0x924800 -> Node0x91ab70;
	Node0x924800 -> Node0x901520;
	Node0x91ab70 [shape=record,label="{if.then77:                                        \l  br label %if.end79\l}"];
	Node0x91ab70 -> Node0x9544e0;
	Node0x9544e0 [shape=record,label="{if.end79:                                         \l  %61 = load i32, i32* %i, align 4\l  %idxprom80 = sext i32 %61 to i64\l  %arrayidx81 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom80\l  %62 = load i32, i32* %arrayidx81, align 4\l  %rem = srem i32 %62, 64\l  %sh_prom = zext i32 %rem to i64\l  %shl = shl i64 1, %sh_prom\l  %__fds_bits82 = getelementptr inbounds %struct.fd_set, %struct.fd_set*\l... %readfds, i32 0, i32 0\l  %63 = load i32, i32* %i, align 4\l  %idxprom83 = sext i32 %63 to i64\l  %arrayidx84 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom83\l  %64 = load i32, i32* %arrayidx84, align 4\l  %div = sdiv i32 %64, 64\l  %idxprom85 = sext i32 %div to i64\l  %arrayidx86 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits82,\l... i64 0, i64 %idxprom85\l  %65 = load i64, i64* %arrayidx86, align 8\l  %or = or i64 %65, %shl\l  store i64 %or, i64* %arrayidx86, align 8\l  %66 = load i32, i32* %i, align 4\l  %idxprom87 = sext i32 %66 to i64\l  %arrayidx88 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom87\l  %67 = load i32, i32* %arrayidx88, align 4\l  %68 = load i32, i32* %maxFd, align 4\l  %cmp89 = icmp sgt i32 %67, %68\l  br i1 %cmp89, label %if.then90, label %if.end93\l}"];
	Node0x9544e0 -> Node0x8f8b20;
	Node0x9544e0 -> Node0x95d0b0;
	Node0x8f8b20 [shape=record,label="{if.then90:                                        \l  %69 = load i32, i32* %i, align 4\l  %idxprom91 = sext i32 %69 to i64\l  %arrayidx92 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom91\l  %70 = load i32, i32* %arrayidx92, align 4\l  store i32 %70, i32* %maxFd, align 4\l  br label %if.end93\l}"];
	Node0x8f8b20 -> Node0x95d0b0;
	Node0x95d0b0 [shape=record,label="{if.end93:                                         \l  br label %for.inc94\l}"];
	Node0x95d0b0 -> Node0x92c070;
	Node0x92c070 [shape=record,label="{for.inc94:                                        \l  %71 = load i32, i32* %i, align 4\l  %inc95 = add nsw i32 %71, 1\l  store i32 %inc95, i32* %i, align 4\l  br label %for.cond71\l}"];
	Node0x92c070 -> Node0x946460;
	Node0x901520 [shape=record,label="{if.else78:                                        \l  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]*\l... @.str.412, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]*\l... @.str.14, i64 0, i64 0), i32 2327, i8* getelementptr inbounds ([35 x i8], [35\l... x i8]* @__PRETTY_FUNCTION__.http_server, i64 0, i64 0)) #9\l  unreachable\l}"];
	Node0x929e10 [shape=record,label="{for.end96:                                        \l  %72 = load i32, i32* %maxFd, align 4\l  %add = add nsw i32 %72, 1\l  %call97 = call i32 @select(i32 %add, %struct.fd_set* %readfds,\l... %struct.fd_set* null, %struct.fd_set* null, %struct.timeval* %delay)\l  store i32 0, i32* %i, align 4\l  br label %for.cond98\l}"];
	Node0x929e10 -> Node0x8bacc0;
	Node0x8bacc0 [shape=record,label="{for.cond98:                                       \l  %73 = load i32, i32* %i, align 4\l  %74 = load i32, i32* %n, align 4\l  %cmp99 = icmp slt i32 %73, %74\l  br i1 %cmp99, label %for.body100, label %for.end150\l}"];
	Node0x8bacc0 -> Node0x8b76d0;
	Node0x8bacc0 -> Node0x8d9d90;
	Node0x8b76d0 [shape=record,label="{for.body100:                                      \l  %__fds_bits101 = getelementptr inbounds %struct.fd_set, %struct.fd_set*\l... %readfds, i32 0, i32 0\l  %75 = load i32, i32* %i, align 4\l  %idxprom102 = sext i32 %75 to i64\l  %arrayidx103 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom102\l  %76 = load i32, i32* %arrayidx103, align 4\l  %div104 = sdiv i32 %76, 64\l  %idxprom105 = sext i32 %div104 to i64\l  %arrayidx106 = getelementptr inbounds [16 x i64], [16 x i64]*\l... %__fds_bits101, i64 0, i64 %idxprom105\l  %77 = load i64, i64* %arrayidx106, align 8\l  %78 = load i32, i32* %i, align 4\l  %idxprom107 = sext i32 %78 to i64\l  %arrayidx108 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom107\l  %79 = load i32, i32* %arrayidx108, align 4\l  %rem109 = srem i32 %79, 64\l  %sh_prom110 = zext i32 %rem109 to i64\l  %shl111 = shl i64 1, %sh_prom110\l  %and = and i64 %77, %shl111\l  %cmp112 = icmp ne i64 %and, 0\l  br i1 %cmp112, label %if.then113, label %if.end143\l}"];
	Node0x8b76d0 -> Node0x8f1120;
	Node0x8b76d0 -> Node0x95c1b0;
	Node0x8f1120 [shape=record,label="{if.then113:                                       \l  store i32 128, i32* %lenaddr, align 4\l  %80 = load i32, i32* %i, align 4\l  %idxprom114 = sext i32 %80 to i64\l  %arrayidx115 = getelementptr inbounds [20 x i32], [20 x i32]* %listener, i64\l... 0, i64 %idxprom114\l  %81 = load i32, i32* %arrayidx115, align 4\l  %sa = bitcast %union.address* %inaddr to %struct.sockaddr*\l  %call116 = call i32 @accept(i32 %81, %struct.sockaddr* %sa, i32* %lenaddr)\l  store i32 %call116, i32* %connection, align 4\l  %82 = load i32, i32* %connection, align 4\l  %cmp117 = icmp sge i32 %82, 0\l  br i1 %cmp117, label %if.then118, label %if.end142\l}"];
	Node0x8f1120 -> Node0x964000;
	Node0x8f1120 -> Node0x89e190;
	Node0x964000 [shape=record,label="{if.then118:                                       \l  %call119 = call i32 @fork() #7\l  store i32 %call119, i32* %child, align 4\l  %83 = load i32, i32* %child, align 4\l  %cmp120 = icmp ne i32 %83, 0\l  br i1 %cmp120, label %if.then121, label %if.else127\l}"];
	Node0x964000 -> Node0x83e600;
	Node0x964000 -> Node0x8f0840;
	Node0x83e600 [shape=record,label="{if.then121:                                       \l  %84 = load i32, i32* %child, align 4\l  %cmp122 = icmp sgt i32 %84, 0\l  br i1 %cmp122, label %if.then123, label %if.end125\l}"];
	Node0x83e600 -> Node0x95c790;
	Node0x83e600 -> Node0x8fe630;
	Node0x95c790 [shape=record,label="{if.then123:                                       \l  %85 = load i32, i32* %nchildren, align 4\l  %inc124 = add nsw i32 %85, 1\l  store i32 %inc124, i32* %nchildren, align 4\l  br label %if.end125\l}"];
	Node0x95c790 -> Node0x8fe630;
	Node0x8fe630 [shape=record,label="{if.end125:                                        \l  %86 = load i32, i32* %connection, align 4\l  %call126 = call i32 @close(i32 %86)\l  br label %if.end141\l}"];
	Node0x8fe630 -> Node0x8c21a0;
	Node0x8c21a0 [shape=record,label="{if.end141:                                        \l  br label %if.end142\l}"];
	Node0x8c21a0 -> Node0x89e190;
	Node0x89e190 [shape=record,label="{if.end142:                                        \l  br label %if.end143\l}"];
	Node0x89e190 -> Node0x95c1b0;
	Node0x95c1b0 [shape=record,label="{if.end143:                                        \l  br label %while.cond144\l}"];
	Node0x95c1b0 -> Node0x9218d0;
	Node0x9218d0 [shape=record,label="{while.cond144:                                    \l  %call145 = call i32 @waitpid(i32 0, i32* null, i32 1)\l  store i32 %call145, i32* %child, align 4\l  %cmp146 = icmp sgt i32 %call145, 0\l  br i1 %cmp146, label %while.body147, label %while.end\l}"];
	Node0x9218d0 -> Node0x978760;
	Node0x9218d0 -> Node0x8b5a00;
	Node0x978760 [shape=record,label="{while.body147:                                    \l  %95 = load i32, i32* %nchildren, align 4\l  %dec = add nsw i32 %95, -1\l  store i32 %dec, i32* %nchildren, align 4\l  br label %while.cond144\l}"];
	Node0x978760 -> Node0x9218d0[constraint=false];
	Node0x8b5a00 [shape=record,label="{while.end:                                        \l  br label %for.inc148\l}"];
	Node0x8b5a00 -> Node0x8fa740;
	Node0x8fa740 [shape=record,label="{for.inc148:                                       \l  %96 = load i32, i32* %i, align 4\l  %inc149 = add nsw i32 %96, 1\l  store i32 %inc149, i32* %i, align 4\l  br label %for.cond98\l}"];
	Node0x8fa740 -> Node0x8bacc0;
	Node0x8f0840 [shape=record,label="{if.else127:                                       \l  store i32 0, i32* %nErr, align 4\l  %call128 = call i32 @close(i32 0)\l  %87 = load i32, i32* %connection, align 4\l  %call129 = call i32 @dup(i32 %87) #7\l  store i32 %call129, i32* %fd, align 4\l  %88 = load i32, i32* %fd, align 4\l  %cmp130 = icmp ne i32 %88, 0\l  br i1 %cmp130, label %if.then131, label %if.end133\l}"];
	Node0x8f0840 -> Node0x8da3c0;
	Node0x8f0840 -> Node0x8ca650;
	Node0x8da3c0 [shape=record,label="{if.then131:                                       \l  %89 = load i32, i32* %nErr, align 4\l  %inc132 = add nsw i32 %89, 1\l  store i32 %inc132, i32* %nErr, align 4\l  br label %if.end133\l}"];
	Node0x8da3c0 -> Node0x8ca650;
	Node0x8ca650 [shape=record,label="{if.end133:                                        \l  %call134 = call i32 @close(i32 1)\l  %90 = load i32, i32* %connection, align 4\l  %call135 = call i32 @dup(i32 %90) #7\l  store i32 %call135, i32* %fd, align 4\l  %91 = load i32, i32* %fd, align 4\l  %cmp136 = icmp ne i32 %91, 1\l  br i1 %cmp136, label %if.then137, label %if.end139\l}"];
	Node0x8ca650 -> Node0x8b18f0;
	Node0x8ca650 -> Node0x8b23e0;
	Node0x8b18f0 [shape=record,label="{if.then137:                                       \l  %92 = load i32, i32* %nErr, align 4\l  %inc138 = add nsw i32 %92, 1\l  store i32 %inc138, i32* %nErr, align 4\l  br label %if.end139\l}"];
	Node0x8b18f0 -> Node0x8b23e0;
	Node0x8b23e0 [shape=record,label="{if.end139:                                        \l  %93 = load i32, i32* %connection, align 4\l  %call140 = call i32 @close(i32 %93)\l  %94 = load i32, i32* %nErr, align 4\l  store i32 %94, i32* %retval, align 4\l  br label %return\l}"];
	Node0x8b23e0 -> Node0x92cdd0;
	Node0x8d9d90 [shape=record,label="{for.end150:                                       \l  br label %while.body\l}"];
	Node0x8d9d90 -> Node0x942310;
	Node0x980db0 [shape=record,label="{if.else:                                          \l  %2 = load i32, i32* @ipv6Only, align 4\l  %tobool1 = icmp ne i32 %2, 0\l  br i1 %tobool1, label %if.then2, label %if.else4\l}"];
	Node0x980db0 -> Node0x93cb10;
	Node0x980db0 -> Node0x91cd20;
	Node0x93cb10 [shape=record,label="{if.then2:                                         \l  %ai_family3 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo*\l... %sHints, i32 0, i32 1\l  store i32 10, i32* %ai_family3, align 4\l  br label %if.end\l}"];
	Node0x93cb10 -> Node0x8c1790;
	Node0x8c1790 [shape=record,label="{if.end:                                           \l  br label %if.end6\l}"];
	Node0x8c1790 -> Node0x94de00;
	Node0x91cd20 [shape=record,label="{if.else4:                                         \l  %ai_family5 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo*\l... %sHints, i32 0, i32 1\l  store i32 0, i32* %ai_family5, align 4\l  br label %if.end\l}"];
	Node0x91cd20 -> Node0x8c1790;
	colorscheme = "paired12"
        subgraph cluster_0x9c0de0 {
          label = "";
          style = filled;
          color = 1
          subgraph cluster_0x9b8f70 {
            label = "";
            style = filled;
            color = 3
            subgraph cluster_0x9b8ef0 {
              label = "";
              style = filled;
              color = 5
              Node0x980db0;
              Node0x93cb10;
              Node0x91cd20;
            }
            Node0x961a80;
            Node0x943be0;
            Node0x8c1790;
          }
          subgraph cluster_0x9bed90 {
            label = "";
            style = filled;
            color = 3
            Node0x963980;
            Node0x95a1e0;
            Node0x8e2580;
          }
          subgraph cluster_0x9b8e70 {
            label = "";
            style = filled;
            color = 3
            subgraph cluster_0x9b8df0 {
              label = "";
              style = filled;
              color = 5
              Node0x936a00;
              Node0x94ab10;
            }
            subgraph cluster_0x9bee10 {
              label = "";
              style = filled;
              color = 5
              subgraph cluster_0x9c0d60 {
                label = "";
                style = filled;
                color = 7
                Node0x927420;
                Node0x956110;
              }
              Node0x936c80;
              Node0x96d960;
              Node0x93d700;
              Node0x92f360;
              Node0x8c12f0;
              Node0x8b1c40;
              Node0x9234a0;
            }
            Node0x8ef250;
            Node0x941000;
          }
          subgraph cluster_0x9b7fd0 {
            label = "";
            style = filled;
            color = 3
            Node0x942310;
            Node0x93c360;
          }
          subgraph cluster_0x9c11e0 {
            label = "";
            style = filled;
            color = 3
            Node0x9544e0;
            Node0x8f8b20;
          }
          subgraph cluster_0x9149b0 {
            label = "";
            style = filled;
            color = 3
            Node0x83e600;
            Node0x95c790;
          }
          subgraph cluster_0x9b7ed0 {
            label = "";
            style = filled;
            color = 3
            Node0x8f0840;
            Node0x8da3c0;
          }
          subgraph cluster_0x9bcbc0 {
            label = "";
            style = filled;
            color = 3
            Node0x8ca650;
            Node0x8b18f0;
          }
          subgraph cluster_0x9b7f50 {
            label = "";
            style = filled;
            color = 3
            Node0x9218d0;
            Node0x978760;
          }
          Node0x94de00;
          Node0x9558d0;
          Node0x92cdd0;
          Node0x899760;
          Node0x8aed00;
          Node0x8c0aa0;
          Node0x94a520;
          Node0x95e250;
          Node0x909bf0;
          Node0x93ead0;
          Node0x946460;
          Node0x924800;
          Node0x91ab70;
          Node0x95d0b0;
          Node0x92c070;
          Node0x901520;
          Node0x929e10;
          Node0x8bacc0;
          Node0x8b76d0;
          Node0x8f1120;
          Node0x964000;
          Node0x8fe630;
          Node0x8c21a0;
          Node0x89e190;
          Node0x95c1b0;
          Node0x8b5a00;
          Node0x8fa740;
          Node0x8b23e0;
          Node0x8d9d90;
        }
}
