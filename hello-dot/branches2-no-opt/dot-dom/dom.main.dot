digraph "Dominator tree for 'main' function" {
	label="Dominator tree for 'main' function";

	Node0x557412c52920 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %a = alloca i32, align 4\l  %b = alloca i32, align 4\l  %z = alloca i32, align 4\l  %s = alloca i32, align 4\l  %t = alloca i64, align 8\l  %r = alloca i32, align 4\l  store i32 0, i32* %retval, align 4\l  store i32 1, i32* %a, align 4\l  store i32 2, i32* %b, align 4\l  %0 = load i32, i32* %a, align 4\l  %cmp = icmp eq i32 %0, 1\l  br i1 %cmp, label %if.then, label %if.else3\l}"];
	Node0x557412c52920 -> Node0x557412c52450;
	Node0x557412c52920 -> Node0x557412c54c50;
	Node0x557412c52920 -> Node0x557412c552b0;
	Node0x557412c52450 [shape=record,label="{if.then:                                          \l  call void @b1()\l  %1 = load i32, i32* %b, align 4\l  %cmp1 = icmp eq i32 %1, 1\l  br i1 %cmp1, label %if.then2, label %if.else\l}"];
	Node0x557412c52450 -> Node0x557412c52980;
	Node0x557412c52450 -> Node0x557412c54a00;
	Node0x557412c52450 -> Node0x557412c55250;
	Node0x557412c52980 [shape=record,label="{if.then2:                                         \l  call void @c()\l  br label %if.end\l}"];
	Node0x557412c54a00 [shape=record,label="{if.end:                                           \l  br label %if.end4\l}"];
	Node0x557412c55250 [shape=record,label="{if.else:                                          \l  call void @d()\l  br label %if.end\l}"];
	Node0x557412c54c50 [shape=record,label="{if.end4:                                          \l  store i32 10, i32* %z, align 4\l  br label %while.cond\l}"];
	Node0x557412c54c50 -> Node0x557412c54cb0;
	Node0x557412c54cb0 [shape=record,label="{while.cond:                                       \l  %2 = load i32, i32* %z, align 4\l  %cmp5 = icmp sgt i32 %2, 0\l  br i1 %cmp5, label %while.body, label %while.end\l}"];
	Node0x557412c54cb0 -> Node0x557412c54d10;
	Node0x557412c54cb0 -> Node0x557412c54d70;
	Node0x557412c54d10 [shape=record,label="{while.body:                                       \l  call void @f()\l  %3 = load i32, i32* %z, align 4\l  %dec = add nsw i32 %3, -1\l  store i32 %dec, i32* %z, align 4\l  br label %while.cond\l}"];
	Node0x557412c54d70 [shape=record,label="{while.end:                                        \l  store i32 4, i32* %s, align 4\l  %4 = load i32, i32* %s, align 4\l  switch i32 %4, label %sw.default [\l    i32 1, label %sw.bb\l    i32 2, label %sw.bb6\l    i32 3, label %sw.bb7\l    i32 4, label %sw.bb8\l  ]\l}"];
	Node0x557412c54d70 -> Node0x557412c54dd0;
	Node0x557412c54d70 -> Node0x557412c54e30;
	Node0x557412c54d70 -> Node0x557412c550d0;
	Node0x557412c54d70 -> Node0x557412c55130;
	Node0x557412c54d70 -> Node0x557412c55190;
	Node0x557412c54d70 -> Node0x557412c551f0;
	Node0x557412c54dd0 [shape=record,label="{sw.default:                                       \l  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8],\l... [13 x i8]* @.str.11, i64 0, i64 0))\l  br label %sw.epilog\l}"];
	Node0x557412c54e30 [shape=record,label="{sw.epilog:                                        \l  %call9 = call i64 @time(i64* %t) #3\l  %conv = trunc i64 %call9 to i32\l  call void @srand(i32 %conv) #3\l  %call10 = call i32 @rand() #3\l  %rem = srem i32 %call10, 4\l  %add = add nsw i32 1, %rem\l  store i32 %add, i32* %r, align 4\l  %5 = load i32, i32* %r, align 4\l  switch i32 %5, label %sw.default15 [\l    i32 1, label %sw.bb11\l    i32 2, label %sw.bb12\l    i32 3, label %sw.bb13\l    i32 4, label %sw.bb14\l  ]\l}"];
	Node0x557412c54e30 -> Node0x557412c54e90;
	Node0x557412c54e30 -> Node0x557412c54ef0;
	Node0x557412c54e30 -> Node0x557412c54f50;
	Node0x557412c54e30 -> Node0x557412c54fb0;
	Node0x557412c54e30 -> Node0x557412c55010;
	Node0x557412c54e30 -> Node0x557412c55070;
	Node0x557412c54e90 [shape=record,label="{sw.default15:                                     \l  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8],\l... [13 x i8]* @.str.11, i64 0, i64 0))\l  br label %sw.epilog17\l}"];
	Node0x557412c54ef0 [shape=record,label="{sw.epilog17:                                      \l  %6 = load i32, i32* %retval, align 4\l  ret i32 %6\l}"];
	Node0x557412c54f50 [shape=record,label="{sw.bb11:                                          \l  call void @g1()\l  br label %sw.epilog17\l}"];
	Node0x557412c54fb0 [shape=record,label="{sw.bb12:                                          \l  call void @g2()\l  br label %sw.epilog17\l}"];
	Node0x557412c55010 [shape=record,label="{sw.bb13:                                          \l  call void @g3()\l  br label %sw.epilog17\l}"];
	Node0x557412c55070 [shape=record,label="{sw.bb14:                                          \l  call void @g4()\l  br label %sw.epilog17\l}"];
	Node0x557412c550d0 [shape=record,label="{sw.bb:                                            \l  call void @g1()\l  br label %sw.epilog\l}"];
	Node0x557412c55130 [shape=record,label="{sw.bb6:                                           \l  call void @g2()\l  br label %sw.epilog\l}"];
	Node0x557412c55190 [shape=record,label="{sw.bb7:                                           \l  call void @g3()\l  br label %sw.epilog\l}"];
	Node0x557412c551f0 [shape=record,label="{sw.bb8:                                           \l  call void @g4()\l  br label %sw.epilog\l}"];
	Node0x557412c552b0 [shape=record,label="{if.else3:                                         \l  call void @b2()\l  br label %if.end4\l}"];
}
