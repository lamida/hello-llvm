digraph "CFG for 'Timeout' function" {
	label="CFG for 'Timeout' function";

	Node0x5649f7fed270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5649f7fed270\":\l  %1 = alloca i32, align 4\l  %2 = alloca [10 x i8], align 1\l  store i32 %0, i32* %1, align 4\l  %3 = load i32, i32* @debugFlag, align 4\l  %4 = icmp ne i32 %3, 0\l  br i1 %4, label %\"0x5649f7fed5b0\", label %\"0x5649f7fed600\"\l|{<s0>T|<s1>F}}"];
	Node0x5649f7fed270:s0 -> Node0x5649f7fed5b0;
	Node0x5649f7fed270:s1 -> Node0x5649f7fed600;
	Node0x5649f7fed600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{\"0x5649f7fed600\":                                 \l  %5 = load i8*, i8** @zScript, align 8\l  %6 = icmp ne i8* %5, null\l  br i1 %6, label %\"0x5649f7fed4d0\", label %\"0x5649f7fed890 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x5649f7fed600:s0 -> Node0x5649f7fed4d0;
	Node0x5649f7fed600:s1 -> Node0x5649f7fed890;
	Node0x5649f7fed4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{\"0x5649f7fed4d0\":                                 \l  %7 = load i8*, i8** @zScript, align 8\l  %8 = getelementptr inbounds i8, i8* %7, i64 0\l  %9 = load i8, i8* %8, align 1\l  %10 = sext i8 %9 to i32\l  %11 = icmp ne i32 %10, 0\l  br i1 %11, label %\"0x5649f7fedc10 - Exit Point\", label %\"0x5649f7fed890 -\l... Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x5649f7fed4d0:s0 -> Node0x5649f7fedc10;
	Node0x5649f7fed4d0:s1 -> Node0x5649f7fed890;
	Node0x5649f7fedc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{\"0x5649f7fedc10 - Exit Point\":                    \l  %12 = getelementptr inbounds [10 x i8], [10 x i8]* %2, i64 0, i64 0\l  store i8 57, i8* %12, align 1\l  %13 = load i32, i32* %1, align 4\l  %14 = sdiv i32 %13, 10\l  %15 = srem i32 %14, 10\l  %16 = add nsw i32 48, %15\l  %17 = trunc i32 %16 to i8\l  %18 = getelementptr inbounds [10 x i8], [10 x i8]* %2, i64 0, i64 1\l  store i8 %17, i8* %18, align 1\l  %19 = load i32, i32* %1, align 4\l  %20 = srem i32 %19, 10\l  %21 = add nsw i32 48, %20\l  %22 = trunc i32 %21 to i8\l  %23 = getelementptr inbounds [10 x i8], [10 x i8]* %2, i64 0, i64 2\l  store i8 %22, i8* %23, align 1\l  %24 = getelementptr inbounds [10 x i8], [10 x i8]* %2, i64 0, i64 3\l  store i8 0, i8* %24, align 1\l  %25 = getelementptr inbounds [10 x i8], [10 x i8]* %2, i64 0, i64 0\l  %26 = call i8* @strcpy(i8* getelementptr inbounds ([4 x i8], [4 x i8]*\l... @zReplyStatus, i64 0, i64 0), i8* %25)\l  call void @MakeLogEntry(i32 0, i32 130)\l  br label %\"0x5649f7fed890 - Exit Point\"\l}"];
	Node0x5649f7fedc10 -> Node0x5649f7fed890;
	Node0x5649f7fed890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{\"0x5649f7fed890 - Exit Point\":                    \l  call void @exit(i32 0)\l  unreachable\l}"];
	Node0x5649f7fed5b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5649f7fed5b0\":                                 \l  ret void\l}"];
}
