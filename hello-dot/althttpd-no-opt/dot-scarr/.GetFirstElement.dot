digraph "CFG for 'GetFirstElement' function" {
	label="CFG for 'GetFirstElement' function";

	Node0x5595128b48d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{\"0x5595128b48d0\":\l  %retval = alloca i8*, align 8\l  %zInput.addr = alloca i8*, align 8\l  %zLeftOver.addr = alloca i8**, align 8\l  %zResult = alloca i8*, align 8\l  store i8* %zInput, i8** %zInput.addr, align 8\l  store i8** %zLeftOver, i8*** %zLeftOver.addr, align 8\l  store i8* null, i8** %zResult, align 8\l  %0 = load i8*, i8** %zInput.addr, align 8\l  %cmp = icmp eq i8* %0, null\l  br i1 %cmp, label %\"0x5595128b4e50\", label %\"0x5595128b4ec0\"\l|{<s0>T|<s1>F}}"];
	Node0x5595128b48d0:s0 -> Node0x5595128b4e50;
	Node0x5595128b48d0:s1 -> Node0x5595128b4ec0;
	Node0x5595128b4e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{\"0x5595128b4e50\":                                 \l  %1 = load i8**, i8*** %zLeftOver.addr, align 8\l  %tobool = icmp ne i8** %1, null\l  br i1 %tobool, label %\"0x5595128b5120\", label %\"0x5595128b51a0\"\l|{<s0>T|<s1>F}}"];
	Node0x5595128b4e50:s0 -> Node0x5595128b5120;
	Node0x5595128b4e50:s1 -> Node0x5595128b51a0;
	Node0x5595128b5120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{\"0x5595128b5120\":                                 \l  %2 = load i8**, i8*** %zLeftOver.addr, align 8\l  store i8* null, i8** %2, align 8\l  br label %\"0x5595128b51a0\"\l}"];
	Node0x5595128b5120 -> Node0x5595128b51a0;
	Node0x5595128b51a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{\"0x5595128b51a0\":                                 \l  store i8* null, i8** %retval, align 8\l  br label %\"0x5595128b5690\"\l}"];
	Node0x5595128b51a0 -> Node0x5595128b5690;
	Node0x5595128b4ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{\"0x5595128b4ec0\":                                 \l  br label %\"0x5595128b5750 - Exit Point\"\l}"];
	Node0x5595128b4ec0 -> Node0x5595128b5750;
	Node0x5595128b5750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5595128b5750 - Exit Point\":                    \l  %call = call i16** @__ctype_b_loc()\l  %3 = load i16*, i16** %call, align 8\l  %4 = load i8*, i8** %zInput.addr, align 8\l  %5 = load i8, i8* %4, align 1\l  %conv = zext i8 %5 to i32\l  %idxprom = sext i32 %conv to i64\l  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom\l  %6 = load i16, i16* %arrayidx, align 2\l  %conv3 = zext i16 %6 to i32\l  %and = and i32 %conv3, 8192\l  %tobool4 = icmp ne i32 %and, 0\l  br i1 %tobool4, label %\"0x5595128b5f40\", label %\"0x55951285a170\"\l|{<s0>T|<s1>F}}"];
	Node0x5595128b5750:s0 -> Node0x5595128b5f40;
	Node0x5595128b5750:s1 -> Node0x55951285a170;
	Node0x5595128b5f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5595128b5f40\":                                 \l  %7 = load i8*, i8** %zInput.addr, align 8\l  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1\l  store i8* %incdec.ptr, i8** %zInput.addr, align 8\l  br label %\"0x5595128b5750 - Exit Point\"\l}"];
	Node0x5595128b5f40 -> Node0x5595128b5750;
	Node0x55951285a170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{\"0x55951285a170\":                                 \l  %8 = load i8*, i8** %zInput.addr, align 8\l  store i8* %8, i8** %zResult, align 8\l  br label %\"0x5595128b5a30\"\l}"];
	Node0x55951285a170 -> Node0x5595128b5a30;
	Node0x5595128b5a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5595128b5a30\":                                 \l  %9 = load i8*, i8** %zInput.addr, align 8\l  %10 = load i8, i8* %9, align 1\l  %conv6 = sext i8 %10 to i32\l  %tobool7 = icmp ne i32 %conv6, 0\l  br i1 %tobool7, label %\"0x5595128b6850 - Exit Point\", label %\"0x5595128b68d0\"\l|{<s0>T|<s1>F}}"];
	Node0x5595128b5a30:s0 -> Node0x5595128b6850;
	Node0x5595128b5a30:s1 -> Node0x5595128b68d0;
	Node0x5595128b6850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{\"0x5595128b6850 - Exit Point\":                    \l  %call8 = call i16** @__ctype_b_loc()\l  %11 = load i16*, i16** %call8, align 8\l  %12 = load i8*, i8** %zInput.addr, align 8\l  %13 = load i8, i8* %12, align 1\l  %conv9 = zext i8 %13 to i32\l  %idxprom10 = sext i32 %conv9 to i64\l  %arrayidx11 = getelementptr inbounds i16, i16* %11, i64 %idxprom10\l  %14 = load i16, i16* %arrayidx11, align 2\l  %conv12 = zext i16 %14 to i32\l  %and13 = and i32 %conv12, 8192\l  %tobool14 = icmp ne i32 %and13, 0\l  %lnot = xor i1 %tobool14, true\l  br label %\"0x5595128b68d0\"\l}"];
	Node0x5595128b6850 -> Node0x5595128b68d0;
	Node0x5595128b68d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5595128b68d0\":                                 \l  %15 = phi i1 [ false, %\"0x5595128b5a30\" ], [ %lnot, %\"0x5595128b6850 - Exit\l... Point\" ]\l  br i1 %15, label %\"0x5595128b7240\", label %\"0x5595128b72c0\"\l|{<s0>T|<s1>F}}"];
	Node0x5595128b68d0:s0 -> Node0x5595128b7240;
	Node0x5595128b68d0:s1 -> Node0x5595128b72c0;
	Node0x5595128b7240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5595128b7240\":                                 \l  %16 = load i8*, i8** %zInput.addr, align 8\l  %incdec.ptr16 = getelementptr inbounds i8, i8* %16, i32 1\l  store i8* %incdec.ptr16, i8** %zInput.addr, align 8\l  br label %\"0x5595128b5a30\"\l}"];
	Node0x5595128b7240 -> Node0x5595128b5a30;
	Node0x5595128b72c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{\"0x5595128b72c0\":                                 \l  %17 = load i8*, i8** %zInput.addr, align 8\l  %18 = load i8, i8* %17, align 1\l  %tobool18 = icmp ne i8 %18, 0\l  br i1 %tobool18, label %\"0x5595128b7740\", label %\"0x5595128b77c0\"\l|{<s0>T|<s1>F}}"];
	Node0x5595128b72c0:s0 -> Node0x5595128b7740;
	Node0x5595128b72c0:s1 -> Node0x5595128b77c0;
	Node0x5595128b7740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{\"0x5595128b7740\":                                 \l  %19 = load i8*, i8** %zInput.addr, align 8\l  store i8 0, i8* %19, align 1\l  %20 = load i8*, i8** %zInput.addr, align 8\l  %incdec.ptr20 = getelementptr inbounds i8, i8* %20, i32 1\l  store i8* %incdec.ptr20, i8** %zInput.addr, align 8\l  br label %\"0x5595128b7bc0 - Exit Point\"\l}"];
	Node0x5595128b7740 -> Node0x5595128b7bc0;
	Node0x5595128b7bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{\"0x5595128b7bc0 - Exit Point\":                    \l  %call22 = call i16** @__ctype_b_loc()\l  %21 = load i16*, i16** %call22, align 8\l  %22 = load i8*, i8** %zInput.addr, align 8\l  %23 = load i8, i8* %22, align 1\l  %conv23 = zext i8 %23 to i32\l  %idxprom24 = sext i32 %conv23 to i64\l  %arrayidx25 = getelementptr inbounds i16, i16* %21, i64 %idxprom24\l  %24 = load i16, i16* %arrayidx25, align 2\l  %conv26 = zext i16 %24 to i32\l  %and27 = and i32 %conv26, 8192\l  %tobool28 = icmp ne i32 %and27, 0\l  br i1 %tobool28, label %\"0x5595128b8690\", label %\"0x5595128b8710\"\l|{<s0>T|<s1>F}}"];
	Node0x5595128b7bc0:s0 -> Node0x5595128b8690;
	Node0x5595128b7bc0:s1 -> Node0x5595128b8710;
	Node0x5595128b8690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{\"0x5595128b8690\":                                 \l  %25 = load i8*, i8** %zInput.addr, align 8\l  %incdec.ptr30 = getelementptr inbounds i8, i8* %25, i32 1\l  store i8* %incdec.ptr30, i8** %zInput.addr, align 8\l  br label %\"0x5595128b7bc0 - Exit Point\"\l}"];
	Node0x5595128b8690 -> Node0x5595128b7bc0;
	Node0x5595128b8710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{\"0x5595128b8710\":                                 \l  br label %\"0x5595128b77c0\"\l}"];
	Node0x5595128b8710 -> Node0x5595128b77c0;
	Node0x5595128b77c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{\"0x5595128b77c0\":                                 \l  %26 = load i8**, i8*** %zLeftOver.addr, align 8\l  %tobool33 = icmp ne i8** %26, null\l  br i1 %tobool33, label %\"0x5595128b8c20\", label %\"0x5595128b8ca0\"\l|{<s0>T|<s1>F}}"];
	Node0x5595128b77c0:s0 -> Node0x5595128b8c20;
	Node0x5595128b77c0:s1 -> Node0x5595128b8ca0;
	Node0x5595128b8c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{\"0x5595128b8c20\":                                 \l  %27 = load i8*, i8** %zInput.addr, align 8\l  %28 = load i8**, i8*** %zLeftOver.addr, align 8\l  store i8* %27, i8** %28, align 8\l  br label %\"0x5595128b8ca0\"\l}"];
	Node0x5595128b8c20 -> Node0x5595128b8ca0;
	Node0x5595128b8ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{\"0x5595128b8ca0\":                                 \l  %29 = load i8*, i8** %zResult, align 8\l  store i8* %29, i8** %retval, align 8\l  br label %\"0x5595128b5690\"\l}"];
	Node0x5595128b8ca0 -> Node0x5595128b5690;
	Node0x5595128b5690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{\"0x5595128b5690\":                                 \l  %30 = load i8*, i8** %retval, align 8\l  ret i8* %30\l}"];
}
