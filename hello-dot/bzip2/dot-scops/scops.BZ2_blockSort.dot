digraph "Scop Graph for 'BZ2_blockSort' function" {
	label="Scop Graph for 'BZ2_blockSort' function";

	Node0x28c7660 [shape=record,label="{%1:\l  %2 = alloca %struct.EState*, align 8\l  %3 = alloca i32*, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i32*, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca i16*, align 8\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  store %struct.EState* %0, %struct.EState** %2, align 8\l  %13 = load %struct.EState*, %struct.EState** %2, align 8\l  %14 = getelementptr inbounds %struct.EState, %struct.EState* %13, i32 0, i32\l... 8\l  %15 = load i32*, i32** %14, align 8\l  store i32* %15, i32** %3, align 8\l  %16 = load %struct.EState*, %struct.EState** %2, align 8\l  %17 = getelementptr inbounds %struct.EState, %struct.EState* %16, i32 0, i32\l... 9\l  %18 = load i8*, i8** %17, align 8\l  store i8* %18, i8** %4, align 8\l  %19 = load %struct.EState*, %struct.EState** %2, align 8\l  %20 = getelementptr inbounds %struct.EState, %struct.EState* %19, i32 0, i32\l... 6\l  %21 = load i32*, i32** %20, align 8\l  store i32* %21, i32** %5, align 8\l  %22 = load %struct.EState*, %struct.EState** %2, align 8\l  %23 = getelementptr inbounds %struct.EState, %struct.EState* %22, i32 0, i32\l... 17\l  %24 = load i32, i32* %23, align 4\l  store i32 %24, i32* %6, align 4\l  %25 = load %struct.EState*, %struct.EState** %2, align 8\l  %26 = getelementptr inbounds %struct.EState, %struct.EState* %25, i32 0, i32\l... 28\l  %27 = load i32, i32* %26, align 8\l  store i32 %27, i32* %7, align 4\l  %28 = load %struct.EState*, %struct.EState** %2, align 8\l  %29 = getelementptr inbounds %struct.EState, %struct.EState* %28, i32 0, i32\l... 12\l  %30 = load i32, i32* %29, align 8\l  store i32 %30, i32* %8, align 4\l  %31 = load i32, i32* %6, align 4\l  %32 = icmp slt i32 %31, 10000\l  br i1 %32, label %33, label %43\l}"];
	Node0x28c7660 -> Node0x2813380;
	Node0x28c7660 -> Node0x27c9d50;
	Node0x2813380 [shape=record,label="{%33:\l33:                                               \l  %34 = load %struct.EState*, %struct.EState** %2, align 8\l  %35 = getelementptr inbounds %struct.EState, %struct.EState* %34, i32 0, i32\l... 4\l  %36 = load i32*, i32** %35, align 8\l  %37 = load %struct.EState*, %struct.EState** %2, align 8\l  %38 = getelementptr inbounds %struct.EState, %struct.EState* %37, i32 0, i32\l... 5\l  %39 = load i32*, i32** %38, align 8\l  %40 = load i32*, i32** %5, align 8\l  %41 = load i32, i32* %6, align 4\l  %42 = load i32, i32* %7, align 4\l  call void @fallbackSort(i32* %36, i32* %39, i32* %40, i32 %41, i32 %42)\l  br label %121\l}"];
	Node0x2813380 -> Node0x28cd4a0;
	Node0x28cd4a0 [shape=record,label="{%121:\l121:                                              \l  %122 = load %struct.EState*, %struct.EState** %2, align 8\l  %123 = getelementptr inbounds %struct.EState, %struct.EState* %122, i32 0,\l... i32 7\l  store i32 -1, i32* %123, align 8\l  store i32 0, i32* %12, align 4\l  br label %124\l}"];
	Node0x28cd4a0 -> Node0x258f0c0;
	Node0x258f0c0 [shape=record,label="{%124:\l124:                                              \l  %125 = load i32, i32* %12, align 4\l  %126 = load %struct.EState*, %struct.EState** %2, align 8\l  %127 = getelementptr inbounds %struct.EState, %struct.EState* %126, i32 0,\l... i32 17\l  %128 = load i32, i32* %127, align 4\l  %129 = icmp slt i32 %125, %128\l  br i1 %129, label %130, label %145\l}"];
	Node0x258f0c0 -> Node0x281d270;
	Node0x258f0c0 -> Node0x25a1f80;
	Node0x281d270 [shape=record,label="{%130:\l130:                                              \l  %131 = load i32*, i32** %3, align 8\l  %132 = load i32, i32* %12, align 4\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds i32, i32* %131, i64 %133\l  %135 = load i32, i32* %134, align 4\l  %136 = icmp eq i32 %135, 0\l  br i1 %136, label %137, label %141\l}"];
	Node0x281d270 -> Node0x2842f70;
	Node0x281d270 -> Node0x282a5f0;
	Node0x2842f70 [shape=record,label="{%137:\l137:                                              \l  %138 = load i32, i32* %12, align 4\l  %139 = load %struct.EState*, %struct.EState** %2, align 8\l  %140 = getelementptr inbounds %struct.EState, %struct.EState* %139, i32 0,\l... i32 7\l  store i32 %138, i32* %140, align 8\l  br label %145\l}"];
	Node0x2842f70 -> Node0x25a1f80;
	Node0x25a1f80 [shape=record,label="{%145:\l145:                                              \l  %146 = load %struct.EState*, %struct.EState** %2, align 8\l  %147 = getelementptr inbounds %struct.EState, %struct.EState* %146, i32 0,\l... i32 7\l  %148 = load i32, i32* %147, align 8\l  %149 = icmp ne i32 %148, -1\l  br i1 %149, label %151, label %150\l}"];
	Node0x25a1f80 -> Node0x27fcd70;
	Node0x25a1f80 -> Node0x27db4a0;
	Node0x27fcd70 [shape=record,label="{%151:\l151:                                              \l  ret void\l}"];
	Node0x27db4a0 [shape=record,label="{%150:\l150:                                              \l  call void @BZ2_bz__AssertH__fail(i32 1003)\l  br label %151\l}"];
	Node0x27db4a0 -> Node0x27fcd70;
	Node0x282a5f0 [shape=record,label="{%141:\l141:                                              \l  br label %142\l}"];
	Node0x282a5f0 -> Node0x28bdcf0;
	Node0x28bdcf0 [shape=record,label="{%142:\l142:                                              \l  %143 = load i32, i32* %12, align 4\l  %144 = add nsw i32 %143, 1\l  store i32 %144, i32* %12, align 4\l  br label %124\l}"];
	Node0x28bdcf0 -> Node0x258f0c0[constraint=false];
	Node0x27c9d50 [shape=record,label="{%43:\l43:                                               \l  %44 = load i32, i32* %6, align 4\l  %45 = add nsw i32 %44, 34\l  store i32 %45, i32* %12, align 4\l  %46 = load i32, i32* %12, align 4\l  %47 = and i32 %46, 1\l  %48 = icmp ne i32 %47, 0\l  br i1 %48, label %49, label %52\l}"];
	Node0x27c9d50 -> Node0x2831b00;
	Node0x27c9d50 -> Node0x28224c0;
	Node0x2831b00 [shape=record,label="{%49:\l49:                                               \l  %50 = load i32, i32* %12, align 4\l  %51 = add nsw i32 %50, 1\l  store i32 %51, i32* %12, align 4\l  br label %52\l}"];
	Node0x2831b00 -> Node0x28224c0;
	Node0x28224c0 [shape=record,label="{%52:\l52:                                               \l  %53 = load i8*, i8** %4, align 8\l  %54 = load i32, i32* %12, align 4\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i8, i8* %53, i64 %55\l  %57 = bitcast i8* %56 to i16*\l  store i16* %57, i16** %9, align 8\l  %58 = load i32, i32* %8, align 4\l  %59 = icmp slt i32 %58, 1\l  br i1 %59, label %60, label %61\l}"];
	Node0x28224c0 -> Node0x2805ac0;
	Node0x28224c0 -> Node0x2698be0;
	Node0x2805ac0 [shape=record,label="{%60:\l60:                                               \l  store i32 1, i32* %8, align 4\l  br label %61\l}"];
	Node0x2805ac0 -> Node0x2698be0;
	Node0x2698be0 [shape=record,label="{%61:\l61:                                               \l  %62 = load i32, i32* %8, align 4\l  %63 = icmp sgt i32 %62, 100\l  br i1 %63, label %64, label %65\l}"];
	Node0x2698be0 -> Node0x28406b0;
	Node0x2698be0 -> Node0x25b34b0;
	Node0x28406b0 [shape=record,label="{%64:\l64:                                               \l  store i32 100, i32* %8, align 4\l  br label %65\l}"];
	Node0x28406b0 -> Node0x25b34b0;
	Node0x25b34b0 [shape=record,label="{%65:\l65:                                               \l  %66 = load i32, i32* %6, align 4\l  %67 = load i32, i32* %8, align 4\l  %68 = sub nsw i32 %67, 1\l  %69 = sdiv i32 %68, 3\l  %70 = mul nsw i32 %66, %69\l  store i32 %70, i32* %11, align 4\l  %71 = load i32, i32* %11, align 4\l  store i32 %71, i32* %10, align 4\l  %72 = load i32*, i32** %3, align 8\l  %73 = load i8*, i8** %4, align 8\l  %74 = load i16*, i16** %9, align 8\l  %75 = load i32*, i32** %5, align 8\l  %76 = load i32, i32* %6, align 4\l  %77 = load i32, i32* %7, align 4\l  call void @mainSort(i32* %72, i8* %73, i16* %74, i32* %75, i32 %76, i32 %77,\l... i32* %10)\l  %78 = load i32, i32* %7, align 4\l  %79 = icmp sge i32 %78, 3\l  br i1 %79, label %80, label %101\l}"];
	Node0x25b34b0 -> Node0x27f0400;
	Node0x25b34b0 -> Node0x2816360;
	Node0x27f0400 [shape=record,label="{%80:\l80:                                               \l  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8\l  %82 = load i32, i32* %11, align 4\l  %83 = load i32, i32* %10, align 4\l  %84 = sub nsw i32 %82, %83\l  %85 = load i32, i32* %6, align 4\l  %86 = load i32, i32* %11, align 4\l  %87 = load i32, i32* %10, align 4\l  %88 = sub nsw i32 %86, %87\l  %89 = sitofp i32 %88 to float\l  %90 = load i32, i32* %6, align 4\l  %91 = icmp eq i32 %90, 0\l  br i1 %91, label %92, label %93\l}"];
	Node0x27f0400 -> Node0x2832700;
	Node0x27f0400 -> Node0x284cff0;
	Node0x2832700 [shape=record,label="{%92:\l92:                                               \l  br label %95\l}"];
	Node0x2832700 -> Node0x28752b0;
	Node0x28752b0 [shape=record,label="{%95:\l95:                                               \l  %96 = phi i32 [ 1, %92 ], [ %94, %93 ]\l  %97 = sitofp i32 %96 to float\l  %98 = fdiv float %89, %97\l  %99 = fpext float %98 to double\l  %100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %81, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0),\l... i32 %84, i32 %85, double %99)\l  br label %101\l}"];
	Node0x28752b0 -> Node0x2816360;
	Node0x2816360 [shape=record,label="{%101:\l101:                                              \l  %102 = load i32, i32* %10, align 4\l  %103 = icmp slt i32 %102, 0\l  br i1 %103, label %104, label %120\l}"];
	Node0x2816360 -> Node0x27cc3a0;
	Node0x2816360 -> Node0x28c0fc0;
	Node0x27cc3a0 [shape=record,label="{%104:\l104:                                              \l  %105 = load i32, i32* %7, align 4\l  %106 = icmp sge i32 %105, 2\l  br i1 %106, label %107, label %110\l}"];
	Node0x27cc3a0 -> Node0x28411c0;
	Node0x27cc3a0 -> Node0x2806a10;
	Node0x28411c0 [shape=record,label="{%107:\l107:                                              \l  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8\l  %109 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %108, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64\l... 0))\l  br label %110\l}"];
	Node0x28411c0 -> Node0x2806a10;
	Node0x2806a10 [shape=record,label="{%110:\l110:                                              \l  %111 = load %struct.EState*, %struct.EState** %2, align 8\l  %112 = getelementptr inbounds %struct.EState, %struct.EState* %111, i32 0,\l... i32 4\l  %113 = load i32*, i32** %112, align 8\l  %114 = load %struct.EState*, %struct.EState** %2, align 8\l  %115 = getelementptr inbounds %struct.EState, %struct.EState* %114, i32 0,\l... i32 5\l  %116 = load i32*, i32** %115, align 8\l  %117 = load i32*, i32** %5, align 8\l  %118 = load i32, i32* %6, align 4\l  %119 = load i32, i32* %7, align 4\l  call void @fallbackSort(i32* %113, i32* %116, i32* %117, i32 %118, i32 %119)\l  br label %120\l}"];
	Node0x2806a10 -> Node0x28c0fc0;
	Node0x28c0fc0 [shape=record,label="{%120:\l120:                                              \l  br label %121\l}"];
	Node0x28c0fc0 -> Node0x28cd4a0;
	Node0x284cff0 [shape=record,label="{%93:\l93:                                               \l  %94 = load i32, i32* %6, align 4\l  br label %95\l}"];
	Node0x284cff0 -> Node0x28752b0;
	colorscheme = "paired12"
        subgraph cluster_0x28f0980 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x28ee2c0 {
            label = "Region can not profitably be optimized!";
            style = solid;
            color = 6
            subgraph cluster_0x27db5f0 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              Node0x27c9d50;
              Node0x2831b00;
            }
            subgraph cluster_0x2591230 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              Node0x28224c0;
              Node0x2805ac0;
            }
            subgraph cluster_0x28ee760 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              Node0x2698be0;
              Node0x28406b0;
            }
            subgraph cluster_0x28dc880 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              subgraph cluster_0x28ee5d0 {
                label = "Region can not profitably be optimized!";
                style = solid;
                color = 7
                Node0x27f0400;
                Node0x2832700;
                Node0x284cff0;
              }
              Node0x25b34b0;
              Node0x28752b0;
            }
            subgraph cluster_0x28ec430 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              subgraph cluster_0x28ec570 {
                label = "Region can not profitably be optimized!";
                style = solid;
                color = 7
                Node0x27cc3a0;
                Node0x28411c0;
              }
              Node0x2816360;
              Node0x2806a10;
            }
            Node0x28c7660;
            Node0x2813380;
            Node0x28c0fc0;
          }
          subgraph cluster_0x28ee240 {
            label = "Loop  has multiple exits.";
            style = solid;
            color = 6
            Node0x258f0c0;
            Node0x281d270;
            Node0x2842f70;
            Node0x282a5f0;
            Node0x28bdcf0;
          }
          subgraph cluster_0x28ee130 {
            label = "Region can not profitably be optimized!";
            style = solid;
            color = 6
            Node0x25a1f80;
            Node0x27db4a0;
          }
          Node0x28cd4a0;
          Node0x27fcd70;
        }
}
