digraph "CFG for 'CgiHandleReply' function" {
	label="CFG for 'CgiHandleReply' function";

	Node0x561239154440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{\"0x561239154440\":\l  %in.addr = alloca %struct._IO_FILE*, align 8\l  %seenContentLength = alloca i32, align 4\l  %contentLength = alloca i32, align 4\l  %nRes = alloca i64, align 8\l  %nMalloc = alloca i64, align 8\l  %aRes = alloca i8*, align 8\l  %c = alloca i32, align 4\l  %z = alloca i8*, align 8\l  %iStatus = alloca i32, align 4\l  %zLine = alloca [1000 x i8], align 16\l  %i = alloca i32, align 4\l  %nLine = alloca i64, align 8\l  store %struct._IO_FILE* %in, %struct._IO_FILE** %in.addr, align 8\l  store i32 0, i32* %seenContentLength, align 4\l  store i32 0, i32* %contentLength, align 4\l  store i64 0, i64* %nRes, align 8\l  store i64 0, i64* %nMalloc, align 8\l  store i8* null, i8** %aRes, align 8\l  store i32 0, i32* %iStatus, align 4\l  %0 = load i32, i32* @useTimeout, align 4\l  %tobool = icmp ne i32 %0, 0\l  br i1 %tobool, label %\"0x5612391552b0 - Exit Point\", label %\"0x561239155320\"\l|{<s0>T|<s1>F}}"];
	Node0x561239154440:s0 -> Node0x5612391552b0;
	Node0x561239154440:s1 -> Node0x561239155320;
	Node0x5612391552b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{\"0x5612391552b0 - Exit Point\":                    \l  %call = call i32 @alarm(i32 0)\l  br label %\"0x561239155320\"\l}"];
	Node0x5612391552b0 -> Node0x561239155320;
	Node0x561239155320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{\"0x561239155320\":                                 \l  br label %\"0x56123911cab0 - Virtual Checkpoint\"\l}"];
	Node0x561239155320 -> Node0x5612391555e0;
	Node0x5612391555e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{\"0x56123911cab0 - Virtual Checkpoint\":            \l  %arraydecay = getelementptr inbounds [1000 x i8], [1000 x i8]* %zLine, i64\l... 0, i64 0\l  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %in.addr, align 8\l  %call1 = call i8* @fgets(i8* %arraydecay, i32 1000, %struct._IO_FILE* %1)\l  %tobool2 = icmp ne i8* %call1, null\l  br i1 %tobool2, label %\"0x5612391558f0 - Exit Point\", label %\"0x561239155940\"\l|{<s0>T|<s1>F}}"];
	Node0x5612391555e0:s0 -> Node0x5612391558f0;
	Node0x5612391555e0:s1 -> Node0x561239155940;
	Node0x5612391558f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{\"0x5612391558f0 - Exit Point\":                    \l  %call3 = call i16** @__ctype_b_loc()\l  %2 = load i16*, i16** %call3, align 8\l  %arrayidx = getelementptr inbounds [1000 x i8], [1000 x i8]* %zLine, i64 0,\l... i64 0\l  %3 = load i8, i8* %arrayidx, align 16\l  %conv = zext i8 %3 to i32\l  %idxprom = sext i32 %conv to i64\l  %arrayidx4 = getelementptr inbounds i16, i16* %2, i64 %idxprom\l  %4 = load i16, i16* %arrayidx4, align 2\l  %conv5 = zext i16 %4 to i32\l  %and = and i32 %conv5, 8192\l  %tobool6 = icmp ne i32 %and, 0\l  %lnot = xor i1 %tobool6, true\l  br label %\"0x561239155940\"\l}"];
	Node0x5612391558f0 -> Node0x561239155940;
	Node0x561239155940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{\"0x561239155940\":                                 \l  %5 = phi i1 [ false, %\"0x56123911cab0 - Virtual Checkpoint\" ], [ %lnot,\l... %\"0x5612391558f0 - Exit Point\" ]\l  br i1 %5, label %\"0x561239156500 - Exit Point\", label %\"0x561239156550\"\l|{<s0>T|<s1>F}}"];
	Node0x561239155940:s0 -> Node0x561239156500;
	Node0x561239155940:s1 -> Node0x561239156550;
	Node0x561239156500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{\"0x561239156500 - Exit Point\":                    \l  %arraydecay7 = getelementptr inbounds [1000 x i8], [1000 x i8]* %zLine, i64\l... 0, i64 0\l  %call8 = call i32 @strncasecmp(i8* %arraydecay7, i8* getelementptr inbounds\l... ([10 x i8], [10 x i8]* @.str.512, i64 0, i64 0), i64 9)\l  %cmp = icmp eq i32 %call8, 0\l  br i1 %cmp, label %\"0x561239156a60\", label %\"0x561239156ae0 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x561239156500:s0 -> Node0x561239156a60;
	Node0x561239156500:s1 -> Node0x561239156ae0;
	Node0x561239156a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{\"0x561239156a60\":                                 \l  call void @StartResponse(i8* getelementptr inbounds ([13 x i8], [13 x i8]*\l... @.str.513, i64 0, i64 0))\l  %arraydecay11 = getelementptr inbounds [1000 x i8], [1000 x i8]* %zLine, i64\l... 0, i64 0\l  call void @RemoveNewline(i8* %arraydecay11)\l  %arrayidx12 = getelementptr inbounds [1000 x i8], [1000 x i8]* %zLine, i64\l... 0, i64 10\l  store i8* %arrayidx12, i8** %z, align 8\l  br label %\"0x561239156150 - Virtual Checkpoint\"\l}"];
	Node0x561239156a60 -> Node0x561239157100;
	Node0x561239157100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x561239156150 - Virtual Checkpoint\":            \l  %call14 = call i16** @__ctype_b_loc()\l  %6 = load i16*, i16** %call14, align 8\l  %7 = load i8*, i8** %z, align 8\l  %8 = load i8, i8* %7, align 1\l  %conv15 = zext i8 %8 to i32\l  %idxprom16 = sext i32 %conv15 to i64\l  %arrayidx17 = getelementptr inbounds i16, i16* %6, i64 %idxprom16\l  %9 = load i16, i16* %arrayidx17, align 2\l  %conv18 = zext i16 %9 to i32\l  %and19 = and i32 %conv18, 8192\l  %tobool20 = icmp ne i32 %and19, 0\l  br i1 %tobool20, label %\"0x561239156150\", label %\"0x561239155c70 - Exit\l... Point\"\l|{<s0>T|<s1>F}}"];
	Node0x561239157100:s0 -> Node0x561239156150;
	Node0x561239157100:s1 -> Node0x561239155c70;
	Node0x561239156150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x561239156150\":                                 \l  %10 = load i8*, i8** %z, align 8\l  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1\l  store i8* %incdec.ptr, i8** %z, align 8\l  br label %\"0x561239156150 - Virtual Checkpoint\"\l}"];
	Node0x561239156150 -> Node0x561239157100;
	Node0x561239155c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{\"0x561239155c70 - Exit Point\":                    \l  %11 = load i8*, i8** %z, align 8\l  %call22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8],\l... [15 x i8]* @.str.514, i64 0, i64 0), i8* %11)\l  %12 = load i32, i32* @nOut, align 4\l  %add = add nsw i32 %12, %call22\l  store i32 %add, i32* @nOut, align 4\l  store i32 0, i32* @rangeEnd, align 4\l  br label %\"0x56123911cab0\"\l}"];
	Node0x561239155c70 -> Node0x56123911cab0;
	Node0x561239156ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{\"0x561239156ae0 - Exit Point\":                    \l  %arraydecay23 = getelementptr inbounds [1000 x i8], [1000 x i8]* %zLine, i64\l... 0, i64 0\l  %call24 = call i32 @strncasecmp(i8* %arraydecay23, i8* getelementptr\l... inbounds ([8 x i8], [8 x i8]* @.str.515, i64 0, i64 0), i64 7)\l  %cmp25 = icmp eq i32 %call24, 0\l  br i1 %cmp25, label %\"0x5612390dcbe0\", label %\"0x5612391585d0 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x561239156ae0:s0 -> Node0x5612390dcbe0;
	Node0x561239156ae0:s1 -> Node0x5612391585d0;
	Node0x5612390dcbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{\"0x5612390dcbe0\":                                 \l  store i32 7, i32* %i, align 4\l  br label %\"0x5612391591d0 - Virtual Checkpoint\"\l}"];
	Node0x5612390dcbe0 -> Node0x561239158790;
	Node0x561239158790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{\"0x5612391591d0 - Virtual Checkpoint\":            \l  %call28 = call i16** @__ctype_b_loc()\l  %13 = load i16*, i16** %call28, align 8\l  %14 = load i32, i32* %i, align 4\l  %idxprom29 = sext i32 %14 to i64\l  %arrayidx30 = getelementptr inbounds [1000 x i8], [1000 x i8]* %zLine, i64\l... 0, i64 %idxprom29\l  %15 = load i8, i8* %arrayidx30, align 1\l  %conv31 = zext i8 %15 to i32\l  %idxprom32 = sext i32 %conv31 to i64\l  %arrayidx33 = getelementptr inbounds i16, i16* %13, i64 %idxprom32\l  %16 = load i16, i16* %arrayidx33, align 2\l  %conv34 = zext i16 %16 to i32\l  %and35 = and i32 %conv34, 8192\l  %tobool36 = icmp ne i32 %and35, 0\l  br i1 %tobool36, label %\"0x561239159030\", label %\"0x5612391590b0 - Exit\l... Point\"\l|{<s0>T|<s1>F}}"];
	Node0x561239158790:s0 -> Node0x561239159030;
	Node0x561239158790:s1 -> Node0x5612391590b0;
	Node0x561239159030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{\"0x561239159030\":                                 \l  br label %\"0x5612391591d0\"\l}"];
	Node0x561239159030 -> Node0x5612391591d0;
	Node0x5612391591d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{\"0x5612391591d0\":                                 \l  %17 = load i32, i32* %i, align 4\l  %inc = add nsw i32 %17, 1\l  store i32 %inc, i32* %i, align 4\l  br label %\"0x5612391591d0 - Virtual Checkpoint\"\l}"];
	Node0x5612391591d0 -> Node0x561239158790;
	Node0x5612391590b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{\"0x5612391590b0 - Exit Point\":                    \l  %18 = load i8*, i8** @zProtocol, align 8\l  %19 = load i32, i32* %i, align 4\l  %idxprom37 = sext i32 %19 to i64\l  %arrayidx38 = getelementptr inbounds [1000 x i8], [1000 x i8]* %zLine, i64\l... 0, i64 %idxprom37\l  %call39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8],\l... [6 x i8]* @.str.516, i64 0, i64 0), i8* %18, i8* %arrayidx38)\l  %20 = load i32, i32* @nOut, align 4\l  %add40 = add nsw i32 %20, %call39\l  store i32 %add40, i32* @nOut, align 4\l  %21 = load i32, i32* %i, align 4\l  %idxprom41 = sext i32 %21 to i64\l  %arrayidx42 = getelementptr inbounds [1000 x i8], [1000 x i8]* %zLine, i64\l... 0, i64 %idxprom41\l  %call43 = call i8* @strncpy(i8* getelementptr inbounds ([4 x i8], [4 x i8]*\l... @zReplyStatus, i64 0, i64 0), i8* %arrayidx42, i64 3)\l  store i8 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @zReplyStatus,\l... i64 0, i64 3), align 1\l  %call44 = call i32 @atoi(i8* getelementptr inbounds ([4 x i8], [4 x i8]*\l... @zReplyStatus, i64 0, i64 0))\l  store i32 %call44, i32* %iStatus, align 4\l  %22 = load i32, i32* %iStatus, align 4\l  %cmp45 = icmp ne i32 %22, 200\l  br i1 %cmp45, label %\"0x56123915a020\", label %\"0x56123915a070\"\l|{<s0>T|<s1>F}}"];
	Node0x5612391590b0:s0 -> Node0x56123915a020;
	Node0x5612391590b0:s1 -> Node0x56123915a070;
	Node0x56123915a020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{\"0x56123915a020\":                                 \l  store i32 0, i32* @rangeEnd, align 4\l  br label %\"0x56123915a070\"\l}"];
	Node0x56123915a020 -> Node0x56123915a070;
	Node0x56123915a070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{\"0x56123915a070\":                                 \l  store i32 1, i32* @statusSent, align 4\l  br label %\"0x56123915a330\"\l}"];
	Node0x56123915a070 -> Node0x56123915a330;
	Node0x5612391585d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{\"0x5612391585d0 - Exit Point\":                    \l  %arraydecay50 = getelementptr inbounds [1000 x i8], [1000 x i8]* %zLine, i64\l... 0, i64 0\l  %call51 = call i32 @strncasecmp(i8* %arraydecay50, i8* getelementptr\l... inbounds ([16 x i8], [16 x i8]* @.str.349, i64 0, i64 0), i64 15)\l  %cmp52 = icmp eq i32 %call51, 0\l  br i1 %cmp52, label %\"0x56123915a680 - Exit Point\", label %\"0x56123915a6d0 -\l... Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x5612391585d0:s0 -> Node0x56123915a680;
	Node0x5612391585d0:s1 -> Node0x56123915a6d0;
	Node0x56123915a680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{\"0x56123915a680 - Exit Point\":                    \l  store i32 1, i32* %seenContentLength, align 4\l  %arraydecay55 = getelementptr inbounds [1000 x i8], [1000 x i8]* %zLine, i64\l... 0, i64 0\l  %add.ptr = getelementptr inbounds i8, i8* %arraydecay55, i64 15\l  %call56 = call i32 @atoi(i8* %add.ptr)\l  store i32 %call56, i32* %contentLength, align 4\l  br label %\"0x56123915ac30\"\l}"];
	Node0x56123915a680 -> Node0x56123915ac30;
	Node0x56123915a6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{\"0x56123915a6d0 - Exit Point\":                    \l  %arraydecay58 = getelementptr inbounds [1000 x i8], [1000 x i8]* %zLine, i64\l... 0, i64 0\l  %call59 = call i64 @strlen(i8* %arraydecay58)\l  store i64 %call59, i64* %nLine, align 8\l  %23 = load i64, i64* %nRes, align 8\l  %24 = load i64, i64* %nLine, align 8\l  %add60 = add i64 %23, %24\l  %25 = load i64, i64* %nMalloc, align 8\l  %cmp61 = icmp uge i64 %add60, %25\l  br i1 %cmp61, label %\"0x561239157ce0 - Exit Point\", label %\"0x561239157d60 -\l... Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x56123915a6d0:s0 -> Node0x561239157ce0;
	Node0x56123915a6d0:s1 -> Node0x561239157d60;
	Node0x561239157ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{\"0x561239157ce0 - Exit Point\":                    \l  %26 = load i64, i64* %nMalloc, align 8\l  %27 = load i64, i64* %nLine, align 8\l  %mul = mul i64 %27, 2\l  %add64 = add i64 %26, %mul\l  %28 = load i64, i64* %nMalloc, align 8\l  %add65 = add i64 %28, %add64\l  store i64 %add65, i64* %nMalloc, align 8\l  %29 = load i8*, i8** %aRes, align 8\l  %30 = load i64, i64* %nMalloc, align 8\l  %add66 = add i64 %30, 1\l  %call67 = call i8* @realloc(i8* %29, i64 %add66)\l  store i8* %call67, i8** %aRes, align 8\l  %31 = load i8*, i8** %aRes, align 8\l  %cmp68 = icmp eq i8* %31, null\l  br i1 %cmp68, label %\"0x56123915c3d0\", label %\"0x56123915c4b0\"\l|{<s0>T|<s1>F}}"];
	Node0x561239157ce0:s0 -> Node0x56123915c3d0;
	Node0x561239157ce0:s1 -> Node0x56123915c4b0;
	Node0x56123915c3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{\"0x56123915c3d0\":                                 \l  %32 = load i64, i64* %nMalloc, align 8\l  call void (i32, i8*, ...) @Malfunction(i32 600, i8* getelementptr inbounds\l... ([24 x i8], [24 x i8]* @.str.517, i64 0, i64 0), i64 %32)\l  br label %\"0x56123915c4b0\"\l}"];
	Node0x56123915c3d0 -> Node0x56123915c4b0;
	Node0x56123915c4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{\"0x56123915c4b0\":                                 \l  br label %\"0x561239157d60 - Exit Point\"\l}"];
	Node0x56123915c4b0 -> Node0x561239157d60;
	Node0x561239157d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{\"0x561239157d60 - Exit Point\":                    \l  %33 = load i8*, i8** %aRes, align 8\l  %34 = load i64, i64* %nRes, align 8\l  %add.ptr73 = getelementptr inbounds i8, i8* %33, i64 %34\l  %arraydecay74 = getelementptr inbounds [1000 x i8], [1000 x i8]* %zLine, i64\l... 0, i64 0\l  %35 = load i64, i64* %nLine, align 8\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr73, i8* align 16\l... %arraydecay74, i64 %35, i1 false)\l  %36 = load i64, i64* %nLine, align 8\l  %37 = load i64, i64* %nRes, align 8\l  %add75 = add i64 %37, %36\l  store i64 %add75, i64* %nRes, align 8\l  br label %\"0x56123915ac30\"\l}"];
	Node0x561239157d60 -> Node0x56123915ac30;
	Node0x56123915ac30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{\"0x56123915ac30\":                                 \l  br label %\"0x56123915a330\"\l}"];
	Node0x56123915ac30 -> Node0x56123915a330;
	Node0x56123915a330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{\"0x56123915a330\":                                 \l  br label %\"0x56123911cab0\"\l}"];
	Node0x56123915a330 -> Node0x56123911cab0;
	Node0x56123911cab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{\"0x56123911cab0\":                                 \l  br label %\"0x56123911cab0 - Virtual Checkpoint\"\l}"];
	Node0x56123911cab0 -> Node0x5612391555e0;
	Node0x561239156550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{\"0x561239156550\":                                 \l  %38 = load i32, i32* @rangeEnd, align 4\l  %cmp80 = icmp sgt i32 %38, 0\l  br i1 %cmp80, label %\"0x56123915d260\", label %\"0x56123915d2b0\"\l|{<s0>T|<s1>F}}"];
	Node0x561239156550:s0 -> Node0x56123915d260;
	Node0x561239156550:s1 -> Node0x56123915d2b0;
	Node0x56123915d260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{\"0x56123915d260\":                                 \l  %39 = load i32, i32* %seenContentLength, align 4\l  %tobool82 = icmp ne i32 %39, 0\l  br i1 %tobool82, label %\"0x56123915d510\", label %\"0x56123915d2b0\"\l|{<s0>T|<s1>F}}"];
	Node0x56123915d260:s0 -> Node0x56123915d510;
	Node0x56123915d260:s1 -> Node0x56123915d2b0;
	Node0x56123915d510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{\"0x56123915d510\":                                 \l  %40 = load i32, i32* @rangeStart, align 4\l  %41 = load i32, i32* %contentLength, align 4\l  %cmp84 = icmp slt i32 %40, %41\l  br i1 %cmp84, label %\"0x56123915d7d0\", label %\"0x56123915d2b0\"\l|{<s0>T|<s1>F}}"];
	Node0x56123915d510:s0 -> Node0x56123915d7d0;
	Node0x56123915d510:s1 -> Node0x56123915d2b0;
	Node0x56123915d7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{\"0x56123915d7d0\":                                 \l  call void @StartResponse(i8* getelementptr inbounds ([20 x i8], [20 x i8]*\l... @.str.518, i64 0, i64 0))\l  %42 = load i32, i32* @rangeEnd, align 4\l  %43 = load i32, i32* %contentLength, align 4\l  %cmp87 = icmp sge i32 %42, %43\l  br i1 %cmp87, label %\"0x56123915dbe0\", label %\"0x56123915dc60 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x56123915d7d0:s0 -> Node0x56123915dbe0;
	Node0x56123915d7d0:s1 -> Node0x56123915dc60;
	Node0x56123915dbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{\"0x56123915dbe0\":                                 \l  %44 = load i32, i32* %contentLength, align 4\l  %sub = sub nsw i32 %44, 1\l  store i32 %sub, i32* @rangeEnd, align 4\l  br label %\"0x56123915dc60 - Exit Point\"\l}"];
	Node0x56123915dbe0 -> Node0x56123915dc60;
	Node0x56123915dc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{\"0x56123915dc60 - Exit Point\":                    \l  %45 = load i32, i32* @rangeStart, align 4\l  %46 = load i32, i32* @rangeEnd, align 4\l  %47 = load i32, i32* %contentLength, align 4\l  %call91 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @.str.519, i64 0, i64 0), i32 %45, i32 %46, i32 %47)\l  %48 = load i32, i32* @nOut, align 4\l  %add92 = add nsw i32 %48, %call91\l  store i32 %add92, i32* @nOut, align 4\l  %49 = load i32, i32* @rangeEnd, align 4\l  %add93 = add nsw i32 %49, 1\l  %50 = load i32, i32* @rangeStart, align 4\l  %sub94 = sub nsw i32 %add93, %50\l  store i32 %sub94, i32* %contentLength, align 4\l  br label %\"0x56123915e780\"\l}"];
	Node0x56123915dc60 -> Node0x56123915e780;
	Node0x56123915d2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{\"0x56123915d2b0\":                                 \l  call void @StartResponse(i8* getelementptr inbounds ([7 x i8], [7 x i8]*\l... @.str.520, i64 0, i64 0))\l  br label %\"0x56123915e780\"\l}"];
	Node0x56123915d2b0 -> Node0x56123915e780;
	Node0x56123915e780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{\"0x56123915e780\":                                 \l  %51 = load i64, i64* %nRes, align 8\l  %cmp97 = icmp ugt i64 %51, 0\l  br i1 %cmp97, label %\"0x56123915eb80 - Exit Point\", label %\"0x56123915ec00\"\l|{<s0>T|<s1>F}}"];
	Node0x56123915e780:s0 -> Node0x56123915eb80;
	Node0x56123915e780:s1 -> Node0x56123915ec00;
	Node0x56123915eb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{\"0x56123915eb80 - Exit Point\":                    \l  %52 = load i8*, i8** %aRes, align 8\l  %53 = load i64, i64* %nRes, align 8\l  %arrayidx100 = getelementptr inbounds i8, i8* %52, i64 %53\l  store i8 0, i8* %arrayidx100, align 1\l  %54 = load i8*, i8** %aRes, align 8\l  %call101 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8],\l... [3 x i8]* @.str.391, i64 0, i64 0), i8* %54)\l  %55 = load i64, i64* %nRes, align 8\l  %56 = load i32, i32* @nOut, align 4\l  %conv102 = sext i32 %56 to i64\l  %add103 = add i64 %conv102, %55\l  %conv104 = trunc i64 %add103 to i32\l  store i32 %conv104, i32* @nOut, align 4\l  store i64 0, i64* %nRes, align 8\l  br label %\"0x56123915ec00\"\l}"];
	Node0x56123915eb80 -> Node0x56123915ec00;
	Node0x56123915ec00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{\"0x56123915ec00\":                                 \l  %57 = load i32, i32* %iStatus, align 4\l  %cmp106 = icmp eq i32 %57, 304\l  br i1 %cmp106, label %\"0x56123915f670 - Exit Point\", label %\"0x56123915f6f0\"\l|{<s0>T|<s1>F}}"];
	Node0x56123915ec00:s0 -> Node0x56123915f670;
	Node0x56123915ec00:s1 -> Node0x56123915f6f0;
	Node0x56123915f670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{\"0x56123915f670 - Exit Point\":                    \l  %call109 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8],\l... [5 x i8]* @.str.521, i64 0, i64 0))\l  %58 = load i32, i32* @nOut, align 4\l  %add110 = add nsw i32 %58, %call109\l  store i32 %add110, i32* @nOut, align 4\l  br label %\"0x56123915fb70 - Exit Point\"\l}"];
	Node0x56123915f670 -> Node0x56123915fb70;
	Node0x56123915f6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{\"0x56123915f6f0\":                                 \l  %59 = load i32, i32* %seenContentLength, align 4\l  %tobool112 = icmp ne i32 %59, 0\l  br i1 %tobool112, label %\"0x56123915fdc0 - Exit Point\", label\l... %\"0x56123915fe10\"\l|{<s0>T|<s1>F}}"];
	Node0x56123915f6f0:s0 -> Node0x56123915fdc0;
	Node0x56123915f6f0:s1 -> Node0x56123915fe10;
	Node0x56123915fdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{\"0x56123915fdc0 - Exit Point\":                    \l  %60 = load i32, i32* %contentLength, align 4\l  %call114 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x\l... i8], [23 x i8]* @.str.522, i64 0, i64 0), i32 %60)\l  %61 = load i32, i32* @nOut, align 4\l  %add115 = add nsw i32 %61, %call114\l  store i32 %add115, i32* @nOut, align 4\l  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %in.addr, align 8\l  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8\l  %64 = load i32, i32* %contentLength, align 4\l  %65 = load i32, i32* @rangeStart, align 4\l  call void @xferBytes(%struct._IO_FILE* %62, %struct._IO_FILE* %63, i32 %64,\l... i32 %65)\l  br label %\"0x561239160760\"\l}"];
	Node0x56123915fdc0 -> Node0x561239160760;
	Node0x56123915fe10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{\"0x56123915fe10\":                                 \l  br label %\"0x561239161060 - Virtual Checkpoint\"\l}"];
	Node0x56123915fe10 -> Node0x561239160850;
	Node0x561239160850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{\"0x561239161060 - Virtual Checkpoint\":            \l  %66 = load %struct._IO_FILE*, %struct._IO_FILE** %in.addr, align 8\l  %call118 = call i32 @getc(%struct._IO_FILE* %66)\l  store i32 %call118, i32* %c, align 4\l  %cmp119 = icmp ne i32 %call118, -1\l  br i1 %cmp119, label %\"0x561239160ca0\", label %\"0x561239160d20\"\l|{<s0>T|<s1>F}}"];
	Node0x561239160850:s0 -> Node0x561239160ca0;
	Node0x561239160850:s1 -> Node0x561239160d20;
	Node0x561239160ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{\"0x561239160ca0\":                                 \l  %67 = load i64, i64* %nRes, align 8\l  %68 = load i64, i64* %nMalloc, align 8\l  %cmp122 = icmp uge i64 %67, %68\l  br i1 %cmp122, label %\"0x561239160fe0 - Exit Point\", label %\"0x561239161060\"\l|{<s0>T|<s1>F}}"];
	Node0x561239160ca0:s0 -> Node0x561239160fe0;
	Node0x561239160ca0:s1 -> Node0x561239161060;
	Node0x561239160fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{\"0x561239160fe0 - Exit Point\":                    \l  %69 = load i64, i64* %nMalloc, align 8\l  %mul125 = mul i64 %69, 2\l  %add126 = add i64 %mul125, 1000\l  store i64 %add126, i64* %nMalloc, align 8\l  %70 = load i8*, i8** %aRes, align 8\l  %71 = load i64, i64* %nMalloc, align 8\l  %add127 = add i64 %71, 1\l  %call128 = call i8* @realloc(i8* %70, i64 %add127)\l  store i8* %call128, i8** %aRes, align 8\l  %72 = load i8*, i8** %aRes, align 8\l  %cmp129 = icmp eq i8* %72, null\l  br i1 %cmp129, label %\"0x561239161880\", label %\"0x561239161900\"\l|{<s0>T|<s1>F}}"];
	Node0x561239160fe0:s0 -> Node0x561239161880;
	Node0x561239160fe0:s1 -> Node0x561239161900;
	Node0x561239161880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{\"0x561239161880\":                                 \l  %73 = load i64, i64* %nMalloc, align 8\l  call void (i32, i8*, ...) @Malfunction(i32 610, i8* getelementptr inbounds\l... ([24 x i8], [24 x i8]* @.str.517, i64 0, i64 0), i64 %73)\l  br label %\"0x561239161900\"\l}"];
	Node0x561239161880 -> Node0x561239161900;
	Node0x561239161900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{\"0x561239161900\":                                 \l  br label %\"0x561239161060\"\l}"];
	Node0x561239161900 -> Node0x561239161060;
	Node0x561239161060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{\"0x561239161060\":                                 \l  %74 = load i32, i32* %c, align 4\l  %conv134 = trunc i32 %74 to i8\l  %75 = load i8*, i8** %aRes, align 8\l  %76 = load i64, i64* %nRes, align 8\l  %inc135 = add i64 %76, 1\l  store i64 %inc135, i64* %nRes, align 8\l  %arrayidx136 = getelementptr inbounds i8, i8* %75, i64 %76\l  store i8 %conv134, i8* %arrayidx136, align 1\l  br label %\"0x561239161060 - Virtual Checkpoint\"\l}"];
	Node0x561239161060 -> Node0x561239160850;
	Node0x561239160d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{\"0x561239160d20\":                                 \l  %77 = load i64, i64* %nRes, align 8\l  %tobool138 = icmp ne i64 %77, 0\l  br i1 %tobool138, label %\"0x561239162360 - Exit Point\", label\l... %\"0x5612391623e0 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x561239160d20:s0 -> Node0x561239162360;
	Node0x561239160d20:s1 -> Node0x5612391623e0;
	Node0x561239162360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{\"0x561239162360 - Exit Point\":                    \l  %78 = load i8*, i8** %aRes, align 8\l  %79 = load i64, i64* %nRes, align 8\l  %arrayidx140 = getelementptr inbounds i8, i8* %78, i64 %79\l  store i8 0, i8* %arrayidx140, align 1\l  %80 = load i64, i64* %nRes, align 8\l  %conv141 = trunc i64 %80 to i32\l  %81 = load i8*, i8** %aRes, align 8\l  %call142 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x\l... i8], [25 x i8]* @.str.523, i64 0, i64 0), i32 %conv141, i8* %81)\l  %82 = load i32, i32* @nOut, align 4\l  %add143 = add nsw i32 %82, %call142\l  store i32 %add143, i32* @nOut, align 4\l  br label %\"0x561239162c50\"\l}"];
	Node0x561239162360 -> Node0x561239162c50;
	Node0x5612391623e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{\"0x5612391623e0 - Exit Point\":                    \l  %call145 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x\l... i8], [22 x i8]* @.str.524, i64 0, i64 0))\l  %83 = load i32, i32* @nOut, align 4\l  %add146 = add nsw i32 %83, %call145\l  store i32 %add146, i32* @nOut, align 4\l  br label %\"0x561239162c50\"\l}"];
	Node0x5612391623e0 -> Node0x561239162c50;
	Node0x561239162c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{\"0x561239162c50\":                                 \l  br label %\"0x561239160760\"\l}"];
	Node0x561239162c50 -> Node0x561239160760;
	Node0x561239160760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{\"0x561239160760\":                                 \l  br label %\"0x56123915fb70 - Exit Point\"\l}"];
	Node0x561239160760 -> Node0x56123915fb70;
	Node0x56123915fb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{\"0x56123915fb70 - Exit Point\":                    \l  %84 = load i8*, i8** %aRes, align 8\l  call void @free(i8* %84)\l  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %in.addr, align 8\l  %call150 = call i32 @fclose(%struct._IO_FILE* %85)\l  ret void\l}"];
}
