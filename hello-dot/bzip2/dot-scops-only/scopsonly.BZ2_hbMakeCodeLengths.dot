digraph "Scop Graph for 'BZ2_hbMakeCodeLengths' function" {
	label="Scop Graph for 'BZ2_hbMakeCodeLengths' function";

	Node0x20d21d0 [shape=record,label="{%4}"];
	Node0x20d21d0 -> Node0x2107b00;
	Node0x2107b00 [shape=record,label="{%30}"];
	Node0x2107b00 -> Node0x21f3c10;
	Node0x2107b00 -> Node0x236a180;
	Node0x21f3c10 [shape=record,label="{%34}"];
	Node0x21f3c10 -> Node0x2365660;
	Node0x21f3c10 -> Node0x2373720;
	Node0x2365660 [shape=record,label="{%41}"];
	Node0x2365660 -> Node0x224d9d0;
	Node0x224d9d0 [shape=record,label="{%48}"];
	Node0x224d9d0 -> Node0x23685a0;
	Node0x23685a0 [shape=record,label="{%55}"];
	Node0x23685a0 -> Node0x2107b00[constraint=false];
	Node0x2373720 [shape=record,label="{%42}"];
	Node0x2373720 -> Node0x224d9d0;
	Node0x236a180 [shape=record,label="{%58}"];
	Node0x236a180 -> Node0x22bae20;
	Node0x22bae20 [shape=record,label="{%59}"];
	Node0x22bae20 -> Node0x229e450;
	Node0x229e450 [shape=record,label="{%64}"];
	Node0x229e450 -> Node0x229ce90;
	Node0x229e450 -> Node0x2022f10;
	Node0x229ce90 [shape=record,label="{%68}"];
	Node0x229ce90 -> Node0x2272830;
	Node0x2272830 [shape=record,label="{%83}"];
	Node0x2272830 -> Node0x22a1a20;
	Node0x2272830 -> Node0x22d7240;
	Node0x22a1a20 [shape=record,label="{%97}"];
	Node0x22a1a20 -> Node0x2272830[constraint=false];
	Node0x22d7240 [shape=record,label="{%108}"];
	Node0x22d7240 -> Node0x2204550;
	Node0x2204550 [shape=record,label="{%113}"];
	Node0x2204550 -> Node0x229e450[constraint=false];
	Node0x2022f10 [shape=record,label="{%116}"];
	Node0x2022f10 -> Node0x20734c0;
	Node0x2022f10 -> Node0x22a9290;
	Node0x20734c0 [shape=record,label="{%120}"];
	Node0x20734c0 -> Node0x22659e0;
	Node0x22659e0 [shape=record,label="{%121}"];
	Node0x22659e0 -> Node0x20ffaa0;
	Node0x22659e0 -> Node0x2291630;
	Node0x20ffaa0 [shape=record,label="{%124}"];
	Node0x20ffaa0 -> Node0x2340280;
	Node0x2340280 [shape=record,label="{%138}"];
	Node0x2340280 -> Node0x22c91c0;
	Node0x2340280 -> Node0x22ad340;
	Node0x22c91c0 [shape=record,label="{%144}"];
	Node0x22c91c0 -> Node0x2112010;
	Node0x2112010 [shape=record,label="{%192}"];
	Node0x2112010 -> Node0x2360fb0;
	Node0x2360fb0 [shape=record,label="{%210}"];
	Node0x2360fb0 -> Node0x2378eb0;
	Node0x2360fb0 -> Node0x233fc20;
	Node0x2378eb0 [shape=record,label="{%216}"];
	Node0x2378eb0 -> Node0x2354d20;
	Node0x2354d20 [shape=record,label="{%264}"];
	Node0x2354d20 -> Node0x22c3580;
	Node0x2354d20 -> Node0x22a97a0;
	Node0x22c3580 [shape=record,label="{%300}"];
	Node0x22c3580 -> Node0x22d2210;
	Node0x22d2210 [shape=record,label="{%312}"];
	Node0x22d2210 -> Node0x22c98a0;
	Node0x22c98a0 [shape=record,label="{%333}"];
	Node0x22c98a0 -> Node0x20fe1a0;
	Node0x22c98a0 -> Node0x2288180;
	Node0x20fe1a0 [shape=record,label="{%347}"];
	Node0x20fe1a0 -> Node0x22c98a0[constraint=false];
	Node0x2288180 [shape=record,label="{%358}"];
	Node0x2288180 -> Node0x22659e0[constraint=false];
	Node0x22a97a0 [shape=record,label="{%306}"];
	Node0x22a97a0 -> Node0x22d2210;
	Node0x233fc20 [shape=record,label="{%217}"];
	Node0x233fc20 -> Node0x22d6970;
	Node0x233fc20 -> Node0x21bddd0;
	Node0x22d6970 [shape=record,label="{%221}"];
	Node0x22d6970 -> Node0x22a3540;
	Node0x22d6970 -> Node0x21bddd0;
	Node0x22a3540 [shape=record,label="{%238}"];
	Node0x22a3540 -> Node0x21bddd0;
	Node0x21bddd0 [shape=record,label="{%241}"];
	Node0x21bddd0 -> Node0x22baac0;
	Node0x21bddd0 -> Node0x2368e00;
	Node0x22baac0 [shape=record,label="{%254}"];
	Node0x22baac0 -> Node0x2354d20;
	Node0x2368e00 [shape=record,label="{%255}"];
	Node0x2368e00 -> Node0x2360fb0[constraint=false];
	Node0x22ad340 [shape=record,label="{%145}"];
	Node0x22ad340 -> Node0x21b9aa0;
	Node0x22ad340 -> Node0x229b380;
	Node0x21b9aa0 [shape=record,label="{%149}"];
	Node0x21b9aa0 -> Node0x22b5940;
	Node0x21b9aa0 -> Node0x229b380;
	Node0x22b5940 [shape=record,label="{%166}"];
	Node0x22b5940 -> Node0x229b380;
	Node0x229b380 [shape=record,label="{%169}"];
	Node0x229b380 -> Node0x2351d60;
	Node0x229b380 -> Node0x22bc0b0;
	Node0x2351d60 [shape=record,label="{%182}"];
	Node0x2351d60 -> Node0x2112010;
	Node0x22bc0b0 [shape=record,label="{%183}"];
	Node0x22bc0b0 -> Node0x2340280[constraint=false];
	Node0x2291630 [shape=record,label="{%363}"];
	Node0x2291630 -> Node0x2359f20;
	Node0x2291630 -> Node0x22d3780;
	Node0x2359f20 [shape=record,label="{%367}"];
	Node0x2359f20 -> Node0x22a3b00;
	Node0x22a3b00 [shape=record,label="{%368}"];
	Node0x22a3b00 -> Node0x226aed0;
	Node0x22a3b00 -> Node0x22aa700;
	Node0x226aed0 [shape=record,label="{%372}"];
	Node0x226aed0 -> Node0x22c4ab0;
	Node0x22c4ab0 [shape=record,label="{%374}"];
	Node0x22c4ab0 -> Node0x22ad480;
	Node0x22c4ab0 -> Node0x2120be0;
	Node0x22ad480 [shape=record,label="{%380}"];
	Node0x22ad480 -> Node0x22c4ab0[constraint=false];
	Node0x2120be0 [shape=record,label="{%387}"];
	Node0x2120be0 -> Node0x228be50;
	Node0x2120be0 -> Node0x20d85f0;
	Node0x228be50 [shape=record,label="{%398}"];
	Node0x228be50 -> Node0x20d85f0;
	Node0x20d85f0 [shape=record,label="{%399}"];
	Node0x20d85f0 -> Node0x2349950;
	Node0x2349950 [shape=record,label="{%400}"];
	Node0x2349950 -> Node0x22a3b00[constraint=false];
	Node0x22aa700 [shape=record,label="{%403}"];
	Node0x22aa700 -> Node0x22b09b0;
	Node0x22aa700 -> Node0x22c0f70;
	Node0x22b09b0 [shape=record,label="{%407}"];
	Node0x22b09b0 -> Node0x22bfc20;
	Node0x22bfc20 [shape=record,label="{%408}"];
	Node0x22bfc20 -> Node0x22c9d20;
	Node0x22bfc20 -> Node0x2038010;
	Node0x22c9d20 [shape=record,label="{%412}"];
	Node0x22c9d20 -> Node0x230e150;
	Node0x230e150 [shape=record,label="{%426}"];
	Node0x230e150 -> Node0x22bfc20[constraint=false];
	Node0x2038010 [shape=record,label="{%429}"];
	Node0x2038010 -> Node0x22bae20[constraint=false];
	Node0x22c0f70 [shape=record,label="{%406}"];
	Node0x22c0f70 -> Node0x22ca4e0;
	Node0x22ca4e0 [shape=record,label="{%430}"];
	Node0x22d3780 [shape=record,label="{%366}"];
	Node0x22d3780 -> Node0x2359f20;
	Node0x22a9290 [shape=record,label="{%119}"];
	Node0x22a9290 -> Node0x20734c0;
	colorscheme = "paired12"
        subgraph cluster_0x239c410 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x1fd4730 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: ";
            style = solid;
            color = 6
            subgraph cluster_0x23a9240 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              Node0x21f3c10;
              Node0x2365660;
              Node0x2373720;
            }
            Node0x2107b00;
            Node0x224d9d0;
            Node0x23685a0;
          }
          subgraph cluster_0x1fd46b0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: ";
            style = solid;
            color = 6
            subgraph cluster_0x23ba3d0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: ";
              style = solid;
              color = 5
              subgraph cluster_0x239c390 {
                label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: ";
                style = solid;
                color = 7
                Node0x2272830;
                Node0x22a1a20;
              }
              Node0x229e450;
              Node0x229ce90;
              Node0x22d7240;
              Node0x2204550;
            }
            subgraph cluster_0x23ba350 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              Node0x2022f10;
              Node0x22a9290;
            }
            subgraph cluster_0x23ba2d0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: ";
              style = solid;
              color = 5
              subgraph cluster_0x23ae8a0 {
                label = "Loop  has multiple exits.";
                style = solid;
                color = 7
                subgraph cluster_0x23ae820 {
                  label = "Region can not profitably be optimized!";
                  style = solid;
                  color = 9
                  subgraph cluster_0x23bb5b0 {
                    label = "Region can not profitably be optimized!";
                    style = solid;
                    color = 11
                    Node0x21b9aa0;
                    Node0x22b5940;
                  }
                  Node0x22ad340;
                }
                Node0x2340280;
                Node0x22c91c0;
                Node0x229b380;
                Node0x2351d60;
                Node0x22bc0b0;
              }
              subgraph cluster_0x23bb530 {
                label = "Loop  has multiple exits.";
                style = solid;
                color = 7
                subgraph cluster_0x239c610 {
                  label = "Region can not profitably be optimized!";
                  style = solid;
                  color = 9
                  subgraph cluster_0x239c590 {
                    label = "Region can not profitably be optimized!";
                    style = solid;
                    color = 11
                    Node0x22d6970;
                    Node0x22a3540;
                  }
                  Node0x233fc20;
                }
                Node0x2360fb0;
                Node0x2378eb0;
                Node0x21bddd0;
                Node0x22baac0;
                Node0x2368e00;
              }
              subgraph cluster_0x239c510 {
                label = "Region can not profitably be optimized!";
                style = solid;
                color = 7
                Node0x2354d20;
                Node0x22c3580;
                Node0x22a97a0;
              }
              subgraph cluster_0x239c490 {
                label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: ";
                style = solid;
                color = 7
                Node0x22c98a0;
                Node0x20fe1a0;
              }
              Node0x22659e0;
              Node0x20ffaa0;
              Node0x2112010;
              Node0x22d2210;
              Node0x2288180;
            }
            subgraph cluster_0x23aeb20 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              Node0x2291630;
              Node0x22d3780;
            }
            subgraph cluster_0x23aeaa0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: ";
              style = solid;
              color = 5
              subgraph cluster_0x23ae9a0 {
                label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: ";
                style = solid;
                color = 7
                Node0x22c4ab0;
                Node0x22ad480;
              }
              subgraph cluster_0x23ae920 {
                label = "Region can not profitably be optimized!";
                style = solid;
                color = 7
                Node0x2120be0;
                Node0x228be50;
              }
              Node0x22a3b00;
              Node0x226aed0;
              Node0x20d85f0;
              Node0x2349950;
            }
            subgraph cluster_0x23aea20 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: ";
              style = solid;
              color = 5
              Node0x22bfc20;
              Node0x22c9d20;
              Node0x230e150;
            }
            Node0x22bae20;
            Node0x20734c0;
            Node0x2359f20;
            Node0x22aa700;
            Node0x22b09b0;
            Node0x2038010;
          }
          Node0x20d21d0;
          Node0x236a180;
          Node0x22c0f70;
          Node0x22ca4e0;
        }
}
