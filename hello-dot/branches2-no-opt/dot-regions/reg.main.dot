digraph "Region Graph for 'main' function" {
	label="Region Graph for 'main' function";

	Node0x55c807f76070 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %a = alloca i32, align 4\l  %b = alloca i32, align 4\l  %z = alloca i32, align 4\l  %s = alloca i32, align 4\l  %t = alloca i64, align 8\l  %r = alloca i32, align 4\l  store i32 0, i32* %retval, align 4\l  store i32 1, i32* %a, align 4\l  store i32 2, i32* %b, align 4\l  %0 = load i32, i32* %a, align 4\l  %cmp = icmp eq i32 %0, 1\l  br i1 %cmp, label %if.then, label %if.else3\l}"];
	Node0x55c807f76070 -> Node0x55c807f67db0;
	Node0x55c807f76070 -> Node0x55c807f65150;
	Node0x55c807f67db0 [shape=record,label="{if.then:                                          \l  call void @b1()\l  %1 = load i32, i32* %b, align 4\l  %cmp1 = icmp eq i32 %1, 1\l  br i1 %cmp1, label %if.then2, label %if.else\l}"];
	Node0x55c807f67db0 -> Node0x55c807f76570;
	Node0x55c807f67db0 -> Node0x55c807f64790;
	Node0x55c807f76570 [shape=record,label="{if.then2:                                         \l  call void @c()\l  br label %if.end\l}"];
	Node0x55c807f76570 -> Node0x55c807f6a170;
	Node0x55c807f6a170 [shape=record,label="{if.end:                                           \l  br label %if.end4\l}"];
	Node0x55c807f6a170 -> Node0x55c807f69ce0;
	Node0x55c807f69ce0 [shape=record,label="{if.end4:                                          \l  store i32 10, i32* %z, align 4\l  br label %while.cond\l}"];
	Node0x55c807f69ce0 -> Node0x55c807f69850;
	Node0x55c807f69850 [shape=record,label="{while.cond:                                       \l  %2 = load i32, i32* %z, align 4\l  %cmp5 = icmp sgt i32 %2, 0\l  br i1 %cmp5, label %while.body, label %while.end\l}"];
	Node0x55c807f69850 -> Node0x55c807f693c0;
	Node0x55c807f69850 -> Node0x55c807f68ed0;
	Node0x55c807f693c0 [shape=record,label="{while.body:                                       \l  call void @f()\l  %3 = load i32, i32* %z, align 4\l  %dec = add nsw i32 %3, -1\l  store i32 %dec, i32* %z, align 4\l  br label %while.cond\l}"];
	Node0x55c807f693c0 -> Node0x55c807f69850[constraint=false];
	Node0x55c807f68ed0 [shape=record,label="{while.end:                                        \l  store i32 4, i32* %s, align 4\l  %4 = load i32, i32* %s, align 4\l  switch i32 %4, label %sw.default [\l    i32 1, label %sw.bb\l    i32 2, label %sw.bb6\l    i32 3, label %sw.bb7\l    i32 4, label %sw.bb8\l  ]\l}"];
	Node0x55c807f68ed0 -> Node0x55c807f68c60;
	Node0x55c807f68ed0 -> Node0x55c807f38cc0;
	Node0x55c807f68ed0 -> Node0x55c807f6a240;
	Node0x55c807f68ed0 -> Node0x55c807f6d2f0;
	Node0x55c807f68ed0 -> Node0x55c807f6cdc0;
	Node0x55c807f68c60 [shape=record,label="{sw.default:                                       \l  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8],\l... [13 x i8]* @.str.11, i64 0, i64 0))\l  br label %sw.epilog\l}"];
	Node0x55c807f68c60 -> Node0x55c807f6c120;
	Node0x55c807f6c120 [shape=record,label="{sw.epilog:                                        \l  %call9 = call i64 @time(i64* %t) #3\l  %conv = trunc i64 %call9 to i32\l  call void @srand(i32 %conv) #3\l  %call10 = call i32 @rand() #3\l  %rem = srem i32 %call10, 4\l  %add = add nsw i32 1, %rem\l  store i32 %add, i32* %r, align 4\l  %5 = load i32, i32* %r, align 4\l  switch i32 %5, label %sw.default15 [\l    i32 1, label %sw.bb11\l    i32 2, label %sw.bb12\l    i32 3, label %sw.bb13\l    i32 4, label %sw.bb14\l  ]\l}"];
	Node0x55c807f6c120 -> Node0x55c807f6b480;
	Node0x55c807f6c120 -> Node0x55c807f6aff0;
	Node0x55c807f6c120 -> Node0x55c807f6ab60;
	Node0x55c807f6c120 -> Node0x55c807f6a6d0;
	Node0x55c807f6c120 -> Node0x55c807f6d4a0;
	Node0x55c807f6b480 [shape=record,label="{sw.default15:                                     \l  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8],\l... [13 x i8]* @.str.11, i64 0, i64 0))\l  br label %sw.epilog17\l}"];
	Node0x55c807f6b480 -> Node0x55c807f6ed00;
	Node0x55c807f6ed00 [shape=record,label="{sw.epilog17:                                      \l  %6 = load i32, i32* %retval, align 4\l  ret i32 %6\l}"];
	Node0x55c807f6aff0 [shape=record,label="{sw.bb11:                                          \l  call void @g1()\l  br label %sw.epilog17\l}"];
	Node0x55c807f6aff0 -> Node0x55c807f6ed00;
	Node0x55c807f6ab60 [shape=record,label="{sw.bb12:                                          \l  call void @g2()\l  br label %sw.epilog17\l}"];
	Node0x55c807f6ab60 -> Node0x55c807f6ed00;
	Node0x55c807f6a6d0 [shape=record,label="{sw.bb13:                                          \l  call void @g3()\l  br label %sw.epilog17\l}"];
	Node0x55c807f6a6d0 -> Node0x55c807f6ed00;
	Node0x55c807f6d4a0 [shape=record,label="{sw.bb14:                                          \l  call void @g4()\l  br label %sw.epilog17\l}"];
	Node0x55c807f6d4a0 -> Node0x55c807f6ed00;
	Node0x55c807f38cc0 [shape=record,label="{sw.bb:                                            \l  call void @g1()\l  br label %sw.epilog\l}"];
	Node0x55c807f38cc0 -> Node0x55c807f6c120;
	Node0x55c807f6a240 [shape=record,label="{sw.bb6:                                           \l  call void @g2()\l  br label %sw.epilog\l}"];
	Node0x55c807f6a240 -> Node0x55c807f6c120;
	Node0x55c807f6d2f0 [shape=record,label="{sw.bb7:                                           \l  call void @g3()\l  br label %sw.epilog\l}"];
	Node0x55c807f6d2f0 -> Node0x55c807f6c120;
	Node0x55c807f6cdc0 [shape=record,label="{sw.bb8:                                           \l  call void @g4()\l  br label %sw.epilog\l}"];
	Node0x55c807f6cdc0 -> Node0x55c807f6c120;
	Node0x55c807f64790 [shape=record,label="{if.else:                                          \l  call void @d()\l  br label %if.end\l}"];
	Node0x55c807f64790 -> Node0x55c807f6a170;
	Node0x55c807f65150 [shape=record,label="{if.else3:                                         \l  call void @b2()\l  br label %if.end4\l}"];
	Node0x55c807f65150 -> Node0x55c807f69ce0;
	colorscheme = "paired12"
        subgraph cluster_0x55c807f72bb0 {
          label = "";
          style = filled;
          color = 1
          subgraph cluster_0x55c807f54a90 {
            label = "";
            style = filled;
            color = 3
            subgraph cluster_0x55c807f729f0 {
              label = "";
              style = filled;
              color = 5
              Node0x55c807f67db0;
              Node0x55c807f76570;
              Node0x55c807f64790;
            }
            Node0x55c807f76070;
            Node0x55c807f6a170;
            Node0x55c807f65150;
          }
          subgraph cluster_0x55c807f54a10 {
            label = "";
            style = filled;
            color = 3
            Node0x55c807f69850;
            Node0x55c807f693c0;
          }
          subgraph cluster_0x55c807f54990 {
            label = "";
            style = filled;
            color = 3
            Node0x55c807f68ed0;
            Node0x55c807f68c60;
            Node0x55c807f38cc0;
            Node0x55c807f6a240;
            Node0x55c807f6d2f0;
            Node0x55c807f6cdc0;
          }
          subgraph cluster_0x55c807f54910 {
            label = "";
            style = filled;
            color = 3
            Node0x55c807f6c120;
            Node0x55c807f6b480;
            Node0x55c807f6aff0;
            Node0x55c807f6ab60;
            Node0x55c807f6a6d0;
            Node0x55c807f6d4a0;
          }
          Node0x55c807f69ce0;
          Node0x55c807f6ed00;
        }
}
