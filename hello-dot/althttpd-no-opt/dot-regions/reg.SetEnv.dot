digraph "Region Graph for 'SetEnv' function" {
	label="Region Graph for 'SetEnv' function";

	Node0x8ae720 [shape=record,label="{entry:\l  %zVar.addr = alloca i8*, align 8\l  %zValue.addr = alloca i8*, align 8\l  %z = alloca i8*, align 8\l  %len = alloca i64, align 8\l  store i8* %zVar, i8** %zVar.addr, align 8\l  store i8* %zValue, i8** %zValue.addr, align 8\l  %0 = load i8*, i8** %zValue.addr, align 8\l  %cmp = icmp eq i8* %0, null\l  br i1 %cmp, label %if.then, label %if.end\l}"];
	Node0x8ae720 -> Node0x925160;
	Node0x8ae720 -> Node0x8ae3e0;
	Node0x925160 [shape=record,label="{if.then:                                          \l  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.379, i64 0, i64\l... 0), i8** %zValue.addr, align 8\l  br label %if.end\l}"];
	Node0x925160 -> Node0x8ae3e0;
	Node0x8ae3e0 [shape=record,label="{if.end:                                           \l  %1 = load i8*, i8** %zValue.addr, align 8\l  %call = call i32 @strncmp(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x\l... i8]* @.str.508, i64 0, i64 0), i64 4) #8\l  %cmp1 = icmp eq i32 %call, 0\l  br i1 %cmp1, label %if.then2, label %if.end3\l}"];
	Node0x8ae3e0 -> Node0x8fe560;
	Node0x8ae3e0 -> Node0x8bdf30;
	Node0x8fe560 [shape=record,label="{if.then2:                                         \l  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.379, i64 0, i64\l... 0), i8** %zValue.addr, align 8\l  br label %if.end3\l}"];
	Node0x8fe560 -> Node0x8bdf30;
	Node0x8bdf30 [shape=record,label="{if.end3:                                          \l  %2 = load i8*, i8** %zVar.addr, align 8\l  %call4 = call i64 @strlen(i8* %2) #8\l  %3 = load i8*, i8** %zValue.addr, align 8\l  %call5 = call i64 @strlen(i8* %3) #8\l  %add = add i64 %call4, %call5\l  %add6 = add i64 %add, 2\l  store i64 %add6, i64* %len, align 8\l  %4 = load i64, i64* %len, align 8\l  %call7 = call i8* @SafeMalloc(i64 %4)\l  store i8* %call7, i8** %z, align 8\l  %5 = load i8*, i8** %z, align 8\l  %6 = load i8*, i8** %zVar.addr, align 8\l  %7 = load i8*, i8** %zValue.addr, align 8\l  %call8 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr\l... inbounds ([6 x i8], [6 x i8]* @.str.509, i64 0, i64 0), i8* %6, i8* %7) #7\l  %8 = load i8*, i8** %z, align 8\l  %call9 = call i32 @putenv(i8* %8) #7\l  ret void\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x97ce50 {
          label = "";
          style = filled;
          color = 1
          subgraph cluster_0x99dcc0 {
            label = "";
            style = filled;
            color = 3
            Node0x8ae720;
            Node0x925160;
          }
          subgraph cluster_0x97d050 {
            label = "";
            style = filled;
            color = 3
            Node0x8ae3e0;
            Node0x8fe560;
          }
          Node0x8bdf30;
        }
}
