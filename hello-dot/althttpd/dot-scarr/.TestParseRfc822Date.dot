digraph "CFG for 'TestParseRfc822Date' function" {
	label="CFG for 'TestParseRfc822Date' function";

	Node0x562a71f819a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{\"0x562a71f819a0\":\l  %0 = alloca i64, align 8\l  %1 = alloca i64, align 8\l  store i64 0, i64* %0, align 8\l  br label %\"0x562a71f555d0 - Virtual Checkpoint\"\l}"];
	Node0x562a71f819a0 -> Node0x562a71f81b80;
	Node0x562a71f81b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x562a71f555d0 - Virtual Checkpoint\":            \l  %2 = load i64, i64* %0, align 8\l  %3 = icmp slt i64 %2, 2147483647\l  br i1 %3, label %\"0x562a71f81d90\", label %\"0x562a71f81de0\"\l|{<s0>T|<s1>F}}"];
	Node0x562a71f81b80:s0 -> Node0x562a71f81d90;
	Node0x562a71f81b80:s1 -> Node0x562a71f81de0;
	Node0x562a71f81d90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x562a71f81d90\":                                 \l  %4 = load i64, i64* %0, align 8\l  %5 = call i8* @Rfc822Date(i64 %4)\l  %6 = call i64 @ParseRfc822Date(i8* %5)\l  store i64 %6, i64* %1, align 8\l  %7 = load i64, i64* %0, align 8\l  %8 = load i64, i64* %1, align 8\l  %9 = icmp eq i64 %7, %8\l  br i1 %9, label %\"0x562a71f82490\", label %\"0x562a71f824e0 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x562a71f81d90:s0 -> Node0x562a71f82490;
	Node0x562a71f81d90:s1 -> Node0x562a71f824e0;
	Node0x562a71f82490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x562a71f82490\":                                 \l  br label %\"0x562a71f825e0\"\l}"];
	Node0x562a71f82490 -> Node0x562a71f825e0;
	Node0x562a71f824e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{\"0x562a71f824e0 - Exit Point\":                    \l  call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]*\l... @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]*\l... @.str.14, i64 0, i64 0), i32 670, i8* getelementptr inbounds ([31 x i8], [31\l... x i8]* @__PRETTY_FUNCTION__.TestParseRfc822Date, i64 0, i64 0))\l  unreachable\l}"];
	Node0x562a71f825e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x562a71f825e0\":                                 \l  br label %\"0x562a71f555d0\"\l}"];
	Node0x562a71f825e0 -> Node0x562a71f555d0;
	Node0x562a71f555d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x562a71f555d0\":                                 \l  %10 = load i64, i64* %0, align 8\l  %11 = add nsw i64 %10, 127\l  store i64 %11, i64* %0, align 8\l  br label %\"0x562a71f555d0 - Virtual Checkpoint\"\l}"];
	Node0x562a71f555d0 -> Node0x562a71f81b80;
	Node0x562a71f81de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{\"0x562a71f81de0\":                                 \l  ret void\l}"];
}
