digraph "CFG for 'TestParseRfc822Date' function" {
	label="CFG for 'TestParseRfc822Date' function";

	Node0x5612390ad5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{\"0x5612390ad5d0\":\l  %t1 = alloca i64, align 8\l  %t2 = alloca i64, align 8\l  store i64 0, i64* %t1, align 8\l  br label %\"0x5612390afa90 - Virtual Checkpoint\"\l}"];
	Node0x5612390ad5d0 -> Node0x5612390ad8b0;
	Node0x5612390ad8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5612390afa90 - Virtual Checkpoint\":            \l  %0 = load i64, i64* %t1, align 8\l  %cmp = icmp slt i64 %0, 2147483647\l  br i1 %cmp, label %\"0x5612390adae0\", label %\"0x5612390adb60\"\l|{<s0>T|<s1>F}}"];
	Node0x5612390ad8b0:s0 -> Node0x5612390adae0;
	Node0x5612390ad8b0:s1 -> Node0x5612390adb60;
	Node0x5612390adae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5612390adae0\":                                 \l  %1 = load i64, i64* %t1, align 8\l  %call = call i8* @Rfc822Date(i64 %1)\l  %call1 = call i64 @ParseRfc822Date(i8* %call)\l  store i64 %call1, i64* %t2, align 8\l  %2 = load i64, i64* %t1, align 8\l  %3 = load i64, i64* %t2, align 8\l  %cmp2 = icmp eq i64 %2, %3\l  br i1 %cmp2, label %\"0x5612390ae230\", label %\"0x5612390ae2a0 - Exit Point\"\l|{<s0>T|<s1>F}}"];
	Node0x5612390adae0:s0 -> Node0x5612390ae230;
	Node0x5612390adae0:s1 -> Node0x5612390ae2a0;
	Node0x5612390ae230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5612390ae230\":                                 \l  br label %\"0x5612390ae3c0\"\l}"];
	Node0x5612390ae230 -> Node0x5612390ae3c0;
	Node0x5612390ae2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{\"0x5612390ae2a0 - Exit Point\":                    \l  call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]*\l... @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]*\l... @.str.14, i64 0, i64 0), i32 670, i8* getelementptr inbounds ([31 x i8], [31\l... x i8]* @__PRETTY_FUNCTION__.TestParseRfc822Date, i64 0, i64 0))\l  unreachable\l}"];
	Node0x5612390ae3c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5612390ae3c0\":                                 \l  br label %\"0x5612390afa90\"\l}"];
	Node0x5612390ae3c0 -> Node0x5612390afa90;
	Node0x5612390afa90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"0x5612390afa90\":                                 \l  %4 = load i64, i64* %t1, align 8\l  %add = add nsw i64 %4, 127\l  store i64 %add, i64* %t1, align 8\l  br label %\"0x5612390afa90 - Virtual Checkpoint\"\l}"];
	Node0x5612390afa90 -> Node0x5612390ad8b0;
	Node0x5612390adb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{\"0x5612390adb60\":                                 \l  ret void\l}"];
}
