digraph "Scop Graph for 'CheckBasicAuthorization' function" {
	label="Scop Graph for 'CheckBasicAuthorization' function";

	Node0x1a56290 [shape=record,label="{entry}"];
	Node0x1a56290 -> Node0x1a79660;
	Node0x1a56290 -> Node0x1a27be0;
	Node0x1a79660 [shape=record,label="{if.then}"];
	Node0x1a79660 -> Node0x1ab2110;
	Node0x1ab2110 [shape=record,label="{return}"];
	Node0x1a27be0 [shape=record,label="{if.end}"];
	Node0x1a27be0 -> Node0x1a11190;
	Node0x1a27be0 -> Node0x1a7a240;
	Node0x1a11190 [shape=record,label="{if.then1}"];
	Node0x1a11190 -> Node0x1a7a240;
	Node0x1a7a240 [shape=record,label="{if.end2}"];
	Node0x1a7a240 -> Node0x1a0e5c0;
	Node0x1a0e5c0 [shape=record,label="{while.cond}"];
	Node0x1a0e5c0 -> Node0x1a2c120;
	Node0x1a0e5c0 -> Node0x1a59360;
	Node0x1a2c120 [shape=record,label="{while.body}"];
	Node0x1a2c120 -> Node0x1a440a0;
	Node0x1a2c120 -> Node0x1a77c80;
	Node0x1a440a0 [shape=record,label="{if.then10}"];
	Node0x1a440a0 -> Node0x1a0e5c0[constraint=false];
	Node0x1a77c80 [shape=record,label="{lor.lhs.false}"];
	Node0x1a77c80 -> Node0x1a440a0;
	Node0x1a77c80 -> Node0x1a8a460;
	Node0x1a8a460 [shape=record,label="{if.end11}"];
	Node0x1a8a460 -> Node0x1a82a20;
	Node0x1a8a460 -> Node0x1a6ad30;
	Node0x1a82a20 [shape=record,label="{if.then15}"];
	Node0x1a82a20 -> Node0x1a0e5c0[constraint=false];
	Node0x1a6ad30 [shape=record,label="{if.end16}"];
	Node0x1a6ad30 -> Node0x1a10c40;
	Node0x1a6ad30 -> Node0x1a81c50;
	Node0x1a10c40 [shape=record,label="{if.then20}"];
	Node0x1a10c40 -> Node0x1a54000;
	Node0x1a54000 [shape=record,label="{if.end73}"];
	Node0x1a54000 -> Node0x1a0e5c0[constraint=false];
	Node0x1a81c50 [shape=record,label="{if.else}"];
	Node0x1a81c50 -> Node0x1a78150;
	Node0x1a81c50 -> Node0x1a912d0;
	Node0x1a78150 [shape=record,label="{if.then25}"];
	Node0x1a78150 -> Node0x1a0aa40;
	Node0x1a78150 -> Node0x1a7d9f0;
	Node0x1a0aa40 [shape=record,label="{if.then28}"];
	Node0x1a0aa40 -> Node0x1a0e5c0[constraint=false];
	Node0x1a7d9f0 [shape=record,label="{if.end29}"];
	Node0x1a7d9f0 -> Node0x1a9ffa0;
	Node0x1a7d9f0 -> Node0x1a92cf0;
	Node0x1a9ffa0 [shape=record,label="{if.then34}"];
	Node0x1a9ffa0 -> Node0x1a0e5c0[constraint=false];
	Node0x1a92cf0 [shape=record,label="{if.end35}"];
	Node0x1a92cf0 -> Node0x1a80800;
	Node0x1a92cf0 -> Node0x1a23480;
	Node0x1a80800 [shape=record,label="{land.lhs.true}"];
	Node0x1a80800 -> Node0x1a0c5d0;
	Node0x1a80800 -> Node0x1a23480;
	Node0x1a0c5d0 [shape=record,label="{if.then40}"];
	Node0x1a0c5d0 -> Node0x1ab2110;
	Node0x1a23480 [shape=record,label="{if.end43}"];
	Node0x1a23480 -> Node0x1a77910;
	Node0x1a77910 [shape=record,label="{if.end72}"];
	Node0x1a77910 -> Node0x1a54000;
	Node0x1a912d0 [shape=record,label="{if.else44}"];
	Node0x1a912d0 -> Node0x1a324f0;
	Node0x1a912d0 -> Node0x1a39ce0;
	Node0x1a324f0 [shape=record,label="{if.then48}"];
	Node0x1a324f0 -> Node0x1a0bc60;
	Node0x1a324f0 -> Node0x1a5c7f0;
	Node0x1a0bc60 [shape=record,label="{if.end52}"];
	Node0x1a0bc60 -> Node0x1a8b360;
	Node0x1a8b360 [shape=record,label="{if.end71}"];
	Node0x1a8b360 -> Node0x1a77910;
	Node0x1a5c7f0 [shape=record,label="{if.then50}"];
	Node0x1a5c7f0 -> Node0x1ab2110;
	Node0x1a39ce0 [shape=record,label="{if.else53}"];
	Node0x1a39ce0 -> Node0x1ac8160;
	Node0x1a39ce0 -> Node0x1a542b0;
	Node0x1ac8160 [shape=record,label="{if.then57}"];
	Node0x1ac8160 -> Node0x1a677d0;
	Node0x1ac8160 -> Node0x19f9910;
	Node0x1a677d0 [shape=record,label="{if.end61}"];
	Node0x1a677d0 -> Node0x1ac7dc0;
	Node0x1ac7dc0 [shape=record,label="{if.end70}"];
	Node0x1ac7dc0 -> Node0x1a8b360;
	Node0x19f9910 [shape=record,label="{if.then59}"];
	Node0x19f9910 -> Node0x1ab2110;
	Node0x1a542b0 [shape=record,label="{if.else62}"];
	Node0x1a542b0 -> Node0x1a35f10;
	Node0x1a542b0 -> Node0x19fb910;
	Node0x1a35f10 [shape=record,label="{if.then66}"];
	Node0x1a35f10 -> Node0x1ab2110;
	Node0x19fb910 [shape=record,label="{if.else68}"];
	Node0x19fb910 -> Node0x1ab2110;
	Node0x1a59360 [shape=record,label="{while.end}"];
	Node0x1a59360 -> Node0x1ab2110;
	colorscheme = "paired12"
        subgraph cluster_0x1ab53e0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x1b18030 {
            label = "Region containing entry block of function is invalid!";
            style = solid;
            color = 6
            subgraph cluster_0x1b17fb0 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              Node0x1a27be0;
              Node0x1a11190;
            }
            subgraph cluster_0x1ab52e0 {
              label = "Loop while.cond has multiple exits.";
              style = solid;
              color = 5
              subgraph cluster_0x1ab4ed0 {
                label = "Region can not profitably be optimized!";
                style = solid;
                color = 7
                Node0x1a542b0;
                Node0x1a35f10;
                Node0x19fb910;
              }
              Node0x1a0e5c0;
              Node0x1a2c120;
              Node0x1a440a0;
              Node0x1a77c80;
              Node0x1a8a460;
              Node0x1a82a20;
              Node0x1a6ad30;
              Node0x1a10c40;
              Node0x1a54000;
              Node0x1a81c50;
              Node0x1a78150;
              Node0x1a0aa40;
              Node0x1a7d9f0;
              Node0x1a9ffa0;
              Node0x1a92cf0;
              Node0x1a80800;
              Node0x1a0c5d0;
              Node0x1a23480;
              Node0x1a77910;
              Node0x1a912d0;
              Node0x1a324f0;
              Node0x1a0bc60;
              Node0x1a8b360;
              Node0x1a5c7f0;
              Node0x1a39ce0;
              Node0x1ac8160;
              Node0x1a677d0;
              Node0x1ac7dc0;
              Node0x19f9910;
              Node0x1a59360;
            }
            Node0x1a56290;
            Node0x1a79660;
            Node0x1a7a240;
          }
          Node0x1ab2110;
        }
}
