digraph "Region Graph for 'uInt64_from_UInt32s' function" {
	label="Region Graph for 'uInt64_from_UInt32s' function";

	Node0xb686b0 [shape=record,label="{%3:\l  %4 = alloca %struct.UInt64*, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  store %struct.UInt64* %0, %struct.UInt64** %4, align 8\l  store i32 %1, i32* %5, align 4\l  store i32 %2, i32* %6, align 4\l  %7 = load i32, i32* %6, align 4\l  %8 = lshr i32 %7, 24\l  %9 = and i32 %8, 255\l  %10 = trunc i32 %9 to i8\l  %11 = load %struct.UInt64*, %struct.UInt64** %4, align 8\l  %12 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %11, i32 0, i32\l... 0\l  %13 = getelementptr inbounds [8 x i8], [8 x i8]* %12, i64 0, i64 7\l  store i8 %10, i8* %13, align 1\l  %14 = load i32, i32* %6, align 4\l  %15 = lshr i32 %14, 16\l  %16 = and i32 %15, 255\l  %17 = trunc i32 %16 to i8\l  %18 = load %struct.UInt64*, %struct.UInt64** %4, align 8\l  %19 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %18, i32 0, i32\l... 0\l  %20 = getelementptr inbounds [8 x i8], [8 x i8]* %19, i64 0, i64 6\l  store i8 %17, i8* %20, align 1\l  %21 = load i32, i32* %6, align 4\l  %22 = lshr i32 %21, 8\l  %23 = and i32 %22, 255\l  %24 = trunc i32 %23 to i8\l  %25 = load %struct.UInt64*, %struct.UInt64** %4, align 8\l  %26 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %25, i32 0, i32\l... 0\l  %27 = getelementptr inbounds [8 x i8], [8 x i8]* %26, i64 0, i64 5\l  store i8 %24, i8* %27, align 1\l  %28 = load i32, i32* %6, align 4\l  %29 = and i32 %28, 255\l  %30 = trunc i32 %29 to i8\l  %31 = load %struct.UInt64*, %struct.UInt64** %4, align 8\l  %32 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %31, i32 0, i32\l... 0\l  %33 = getelementptr inbounds [8 x i8], [8 x i8]* %32, i64 0, i64 4\l  store i8 %30, i8* %33, align 1\l  %34 = load i32, i32* %5, align 4\l  %35 = lshr i32 %34, 24\l  %36 = and i32 %35, 255\l  %37 = trunc i32 %36 to i8\l  %38 = load %struct.UInt64*, %struct.UInt64** %4, align 8\l  %39 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %38, i32 0, i32\l... 0\l  %40 = getelementptr inbounds [8 x i8], [8 x i8]* %39, i64 0, i64 3\l  store i8 %37, i8* %40, align 1\l  %41 = load i32, i32* %5, align 4\l  %42 = lshr i32 %41, 16\l  %43 = and i32 %42, 255\l  %44 = trunc i32 %43 to i8\l  %45 = load %struct.UInt64*, %struct.UInt64** %4, align 8\l  %46 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %45, i32 0, i32\l... 0\l  %47 = getelementptr inbounds [8 x i8], [8 x i8]* %46, i64 0, i64 2\l  store i8 %44, i8* %47, align 1\l  %48 = load i32, i32* %5, align 4\l  %49 = lshr i32 %48, 8\l  %50 = and i32 %49, 255\l  %51 = trunc i32 %50 to i8\l  %52 = load %struct.UInt64*, %struct.UInt64** %4, align 8\l  %53 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %52, i32 0, i32\l... 0\l  %54 = getelementptr inbounds [8 x i8], [8 x i8]* %53, i64 0, i64 1\l  store i8 %51, i8* %54, align 1\l  %55 = load i32, i32* %5, align 4\l  %56 = and i32 %55, 255\l  %57 = trunc i32 %56 to i8\l  %58 = load %struct.UInt64*, %struct.UInt64** %4, align 8\l  %59 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %58, i32 0, i32\l... 0\l  %60 = getelementptr inbounds [8 x i8], [8 x i8]* %59, i64 0, i64 0\l  store i8 %57, i8* %60, align 1\l  ret void\l}"];
	colorscheme = "paired12"
        subgraph cluster_0xc3fe80 {
          label = "";
          style = filled;
          color = 1
          Node0xb686b0;
        }
}
